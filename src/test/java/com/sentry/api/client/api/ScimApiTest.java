/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.api;

import com.sentry.api.client.*;
import com.sentry.api.client.auth.*;
import com.sentry.api.client.model.ListAnOrganizationSMembers200Response;
import com.sentry.api.client.model.ListAnOrganizationSMembers200ResponseResourcesInner;
import com.sentry.api.client.model.ListAnOrganizationSPaginatedTeams200Response;
import com.sentry.api.client.model.ListAnOrganizationSPaginatedTeams200ResponseResourcesInner;
import com.sentry.api.client.model.ProvisionANewOrganizationMemberRequest;
import com.sentry.api.client.model.ProvisionANewTeamRequest;
import com.sentry.api.client.model.QueryAnIndividualTeam200Response;
import com.sentry.api.client.model.UpdateATeamSAttributesRequest;
import com.sentry.api.client.model.UpdateAnOrganizationMemberSAttributesRequest;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScimApi
 */
public class ScimApiTest {

    private final ScimApi api = new ScimApi();

    /**
     * Delete a team with a SCIM Group DELETE Request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAnIndividualTeamTest() throws ApiException {
        //String organizationSlug = null;
        //Integer teamId = null;
        //api.deleteAnIndividualTeam(organizationSlug, teamId);
        // TODO: test validations
    }

    /**
     * Delete an organization member with a SCIM User DELETE Request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAnOrganizationMemberViaSCIMTest() throws ApiException {
        //String organizationSlug = null;
        //Integer memberId = null;
        //api.deleteAnOrganizationMemberViaSCIM(organizationSlug, memberId);
        // TODO: test validations
    }

    /**
     * Returns a paginated list of members bound to a organization with a SCIM Users GET Request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAnOrganizationsMembersTest() throws ApiException {
        //String organizationSlug = null;
        //Integer startIndex = null;
        //Integer count = null;
        //String filter = null;
        //List<String> excludedAttributes = null;
        //ListAnOrganizationSMembers200Response response = api.listAnOrganizationsMembers(organizationSlug, startIndex, count, filter, excludedAttributes);
        // TODO: test validations
    }

    /**
     * Returns a paginated list of teams bound to a organization with a SCIM Groups GET Request. - Note that the members field will only contain up to 10000 members.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAnOrganizationsPaginatedTeamsTest() throws ApiException {
        //String organizationSlug = null;
        //Integer startIndex = null;
        //String filter = null;
        //Integer count = null;
        //String excludedAttributes = null;
        //ListAnOrganizationSPaginatedTeams200Response response = api.listAnOrganizationsPaginatedTeams(organizationSlug, startIndex, filter, count, excludedAttributes);
        // TODO: test validations
    }

    /**
     * Create a new Organization Member via a SCIM Users POST Request. - &#x60;userName&#x60; should be set to the SAML field used for email, and active should be set to &#x60;true&#x60;. - &#x60;sentryOrgRole&#x60; can only be &#x60;admin&#x60;, &#x60;manager&#x60;, &#x60;billing&#x60;, or &#x60;member&#x60;. - Sentry&#39;s SCIM API doesn&#39;t currently support setting users to inactive, and the member will be deleted if active is set to &#x60;false&#x60;. - The API also does not support setting secondary emails.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void provisionANewOrganizationMemberTest() throws ApiException {
        //String organizationSlug = null;
        //ProvisionANewOrganizationMemberRequest provisionANewOrganizationMemberRequest = null;
        //ListAnOrganizationSMembers200ResponseResourcesInner response = api.provisionANewOrganizationMember(organizationSlug, provisionANewOrganizationMemberRequest);
        // TODO: test validations
    }

    /**
     * Create a new team bound to an organization via a SCIM Groups POST Request. Note that teams are always created with an empty member set. The endpoint will also do a normalization of uppercase / spaces to lowercase and dashes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void provisionANewTeamTest() throws ApiException {
        //String organizationSlug = null;
        //ProvisionANewTeamRequest provisionANewTeamRequest = null;
        //ListAnOrganizationSPaginatedTeams200ResponseResourcesInner response = api.provisionANewTeam(organizationSlug, provisionANewTeamRequest);
        // TODO: test validations
    }

    /**
     * Query an individual organization member with a SCIM User GET Request. - The &#x60;name&#x60; object will contain fields &#x60;firstName&#x60; and &#x60;lastName&#x60; with the values of &#x60;N/A&#x60;. Sentry&#39;s SCIM API does not currently support these fields but returns them for compatibility purposes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryAnIndividualOrganizationMemberTest() throws ApiException {
        //String organizationSlug = null;
        //Integer memberId = null;
        //ListAnOrganizationSMembers200ResponseResourcesInner response = api.queryAnIndividualOrganizationMember(organizationSlug, memberId);
        // TODO: test validations
    }

    /**
     * Query an individual team with a SCIM Group GET Request. - Note that the members field will only contain up to 10000 members.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryAnIndividualTeamTest() throws ApiException {
        //Integer teamId = null;
        //String organizationSlug = null;
        //QueryAnIndividualTeam200Response response = api.queryAnIndividualTeam(teamId, organizationSlug);
        // TODO: test validations
    }

    /**
     * Update a team&#39;s attributes with a SCIM Group PATCH Request. Valid operations are:  * Renaming a team: &#x60;&#x60;&#x60;json {     \&quot;Operations\&quot;: [{         \&quot;op\&quot;: \&quot;replace\&quot;,         \&quot;value\&quot;: {             \&quot;id\&quot;: 23,             \&quot;displayName\&quot;: \&quot;newName\&quot;         }     }] } &#x60;&#x60;&#x60; * Adding a member to a team: &#x60;&#x60;&#x60;json {     \&quot;Operations\&quot;: [{         \&quot;op\&quot;: \&quot;add\&quot;,         \&quot;path\&quot;: \&quot;members\&quot;,         \&quot;value\&quot;: [             {                 \&quot;value\&quot;: 23,                 \&quot;display\&quot;: \&quot;testexample@example.com\&quot;             }         ]     }] } &#x60;&#x60;&#x60; * Removing a member from a team: &#x60;&#x60;&#x60;json {     \&quot;Operations\&quot;: [{         \&quot;op\&quot;: \&quot;remove\&quot;,         \&quot;path\&quot;: \&quot;members[value eq \&quot;23\&quot;]\&quot;     }] } &#x60;&#x60;&#x60; * Replacing an entire member set of a team: &#x60;&#x60;&#x60;json {     \&quot;Operations\&quot;: [{         \&quot;op\&quot;: \&quot;replace\&quot;,         \&quot;path\&quot;: \&quot;members\&quot;,         \&quot;value\&quot;: [             {                 \&quot;value\&quot;: 23,                 \&quot;display\&quot;: \&quot;testexample2@sentry.io\&quot;             },             {                 \&quot;value\&quot;: 24,                 \&quot;display\&quot;: \&quot;testexample3@sentry.io\&quot;             }         ]     }] } &#x60;&#x60;&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateATeamsAttributesTest() throws ApiException {
        //String organizationSlug = null;
        //Integer teamId = null;
        //UpdateATeamSAttributesRequest updateATeamSAttributesRequest = null;
        //api.updateATeamsAttributes(organizationSlug, teamId, updateATeamSAttributesRequest);
        // TODO: test validations
    }

    /**
     * Update an organization member&#39;s attributes with a SCIM PATCH Request. The only supported attribute is &#x60;active&#x60;. After setting &#x60;active&#x60; to false Sentry will permanently delete the Organization Member.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAnOrganizationMembersAttributesTest() throws ApiException {
        //String organizationSlug = null;
        //Integer memberId = null;
        //UpdateAnOrganizationMemberSAttributesRequest updateAnOrganizationMemberSAttributesRequest = null;
        //api.updateAnOrganizationMembersAttributes(organizationSlug, memberId, updateAnOrganizationMemberSAttributesRequest);
        // TODO: test validations
    }

}
