/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.api;

import com.sentry.api.client.ApiCallback;
import com.sentry.api.client.ApiClient;
import com.sentry.api.client.ApiException;
import com.sentry.api.client.ApiResponse;
import com.sentry.api.client.Configuration;
import com.sentry.api.client.Pair;
import com.sentry.api.client.ProgressRequestBody;
import com.sentry.api.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.time.OffsetDateTime;
import com.sentry.api.client.model.QueryDiscoverEventsInTableFormat200Response;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import jakarta.ws.rs.core.GenericType;

public class DiscoverApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DiscoverApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DiscoverApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for queryDiscoverEventsInTableFormat
     * @param organizationSlug The slug of the organization the resource belongs to. (required)
     * @param field The fields, functions, or equations to request for the query. At most 20 fields can be selected per request. Each field can be one of the following types: - A built-in key field. See possible fields in the [properties table](/product/sentry-basics/search/searchable-properties/#properties-table), under any field that is an event property     - example: &#x60;field&#x3D;transaction&#x60; - A tag. Tags should use the &#x60;tag[]&#x60; formatting to avoid ambiguity with any fields     - example: &#x60;field&#x3D;tag[isEnterprise]&#x60; - A function which will be in the format of &#x60;function_name(parameters,...)&#x60;. See possible functions in the [query builder documentation](/product/discover-queries/query-builder/#stacking-functions)     - when a function is included, Discover will group by any tags or fields     - example: &#x60;field&#x3D;count_if(transaction.duration,greater,300)&#x60; - An equation when prefixed with &#x60;equation|&#x60;. Read more about [equations here](https://docs.sentry.io/product/discover-queries/query-builder/query-equations/)     - example: &#x60;field&#x3D;equation|count_if(transaction.duration,greater,300) / count() * 100&#x60;  (required)
     * @param end The end of the period of time for the query, expected in ISO-8601 format. For example &#x60;2001-12-14T12:34:56.7890&#x60; (optional)
     * @param environment The name of environments to filter by. (optional)
     * @param project The ids of projects to filter by. &#x60;-1&#x60; means all available projects. If thisÂ parameter is omitted, the request will default to using &#39;My Projects&#39; (optional)
     * @param start The start of the period of time for the query, expected in ISO-8601 format. For example &#x60;2001-12-14T12:34:56.7890&#x60; (optional)
     * @param statsPeriod The period of time for the query, will override the start &amp; end parameters, a number followed by one of: - &#x60;d&#x60; for days - &#x60;h&#x60; for hours - &#x60;m&#x60; for minutes - &#x60;s&#x60; for seconds - &#x60;w&#x60; for weeks  For example &#x60;24h&#x60;, to mean query data starting from 24 hours ago to now. (optional)
     * @param perPage Limit the number of rows to return in the result. Default and maximum allowed is 100. (optional)
     * @param query The search filter for your query, read more about query syntax [here](https://docs.sentry.io/product/sentry-basics/search/)  example: &#x60;query&#x3D;(transaction:foo AND release:abc) OR (transaction:[bar,baz] AND release:def)&#x60;  (optional)
     * @param sort What to order the results of the query by. Must be something in the &#x60;field&#x60; list, excluding equations. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid Query </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call queryDiscoverEventsInTableFormatCall(String organizationSlug, List<String> field, OffsetDateTime end, List<String> environment, List<Integer> project, OffsetDateTime start, String statsPeriod, Integer perPage, String query, String sort, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/0/organizations/{organization_slug}/events/"
            .replace("{" + "organization_slug" + "}", localVarApiClient.escapeString(organizationSlug.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (end != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("end", end));
        }

        if (environment != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "environment", environment));
        }

        if (project != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "project", project));
        }

        if (start != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("start", start));
        }

        if (statsPeriod != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("statsPeriod", statsPeriod));
        }

        if (field != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "field", field));
        }

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("per_page", perPage));
        }

        if (query != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("query", query));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "auth_token" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call queryDiscoverEventsInTableFormatValidateBeforeCall(String organizationSlug, List<String> field, OffsetDateTime end, List<String> environment, List<Integer> project, OffsetDateTime start, String statsPeriod, Integer perPage, String query, String sort, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'organizationSlug' is set
        if (organizationSlug == null) {
            throw new ApiException("Missing the required parameter 'organizationSlug' when calling queryDiscoverEventsInTableFormat(Async)");
        }

        // verify the required parameter 'field' is set
        if (field == null) {
            throw new ApiException("Missing the required parameter 'field' when calling queryDiscoverEventsInTableFormat(Async)");
        }

        return queryDiscoverEventsInTableFormatCall(organizationSlug, field, end, environment, project, start, statsPeriod, perPage, query, sort, _callback);

    }

    /**
     * 
     * Retrieves discover (also known as events) data for a given organization.  **Eventsv2 Deprecation Note**: Users who may be using the &#x60;eventsv2&#x60; endpoint should update their requests to the &#x60;events&#x60; endpoint outline in this document. The &#x60;eventsv2&#x60; endpoint is not a public endpoint and has no guaranteed availability. If you are not making any API calls to &#x60;eventsv2&#x60;, you can safely ignore this. Changes between &#x60;eventsv2&#x60; and &#x60;events&#x60; include: - Field keys in the response now match the keys in the requested &#x60;field&#x60; param exactly. - The &#x60;meta&#x60; object in the response now shows types in the nested &#x60;field&#x60; object.  Aside from the url change, there are no changes to the request payload itself.  **Note**: This endpoint is intended to get a table of results, and is not for doing a full export of data sent to Sentry.  The &#x60;field&#x60; query parameter determines what fields will be selected in the &#x60;data&#x60; and &#x60;meta&#x60; keys of the endpoint response. - The &#x60;data&#x60; key contains a list of results row by row that match the &#x60;query&#x60; made - The &#x60;meta&#x60; key contains information about the response, including the unit or type of the fields requested
     * @param organizationSlug The slug of the organization the resource belongs to. (required)
     * @param field The fields, functions, or equations to request for the query. At most 20 fields can be selected per request. Each field can be one of the following types: - A built-in key field. See possible fields in the [properties table](/product/sentry-basics/search/searchable-properties/#properties-table), under any field that is an event property     - example: &#x60;field&#x3D;transaction&#x60; - A tag. Tags should use the &#x60;tag[]&#x60; formatting to avoid ambiguity with any fields     - example: &#x60;field&#x3D;tag[isEnterprise]&#x60; - A function which will be in the format of &#x60;function_name(parameters,...)&#x60;. See possible functions in the [query builder documentation](/product/discover-queries/query-builder/#stacking-functions)     - when a function is included, Discover will group by any tags or fields     - example: &#x60;field&#x3D;count_if(transaction.duration,greater,300)&#x60; - An equation when prefixed with &#x60;equation|&#x60;. Read more about [equations here](https://docs.sentry.io/product/discover-queries/query-builder/query-equations/)     - example: &#x60;field&#x3D;equation|count_if(transaction.duration,greater,300) / count() * 100&#x60;  (required)
     * @param end The end of the period of time for the query, expected in ISO-8601 format. For example &#x60;2001-12-14T12:34:56.7890&#x60; (optional)
     * @param environment The name of environments to filter by. (optional)
     * @param project The ids of projects to filter by. &#x60;-1&#x60; means all available projects. If thisÂ parameter is omitted, the request will default to using &#39;My Projects&#39; (optional)
     * @param start The start of the period of time for the query, expected in ISO-8601 format. For example &#x60;2001-12-14T12:34:56.7890&#x60; (optional)
     * @param statsPeriod The period of time for the query, will override the start &amp; end parameters, a number followed by one of: - &#x60;d&#x60; for days - &#x60;h&#x60; for hours - &#x60;m&#x60; for minutes - &#x60;s&#x60; for seconds - &#x60;w&#x60; for weeks  For example &#x60;24h&#x60;, to mean query data starting from 24 hours ago to now. (optional)
     * @param perPage Limit the number of rows to return in the result. Default and maximum allowed is 100. (optional)
     * @param query The search filter for your query, read more about query syntax [here](https://docs.sentry.io/product/sentry-basics/search/)  example: &#x60;query&#x3D;(transaction:foo AND release:abc) OR (transaction:[bar,baz] AND release:def)&#x60;  (optional)
     * @param sort What to order the results of the query by. Must be something in the &#x60;field&#x60; list, excluding equations. (optional)
     * @return QueryDiscoverEventsInTableFormat200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid Query </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public QueryDiscoverEventsInTableFormat200Response queryDiscoverEventsInTableFormat(String organizationSlug, List<String> field, OffsetDateTime end, List<String> environment, List<Integer> project, OffsetDateTime start, String statsPeriod, Integer perPage, String query, String sort) throws ApiException {
        ApiResponse<QueryDiscoverEventsInTableFormat200Response> localVarResp = queryDiscoverEventsInTableFormatWithHttpInfo(organizationSlug, field, end, environment, project, start, statsPeriod, perPage, query, sort);
        return localVarResp.getData();
    }

    /**
     * 
     * Retrieves discover (also known as events) data for a given organization.  **Eventsv2 Deprecation Note**: Users who may be using the &#x60;eventsv2&#x60; endpoint should update their requests to the &#x60;events&#x60; endpoint outline in this document. The &#x60;eventsv2&#x60; endpoint is not a public endpoint and has no guaranteed availability. If you are not making any API calls to &#x60;eventsv2&#x60;, you can safely ignore this. Changes between &#x60;eventsv2&#x60; and &#x60;events&#x60; include: - Field keys in the response now match the keys in the requested &#x60;field&#x60; param exactly. - The &#x60;meta&#x60; object in the response now shows types in the nested &#x60;field&#x60; object.  Aside from the url change, there are no changes to the request payload itself.  **Note**: This endpoint is intended to get a table of results, and is not for doing a full export of data sent to Sentry.  The &#x60;field&#x60; query parameter determines what fields will be selected in the &#x60;data&#x60; and &#x60;meta&#x60; keys of the endpoint response. - The &#x60;data&#x60; key contains a list of results row by row that match the &#x60;query&#x60; made - The &#x60;meta&#x60; key contains information about the response, including the unit or type of the fields requested
     * @param organizationSlug The slug of the organization the resource belongs to. (required)
     * @param field The fields, functions, or equations to request for the query. At most 20 fields can be selected per request. Each field can be one of the following types: - A built-in key field. See possible fields in the [properties table](/product/sentry-basics/search/searchable-properties/#properties-table), under any field that is an event property     - example: &#x60;field&#x3D;transaction&#x60; - A tag. Tags should use the &#x60;tag[]&#x60; formatting to avoid ambiguity with any fields     - example: &#x60;field&#x3D;tag[isEnterprise]&#x60; - A function which will be in the format of &#x60;function_name(parameters,...)&#x60;. See possible functions in the [query builder documentation](/product/discover-queries/query-builder/#stacking-functions)     - when a function is included, Discover will group by any tags or fields     - example: &#x60;field&#x3D;count_if(transaction.duration,greater,300)&#x60; - An equation when prefixed with &#x60;equation|&#x60;. Read more about [equations here](https://docs.sentry.io/product/discover-queries/query-builder/query-equations/)     - example: &#x60;field&#x3D;equation|count_if(transaction.duration,greater,300) / count() * 100&#x60;  (required)
     * @param end The end of the period of time for the query, expected in ISO-8601 format. For example &#x60;2001-12-14T12:34:56.7890&#x60; (optional)
     * @param environment The name of environments to filter by. (optional)
     * @param project The ids of projects to filter by. &#x60;-1&#x60; means all available projects. If thisÂ parameter is omitted, the request will default to using &#39;My Projects&#39; (optional)
     * @param start The start of the period of time for the query, expected in ISO-8601 format. For example &#x60;2001-12-14T12:34:56.7890&#x60; (optional)
     * @param statsPeriod The period of time for the query, will override the start &amp; end parameters, a number followed by one of: - &#x60;d&#x60; for days - &#x60;h&#x60; for hours - &#x60;m&#x60; for minutes - &#x60;s&#x60; for seconds - &#x60;w&#x60; for weeks  For example &#x60;24h&#x60;, to mean query data starting from 24 hours ago to now. (optional)
     * @param perPage Limit the number of rows to return in the result. Default and maximum allowed is 100. (optional)
     * @param query The search filter for your query, read more about query syntax [here](https://docs.sentry.io/product/sentry-basics/search/)  example: &#x60;query&#x3D;(transaction:foo AND release:abc) OR (transaction:[bar,baz] AND release:def)&#x60;  (optional)
     * @param sort What to order the results of the query by. Must be something in the &#x60;field&#x60; list, excluding equations. (optional)
     * @return ApiResponse&lt;QueryDiscoverEventsInTableFormat200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid Query </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<QueryDiscoverEventsInTableFormat200Response> queryDiscoverEventsInTableFormatWithHttpInfo(String organizationSlug, List<String> field, OffsetDateTime end, List<String> environment, List<Integer> project, OffsetDateTime start, String statsPeriod, Integer perPage, String query, String sort) throws ApiException {
        okhttp3.Call localVarCall = queryDiscoverEventsInTableFormatValidateBeforeCall(organizationSlug, field, end, environment, project, start, statsPeriod, perPage, query, sort, null);
        Type localVarReturnType = new TypeToken<QueryDiscoverEventsInTableFormat200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Retrieves discover (also known as events) data for a given organization.  **Eventsv2 Deprecation Note**: Users who may be using the &#x60;eventsv2&#x60; endpoint should update their requests to the &#x60;events&#x60; endpoint outline in this document. The &#x60;eventsv2&#x60; endpoint is not a public endpoint and has no guaranteed availability. If you are not making any API calls to &#x60;eventsv2&#x60;, you can safely ignore this. Changes between &#x60;eventsv2&#x60; and &#x60;events&#x60; include: - Field keys in the response now match the keys in the requested &#x60;field&#x60; param exactly. - The &#x60;meta&#x60; object in the response now shows types in the nested &#x60;field&#x60; object.  Aside from the url change, there are no changes to the request payload itself.  **Note**: This endpoint is intended to get a table of results, and is not for doing a full export of data sent to Sentry.  The &#x60;field&#x60; query parameter determines what fields will be selected in the &#x60;data&#x60; and &#x60;meta&#x60; keys of the endpoint response. - The &#x60;data&#x60; key contains a list of results row by row that match the &#x60;query&#x60; made - The &#x60;meta&#x60; key contains information about the response, including the unit or type of the fields requested
     * @param organizationSlug The slug of the organization the resource belongs to. (required)
     * @param field The fields, functions, or equations to request for the query. At most 20 fields can be selected per request. Each field can be one of the following types: - A built-in key field. See possible fields in the [properties table](/product/sentry-basics/search/searchable-properties/#properties-table), under any field that is an event property     - example: &#x60;field&#x3D;transaction&#x60; - A tag. Tags should use the &#x60;tag[]&#x60; formatting to avoid ambiguity with any fields     - example: &#x60;field&#x3D;tag[isEnterprise]&#x60; - A function which will be in the format of &#x60;function_name(parameters,...)&#x60;. See possible functions in the [query builder documentation](/product/discover-queries/query-builder/#stacking-functions)     - when a function is included, Discover will group by any tags or fields     - example: &#x60;field&#x3D;count_if(transaction.duration,greater,300)&#x60; - An equation when prefixed with &#x60;equation|&#x60;. Read more about [equations here](https://docs.sentry.io/product/discover-queries/query-builder/query-equations/)     - example: &#x60;field&#x3D;equation|count_if(transaction.duration,greater,300) / count() * 100&#x60;  (required)
     * @param end The end of the period of time for the query, expected in ISO-8601 format. For example &#x60;2001-12-14T12:34:56.7890&#x60; (optional)
     * @param environment The name of environments to filter by. (optional)
     * @param project The ids of projects to filter by. &#x60;-1&#x60; means all available projects. If thisÂ parameter is omitted, the request will default to using &#39;My Projects&#39; (optional)
     * @param start The start of the period of time for the query, expected in ISO-8601 format. For example &#x60;2001-12-14T12:34:56.7890&#x60; (optional)
     * @param statsPeriod The period of time for the query, will override the start &amp; end parameters, a number followed by one of: - &#x60;d&#x60; for days - &#x60;h&#x60; for hours - &#x60;m&#x60; for minutes - &#x60;s&#x60; for seconds - &#x60;w&#x60; for weeks  For example &#x60;24h&#x60;, to mean query data starting from 24 hours ago to now. (optional)
     * @param perPage Limit the number of rows to return in the result. Default and maximum allowed is 100. (optional)
     * @param query The search filter for your query, read more about query syntax [here](https://docs.sentry.io/product/sentry-basics/search/)  example: &#x60;query&#x3D;(transaction:foo AND release:abc) OR (transaction:[bar,baz] AND release:def)&#x60;  (optional)
     * @param sort What to order the results of the query by. Must be something in the &#x60;field&#x60; list, excluding equations. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid Query </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call queryDiscoverEventsInTableFormatAsync(String organizationSlug, List<String> field, OffsetDateTime end, List<String> environment, List<Integer> project, OffsetDateTime start, String statsPeriod, Integer perPage, String query, String sort, final ApiCallback<QueryDiscoverEventsInTableFormat200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = queryDiscoverEventsInTableFormatValidateBeforeCall(organizationSlug, field, end, environment, project, start, statsPeriod, perPage, query, sort, _callback);
        Type localVarReturnType = new TypeToken<QueryDiscoverEventsInTableFormat200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
