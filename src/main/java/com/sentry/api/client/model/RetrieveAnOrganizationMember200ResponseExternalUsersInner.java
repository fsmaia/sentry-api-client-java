/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.sentry.api.client.JSON;


/**
 * RetrieveAnOrganizationMember200ResponseExternalUsersInner
 */
@JsonPropertyOrder({
  RetrieveAnOrganizationMember200ResponseExternalUsersInner.JSON_PROPERTY_EXTERNAL_ID,
  RetrieveAnOrganizationMember200ResponseExternalUsersInner.JSON_PROPERTY_USER_ID,
  RetrieveAnOrganizationMember200ResponseExternalUsersInner.JSON_PROPERTY_TEAM_ID,
  RetrieveAnOrganizationMember200ResponseExternalUsersInner.JSON_PROPERTY_ID,
  RetrieveAnOrganizationMember200ResponseExternalUsersInner.JSON_PROPERTY_PROVIDER,
  RetrieveAnOrganizationMember200ResponseExternalUsersInner.JSON_PROPERTY_EXTERNAL_NAME,
  RetrieveAnOrganizationMember200ResponseExternalUsersInner.JSON_PROPERTY_INTEGRATION_ID
})
@JsonTypeName("Retrieve_an_Organization_Member_200_response_externalUsers_inner")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-16T12:58:30.193453Z[Etc/UTC]")
public class RetrieveAnOrganizationMember200ResponseExternalUsersInner {
  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  private String externalId;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private String userId;

  public static final String JSON_PROPERTY_TEAM_ID = "teamId";
  private String teamId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_PROVIDER = "provider";
  private String provider;

  public static final String JSON_PROPERTY_EXTERNAL_NAME = "externalName";
  private String externalName;

  public static final String JSON_PROPERTY_INTEGRATION_ID = "integrationId";
  private String integrationId;

  public RetrieveAnOrganizationMember200ResponseExternalUsersInner() { 
  }

  public RetrieveAnOrganizationMember200ResponseExternalUsersInner externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * Get externalId
   * @return externalId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalId() {
    return externalId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public RetrieveAnOrganizationMember200ResponseExternalUsersInner userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(String userId) {
    this.userId = userId;
  }


  public RetrieveAnOrganizationMember200ResponseExternalUsersInner teamId(String teamId) {
    this.teamId = teamId;
    return this;
  }

   /**
   * Get teamId
   * @return teamId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTeamId() {
    return teamId;
  }


  @JsonProperty(JSON_PROPERTY_TEAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTeamId(String teamId) {
    this.teamId = teamId;
  }


  public RetrieveAnOrganizationMember200ResponseExternalUsersInner id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public RetrieveAnOrganizationMember200ResponseExternalUsersInner provider(String provider) {
    this.provider = provider;
    return this;
  }

   /**
   * Get provider
   * @return provider
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProvider() {
    return provider;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProvider(String provider) {
    this.provider = provider;
  }


  public RetrieveAnOrganizationMember200ResponseExternalUsersInner externalName(String externalName) {
    this.externalName = externalName;
    return this;
  }

   /**
   * Get externalName
   * @return externalName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXTERNAL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExternalName() {
    return externalName;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExternalName(String externalName) {
    this.externalName = externalName;
  }


  public RetrieveAnOrganizationMember200ResponseExternalUsersInner integrationId(String integrationId) {
    this.integrationId = integrationId;
    return this;
  }

   /**
   * Get integrationId
   * @return integrationId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INTEGRATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIntegrationId() {
    return integrationId;
  }


  @JsonProperty(JSON_PROPERTY_INTEGRATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIntegrationId(String integrationId) {
    this.integrationId = integrationId;
  }


  /**
   * Return true if this Retrieve_an_Organization_Member_200_response_externalUsers_inner object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveAnOrganizationMember200ResponseExternalUsersInner retrieveAnOrganizationMember200ResponseExternalUsersInner = (RetrieveAnOrganizationMember200ResponseExternalUsersInner) o;
    return Objects.equals(this.externalId, retrieveAnOrganizationMember200ResponseExternalUsersInner.externalId) &&
        Objects.equals(this.userId, retrieveAnOrganizationMember200ResponseExternalUsersInner.userId) &&
        Objects.equals(this.teamId, retrieveAnOrganizationMember200ResponseExternalUsersInner.teamId) &&
        Objects.equals(this.id, retrieveAnOrganizationMember200ResponseExternalUsersInner.id) &&
        Objects.equals(this.provider, retrieveAnOrganizationMember200ResponseExternalUsersInner.provider) &&
        Objects.equals(this.externalName, retrieveAnOrganizationMember200ResponseExternalUsersInner.externalName) &&
        Objects.equals(this.integrationId, retrieveAnOrganizationMember200ResponseExternalUsersInner.integrationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(externalId, userId, teamId, id, provider, externalName, integrationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveAnOrganizationMember200ResponseExternalUsersInner {\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    externalName: ").append(toIndentedString(externalName)).append("\n");
    sb.append("    integrationId: ").append(toIndentedString(integrationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

