/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.sentry.api.client.JSON;

/**
 * RetrieveAnIssue200ResponseStats
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-16T12:40:29.777755Z[Etc/UTC]")
public class RetrieveAnIssue200ResponseStats {
  public static final String SERIALIZED_NAME_24H = "24h";
  @SerializedName(SERIALIZED_NAME_24H)
  private List<List<BigDecimal>> _24h;

  public static final String SERIALIZED_NAME_30D = "30d";
  @SerializedName(SERIALIZED_NAME_30D)
  private List<List<BigDecimal>> _30d;

  public RetrieveAnIssue200ResponseStats() {
  }

  public RetrieveAnIssue200ResponseStats _24h(List<List<BigDecimal>> _24h) {
    
    this._24h = _24h;
    return this;
  }

  public RetrieveAnIssue200ResponseStats add24hItem(List<BigDecimal> _24hItem) {
    if (this._24h == null) {
      this._24h = new ArrayList<>();
    }
    this._24h.add(_24hItem);
    return this;
  }

   /**
   * Get _24h
   * @return _24h
  **/
  @javax.annotation.Nullable
  public List<List<BigDecimal>> get24h() {
    return _24h;
  }


  public void set24h(List<List<BigDecimal>> _24h) {
    this._24h = _24h;
  }


  public RetrieveAnIssue200ResponseStats _30d(List<List<BigDecimal>> _30d) {
    
    this._30d = _30d;
    return this;
  }

  public RetrieveAnIssue200ResponseStats add30dItem(List<BigDecimal> _30dItem) {
    if (this._30d == null) {
      this._30d = new ArrayList<>();
    }
    this._30d.add(_30dItem);
    return this;
  }

   /**
   * Get _30d
   * @return _30d
  **/
  @javax.annotation.Nullable
  public List<List<BigDecimal>> get30d() {
    return _30d;
  }


  public void set30d(List<List<BigDecimal>> _30d) {
    this._30d = _30d;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveAnIssue200ResponseStats retrieveAnIssue200ResponseStats = (RetrieveAnIssue200ResponseStats) o;
    return Objects.equals(this._24h, retrieveAnIssue200ResponseStats._24h) &&
        Objects.equals(this._30d, retrieveAnIssue200ResponseStats._30d);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_24h, _30d);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveAnIssue200ResponseStats {\n");
    sb.append("    _24h: ").append(toIndentedString(_24h)).append("\n");
    sb.append("    _30d: ").append(toIndentedString(_30d)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("24h");
    openapiFields.add("30d");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RetrieveAnIssue200ResponseStats
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!RetrieveAnIssue200ResponseStats.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RetrieveAnIssue200ResponseStats is not found in the empty JSON string", RetrieveAnIssue200ResponseStats.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!RetrieveAnIssue200ResponseStats.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RetrieveAnIssue200ResponseStats` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("24h") != null && !jsonObj.get("24h").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `24h` to be an array in the JSON string but got `%s`", jsonObj.get("24h").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("30d") != null && !jsonObj.get("30d").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `30d` to be an array in the JSON string but got `%s`", jsonObj.get("30d").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RetrieveAnIssue200ResponseStats.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RetrieveAnIssue200ResponseStats' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RetrieveAnIssue200ResponseStats> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RetrieveAnIssue200ResponseStats.class));

       return (TypeAdapter<T>) new TypeAdapter<RetrieveAnIssue200ResponseStats>() {
           @Override
           public void write(JsonWriter out, RetrieveAnIssue200ResponseStats value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RetrieveAnIssue200ResponseStats read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RetrieveAnIssue200ResponseStats given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RetrieveAnIssue200ResponseStats
  * @throws IOException if the JSON string is invalid with respect to RetrieveAnIssue200ResponseStats
  */
  public static RetrieveAnIssue200ResponseStats fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RetrieveAnIssue200ResponseStats.class);
  }

 /**
  * Convert an instance of RetrieveAnIssue200ResponseStats to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

