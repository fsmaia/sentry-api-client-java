/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.sentry.api.client.JSON;


/**
 * CreateAnExternalIssueRequest
 */
@JsonPropertyOrder({
  CreateAnExternalIssueRequest.JSON_PROPERTY_ISSUE_ID,
  CreateAnExternalIssueRequest.JSON_PROPERTY_WEB_URL,
  CreateAnExternalIssueRequest.JSON_PROPERTY_PROJECT,
  CreateAnExternalIssueRequest.JSON_PROPERTY_IDENTIFIER
})
@JsonTypeName("Create_an_External_Issue_request")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-16T15:22:58.941842Z[Etc/UTC]")
public class CreateAnExternalIssueRequest {
  public static final String JSON_PROPERTY_ISSUE_ID = "issueId";
  private Integer issueId;

  public static final String JSON_PROPERTY_WEB_URL = "webUrl";
  private String webUrl;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private String project;

  public static final String JSON_PROPERTY_IDENTIFIER = "identifier";
  private String identifier;

  public CreateAnExternalIssueRequest() { 
  }

  public CreateAnExternalIssueRequest issueId(Integer issueId) {
    this.issueId = issueId;
    return this;
  }

   /**
   * The ID of the Sentry issue to link the external issue to.
   * @return issueId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ISSUE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getIssueId() {
    return issueId;
  }


  @JsonProperty(JSON_PROPERTY_ISSUE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIssueId(Integer issueId) {
    this.issueId = issueId;
  }


  public CreateAnExternalIssueRequest webUrl(String webUrl) {
    this.webUrl = webUrl;
    return this;
  }

   /**
   * The URL of the external service to link the issue to.
   * @return webUrl
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WEB_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getWebUrl() {
    return webUrl;
  }


  @JsonProperty(JSON_PROPERTY_WEB_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWebUrl(String webUrl) {
    this.webUrl = webUrl;
  }


  public CreateAnExternalIssueRequest project(String project) {
    this.project = project;
    return this;
  }

   /**
   * The external service&#39;s project.
   * @return project
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProject(String project) {
    this.project = project;
  }


  public CreateAnExternalIssueRequest identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * A unique identifier of the external issue.
   * @return identifier
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIdentifier() {
    return identifier;
  }


  @JsonProperty(JSON_PROPERTY_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  /**
   * Return true if this Create_an_External_Issue_request object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAnExternalIssueRequest createAnExternalIssueRequest = (CreateAnExternalIssueRequest) o;
    return Objects.equals(this.issueId, createAnExternalIssueRequest.issueId) &&
        Objects.equals(this.webUrl, createAnExternalIssueRequest.webUrl) &&
        Objects.equals(this.project, createAnExternalIssueRequest.project) &&
        Objects.equals(this.identifier, createAnExternalIssueRequest.identifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(issueId, webUrl, project, identifier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAnExternalIssueRequest {\n");
    sb.append("    issueId: ").append(toIndentedString(issueId)).append("\n");
    sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

