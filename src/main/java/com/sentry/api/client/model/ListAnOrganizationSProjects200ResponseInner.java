/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sentry.api.client.model.ListAnOrganizationSProjects200ResponseInnerEventProcessing;
import com.sentry.api.client.model.ListAnOrganizationSProjects200ResponseInnerLatestRelease;
import com.sentry.api.client.model.ListAnOrganizationSProjects200ResponseInnerTeam;
import com.sentry.api.client.model.ListAnOrganizationSProjects200ResponseInnerTeamsInner;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.sentry.api.client.JSON;

/**
 * ListAnOrganizationSProjects200ResponseInner
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-15T10:13:02.301928Z[Etc/UTC]")
public class ListAnOrganizationSProjects200ResponseInner implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_LATEST_DEPLOYS = "latestDeploys";
  @SerializedName(SERIALIZED_NAME_LATEST_DEPLOYS)
  private Map<String, Map<String, String>> latestDeploys;

  public static final String SERIALIZED_NAME_STATS = "stats";
  @SerializedName(SERIALIZED_NAME_STATS)
  private Object stats = null;

  public static final String SERIALIZED_NAME_TRANSACTION_STATS = "transactionStats";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_STATS)
  private Object transactionStats = null;

  public static final String SERIALIZED_NAME_SESSION_STATS = "sessionStats";
  @SerializedName(SERIALIZED_NAME_SESSION_STATS)
  private Object sessionStats = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private String platform;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_IS_BOOKMARKED = "isBookmarked";
  @SerializedName(SERIALIZED_NAME_IS_BOOKMARKED)
  private Boolean isBookmarked;

  public static final String SERIALIZED_NAME_IS_MEMBER = "isMember";
  @SerializedName(SERIALIZED_NAME_IS_MEMBER)
  private Boolean isMember;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private List<String> features = new ArrayList<>();

  public static final String SERIALIZED_NAME_FIRST_EVENT = "firstEvent";
  @SerializedName(SERIALIZED_NAME_FIRST_EVENT)
  private OffsetDateTime firstEvent;

  public static final String SERIALIZED_NAME_FIRST_TRANSACTION_EVENT = "firstTransactionEvent";
  @SerializedName(SERIALIZED_NAME_FIRST_TRANSACTION_EVENT)
  private Boolean firstTransactionEvent;

  public static final String SERIALIZED_NAME_ACCESS = "access";
  @SerializedName(SERIALIZED_NAME_ACCESS)
  private List<String> access = new ArrayList<>();

  public static final String SERIALIZED_NAME_HAS_ACCESS = "hasAccess";
  @SerializedName(SERIALIZED_NAME_HAS_ACCESS)
  private Boolean hasAccess;

  public static final String SERIALIZED_NAME_HAS_MINIFIED_STACK_TRACE = "hasMinifiedStackTrace";
  @SerializedName(SERIALIZED_NAME_HAS_MINIFIED_STACK_TRACE)
  private Boolean hasMinifiedStackTrace;

  public static final String SERIALIZED_NAME_HAS_MONITORS = "hasMonitors";
  @SerializedName(SERIALIZED_NAME_HAS_MONITORS)
  private Boolean hasMonitors;

  public static final String SERIALIZED_NAME_HAS_PROFILES = "hasProfiles";
  @SerializedName(SERIALIZED_NAME_HAS_PROFILES)
  private Boolean hasProfiles;

  public static final String SERIALIZED_NAME_HAS_REPLAYS = "hasReplays";
  @SerializedName(SERIALIZED_NAME_HAS_REPLAYS)
  private Boolean hasReplays;

  public static final String SERIALIZED_NAME_HAS_SESSIONS = "hasSessions";
  @SerializedName(SERIALIZED_NAME_HAS_SESSIONS)
  private Boolean hasSessions;

  public static final String SERIALIZED_NAME_TEAM = "team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private ListAnOrganizationSProjects200ResponseInnerTeam team;

  public static final String SERIALIZED_NAME_TEAMS = "teams";
  @SerializedName(SERIALIZED_NAME_TEAMS)
  private List<ListAnOrganizationSProjects200ResponseInnerTeamsInner> teams = new ArrayList<>();

  public static final String SERIALIZED_NAME_EVENT_PROCESSING = "eventProcessing";
  @SerializedName(SERIALIZED_NAME_EVENT_PROCESSING)
  private ListAnOrganizationSProjects200ResponseInnerEventProcessing eventProcessing;

  public static final String SERIALIZED_NAME_PLATFORMS = "platforms";
  @SerializedName(SERIALIZED_NAME_PLATFORMS)
  private List<String> platforms = new ArrayList<>();

  public static final String SERIALIZED_NAME_HAS_USER_REPORTS = "hasUserReports";
  @SerializedName(SERIALIZED_NAME_HAS_USER_REPORTS)
  private Boolean hasUserReports;

  public static final String SERIALIZED_NAME_ENVIRONMENTS = "environments";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENTS)
  private List<String> environments = new ArrayList<>();

  public static final String SERIALIZED_NAME_LATEST_RELEASE = "latestRelease";
  @SerializedName(SERIALIZED_NAME_LATEST_RELEASE)
  private ListAnOrganizationSProjects200ResponseInnerLatestRelease latestRelease;

  public ListAnOrganizationSProjects200ResponseInner() {
  }

  public ListAnOrganizationSProjects200ResponseInner latestDeploys(Map<String, Map<String, String>> latestDeploys) {
    
    this.latestDeploys = latestDeploys;
    return this;
  }

  public ListAnOrganizationSProjects200ResponseInner putLatestDeploysItem(String key, Map<String, String> latestDeploysItem) {
    if (this.latestDeploys == null) {
      this.latestDeploys = new HashMap<>();
    }
    this.latestDeploys.put(key, latestDeploysItem);
    return this;
  }

   /**
   * Get latestDeploys
   * @return latestDeploys
  **/
  @jakarta.annotation.Nullable
  public Map<String, Map<String, String>> getLatestDeploys() {
    return latestDeploys;
  }


  public void setLatestDeploys(Map<String, Map<String, String>> latestDeploys) {
    this.latestDeploys = latestDeploys;
  }


  public ListAnOrganizationSProjects200ResponseInner stats(Object stats) {
    
    this.stats = stats;
    return this;
  }

   /**
   * Get stats
   * @return stats
  **/
  @jakarta.annotation.Nullable
  public Object getStats() {
    return stats;
  }


  public void setStats(Object stats) {
    this.stats = stats;
  }


  public ListAnOrganizationSProjects200ResponseInner transactionStats(Object transactionStats) {
    
    this.transactionStats = transactionStats;
    return this;
  }

   /**
   * Get transactionStats
   * @return transactionStats
  **/
  @jakarta.annotation.Nullable
  public Object getTransactionStats() {
    return transactionStats;
  }


  public void setTransactionStats(Object transactionStats) {
    this.transactionStats = transactionStats;
  }


  public ListAnOrganizationSProjects200ResponseInner sessionStats(Object sessionStats) {
    
    this.sessionStats = sessionStats;
    return this;
  }

   /**
   * Get sessionStats
   * @return sessionStats
  **/
  @jakarta.annotation.Nullable
  public Object getSessionStats() {
    return sessionStats;
  }


  public void setSessionStats(Object sessionStats) {
    this.sessionStats = sessionStats;
  }


  public ListAnOrganizationSProjects200ResponseInner id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ListAnOrganizationSProjects200ResponseInner slug(String slug) {
    
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @jakarta.annotation.Nonnull
  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    this.slug = slug;
  }


  public ListAnOrganizationSProjects200ResponseInner name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ListAnOrganizationSProjects200ResponseInner platform(String platform) {
    
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @jakarta.annotation.Nullable
  public String getPlatform() {
    return platform;
  }


  public void setPlatform(String platform) {
    this.platform = platform;
  }


  public ListAnOrganizationSProjects200ResponseInner dateCreated(OffsetDateTime dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @jakarta.annotation.Nonnull
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ListAnOrganizationSProjects200ResponseInner isBookmarked(Boolean isBookmarked) {
    
    this.isBookmarked = isBookmarked;
    return this;
  }

   /**
   * Get isBookmarked
   * @return isBookmarked
  **/
  @jakarta.annotation.Nonnull
  public Boolean getIsBookmarked() {
    return isBookmarked;
  }


  public void setIsBookmarked(Boolean isBookmarked) {
    this.isBookmarked = isBookmarked;
  }


  public ListAnOrganizationSProjects200ResponseInner isMember(Boolean isMember) {
    
    this.isMember = isMember;
    return this;
  }

   /**
   * Get isMember
   * @return isMember
  **/
  @jakarta.annotation.Nonnull
  public Boolean getIsMember() {
    return isMember;
  }


  public void setIsMember(Boolean isMember) {
    this.isMember = isMember;
  }


  public ListAnOrganizationSProjects200ResponseInner features(List<String> features) {
    
    this.features = features;
    return this;
  }

  public ListAnOrganizationSProjects200ResponseInner addFeaturesItem(String featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @jakarta.annotation.Nonnull
  public List<String> getFeatures() {
    return features;
  }


  public void setFeatures(List<String> features) {
    this.features = features;
  }


  public ListAnOrganizationSProjects200ResponseInner firstEvent(OffsetDateTime firstEvent) {
    
    this.firstEvent = firstEvent;
    return this;
  }

   /**
   * Get firstEvent
   * @return firstEvent
  **/
  @jakarta.annotation.Nullable
  public OffsetDateTime getFirstEvent() {
    return firstEvent;
  }


  public void setFirstEvent(OffsetDateTime firstEvent) {
    this.firstEvent = firstEvent;
  }


  public ListAnOrganizationSProjects200ResponseInner firstTransactionEvent(Boolean firstTransactionEvent) {
    
    this.firstTransactionEvent = firstTransactionEvent;
    return this;
  }

   /**
   * Get firstTransactionEvent
   * @return firstTransactionEvent
  **/
  @jakarta.annotation.Nonnull
  public Boolean getFirstTransactionEvent() {
    return firstTransactionEvent;
  }


  public void setFirstTransactionEvent(Boolean firstTransactionEvent) {
    this.firstTransactionEvent = firstTransactionEvent;
  }


  public ListAnOrganizationSProjects200ResponseInner access(List<String> access) {
    
    this.access = access;
    return this;
  }

  public ListAnOrganizationSProjects200ResponseInner addAccessItem(String accessItem) {
    if (this.access == null) {
      this.access = new ArrayList<>();
    }
    this.access.add(accessItem);
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @jakarta.annotation.Nonnull
  public List<String> getAccess() {
    return access;
  }


  public void setAccess(List<String> access) {
    this.access = access;
  }


  public ListAnOrganizationSProjects200ResponseInner hasAccess(Boolean hasAccess) {
    
    this.hasAccess = hasAccess;
    return this;
  }

   /**
   * Get hasAccess
   * @return hasAccess
  **/
  @jakarta.annotation.Nonnull
  public Boolean getHasAccess() {
    return hasAccess;
  }


  public void setHasAccess(Boolean hasAccess) {
    this.hasAccess = hasAccess;
  }


  public ListAnOrganizationSProjects200ResponseInner hasMinifiedStackTrace(Boolean hasMinifiedStackTrace) {
    
    this.hasMinifiedStackTrace = hasMinifiedStackTrace;
    return this;
  }

   /**
   * Get hasMinifiedStackTrace
   * @return hasMinifiedStackTrace
  **/
  @jakarta.annotation.Nonnull
  public Boolean getHasMinifiedStackTrace() {
    return hasMinifiedStackTrace;
  }


  public void setHasMinifiedStackTrace(Boolean hasMinifiedStackTrace) {
    this.hasMinifiedStackTrace = hasMinifiedStackTrace;
  }


  public ListAnOrganizationSProjects200ResponseInner hasMonitors(Boolean hasMonitors) {
    
    this.hasMonitors = hasMonitors;
    return this;
  }

   /**
   * Get hasMonitors
   * @return hasMonitors
  **/
  @jakarta.annotation.Nonnull
  public Boolean getHasMonitors() {
    return hasMonitors;
  }


  public void setHasMonitors(Boolean hasMonitors) {
    this.hasMonitors = hasMonitors;
  }


  public ListAnOrganizationSProjects200ResponseInner hasProfiles(Boolean hasProfiles) {
    
    this.hasProfiles = hasProfiles;
    return this;
  }

   /**
   * Get hasProfiles
   * @return hasProfiles
  **/
  @jakarta.annotation.Nonnull
  public Boolean getHasProfiles() {
    return hasProfiles;
  }


  public void setHasProfiles(Boolean hasProfiles) {
    this.hasProfiles = hasProfiles;
  }


  public ListAnOrganizationSProjects200ResponseInner hasReplays(Boolean hasReplays) {
    
    this.hasReplays = hasReplays;
    return this;
  }

   /**
   * Get hasReplays
   * @return hasReplays
  **/
  @jakarta.annotation.Nonnull
  public Boolean getHasReplays() {
    return hasReplays;
  }


  public void setHasReplays(Boolean hasReplays) {
    this.hasReplays = hasReplays;
  }


  public ListAnOrganizationSProjects200ResponseInner hasSessions(Boolean hasSessions) {
    
    this.hasSessions = hasSessions;
    return this;
  }

   /**
   * Get hasSessions
   * @return hasSessions
  **/
  @jakarta.annotation.Nonnull
  public Boolean getHasSessions() {
    return hasSessions;
  }


  public void setHasSessions(Boolean hasSessions) {
    this.hasSessions = hasSessions;
  }


  public ListAnOrganizationSProjects200ResponseInner team(ListAnOrganizationSProjects200ResponseInnerTeam team) {
    
    this.team = team;
    return this;
  }

   /**
   * Get team
   * @return team
  **/
  @jakarta.annotation.Nullable
  public ListAnOrganizationSProjects200ResponseInnerTeam getTeam() {
    return team;
  }


  public void setTeam(ListAnOrganizationSProjects200ResponseInnerTeam team) {
    this.team = team;
  }


  public ListAnOrganizationSProjects200ResponseInner teams(List<ListAnOrganizationSProjects200ResponseInnerTeamsInner> teams) {
    
    this.teams = teams;
    return this;
  }

  public ListAnOrganizationSProjects200ResponseInner addTeamsItem(ListAnOrganizationSProjects200ResponseInnerTeamsInner teamsItem) {
    if (this.teams == null) {
      this.teams = new ArrayList<>();
    }
    this.teams.add(teamsItem);
    return this;
  }

   /**
   * Get teams
   * @return teams
  **/
  @jakarta.annotation.Nonnull
  public List<ListAnOrganizationSProjects200ResponseInnerTeamsInner> getTeams() {
    return teams;
  }


  public void setTeams(List<ListAnOrganizationSProjects200ResponseInnerTeamsInner> teams) {
    this.teams = teams;
  }


  public ListAnOrganizationSProjects200ResponseInner eventProcessing(ListAnOrganizationSProjects200ResponseInnerEventProcessing eventProcessing) {
    
    this.eventProcessing = eventProcessing;
    return this;
  }

   /**
   * Get eventProcessing
   * @return eventProcessing
  **/
  @jakarta.annotation.Nonnull
  public ListAnOrganizationSProjects200ResponseInnerEventProcessing getEventProcessing() {
    return eventProcessing;
  }


  public void setEventProcessing(ListAnOrganizationSProjects200ResponseInnerEventProcessing eventProcessing) {
    this.eventProcessing = eventProcessing;
  }


  public ListAnOrganizationSProjects200ResponseInner platforms(List<String> platforms) {
    
    this.platforms = platforms;
    return this;
  }

  public ListAnOrganizationSProjects200ResponseInner addPlatformsItem(String platformsItem) {
    if (this.platforms == null) {
      this.platforms = new ArrayList<>();
    }
    this.platforms.add(platformsItem);
    return this;
  }

   /**
   * Get platforms
   * @return platforms
  **/
  @jakarta.annotation.Nonnull
  public List<String> getPlatforms() {
    return platforms;
  }


  public void setPlatforms(List<String> platforms) {
    this.platforms = platforms;
  }


  public ListAnOrganizationSProjects200ResponseInner hasUserReports(Boolean hasUserReports) {
    
    this.hasUserReports = hasUserReports;
    return this;
  }

   /**
   * Get hasUserReports
   * @return hasUserReports
  **/
  @jakarta.annotation.Nonnull
  public Boolean getHasUserReports() {
    return hasUserReports;
  }


  public void setHasUserReports(Boolean hasUserReports) {
    this.hasUserReports = hasUserReports;
  }


  public ListAnOrganizationSProjects200ResponseInner environments(List<String> environments) {
    
    this.environments = environments;
    return this;
  }

  public ListAnOrganizationSProjects200ResponseInner addEnvironmentsItem(String environmentsItem) {
    if (this.environments == null) {
      this.environments = new ArrayList<>();
    }
    this.environments.add(environmentsItem);
    return this;
  }

   /**
   * Get environments
   * @return environments
  **/
  @jakarta.annotation.Nonnull
  public List<String> getEnvironments() {
    return environments;
  }


  public void setEnvironments(List<String> environments) {
    this.environments = environments;
  }


  public ListAnOrganizationSProjects200ResponseInner latestRelease(ListAnOrganizationSProjects200ResponseInnerLatestRelease latestRelease) {
    
    this.latestRelease = latestRelease;
    return this;
  }

   /**
   * Get latestRelease
   * @return latestRelease
  **/
  @jakarta.annotation.Nullable
  public ListAnOrganizationSProjects200ResponseInnerLatestRelease getLatestRelease() {
    return latestRelease;
  }


  public void setLatestRelease(ListAnOrganizationSProjects200ResponseInnerLatestRelease latestRelease) {
    this.latestRelease = latestRelease;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListAnOrganizationSProjects200ResponseInner listAnOrganizationSProjects200ResponseInner = (ListAnOrganizationSProjects200ResponseInner) o;
    return Objects.equals(this.latestDeploys, listAnOrganizationSProjects200ResponseInner.latestDeploys) &&
        Objects.equals(this.stats, listAnOrganizationSProjects200ResponseInner.stats) &&
        Objects.equals(this.transactionStats, listAnOrganizationSProjects200ResponseInner.transactionStats) &&
        Objects.equals(this.sessionStats, listAnOrganizationSProjects200ResponseInner.sessionStats) &&
        Objects.equals(this.id, listAnOrganizationSProjects200ResponseInner.id) &&
        Objects.equals(this.slug, listAnOrganizationSProjects200ResponseInner.slug) &&
        Objects.equals(this.name, listAnOrganizationSProjects200ResponseInner.name) &&
        Objects.equals(this.platform, listAnOrganizationSProjects200ResponseInner.platform) &&
        Objects.equals(this.dateCreated, listAnOrganizationSProjects200ResponseInner.dateCreated) &&
        Objects.equals(this.isBookmarked, listAnOrganizationSProjects200ResponseInner.isBookmarked) &&
        Objects.equals(this.isMember, listAnOrganizationSProjects200ResponseInner.isMember) &&
        Objects.equals(this.features, listAnOrganizationSProjects200ResponseInner.features) &&
        Objects.equals(this.firstEvent, listAnOrganizationSProjects200ResponseInner.firstEvent) &&
        Objects.equals(this.firstTransactionEvent, listAnOrganizationSProjects200ResponseInner.firstTransactionEvent) &&
        Objects.equals(this.access, listAnOrganizationSProjects200ResponseInner.access) &&
        Objects.equals(this.hasAccess, listAnOrganizationSProjects200ResponseInner.hasAccess) &&
        Objects.equals(this.hasMinifiedStackTrace, listAnOrganizationSProjects200ResponseInner.hasMinifiedStackTrace) &&
        Objects.equals(this.hasMonitors, listAnOrganizationSProjects200ResponseInner.hasMonitors) &&
        Objects.equals(this.hasProfiles, listAnOrganizationSProjects200ResponseInner.hasProfiles) &&
        Objects.equals(this.hasReplays, listAnOrganizationSProjects200ResponseInner.hasReplays) &&
        Objects.equals(this.hasSessions, listAnOrganizationSProjects200ResponseInner.hasSessions) &&
        Objects.equals(this.team, listAnOrganizationSProjects200ResponseInner.team) &&
        Objects.equals(this.teams, listAnOrganizationSProjects200ResponseInner.teams) &&
        Objects.equals(this.eventProcessing, listAnOrganizationSProjects200ResponseInner.eventProcessing) &&
        Objects.equals(this.platforms, listAnOrganizationSProjects200ResponseInner.platforms) &&
        Objects.equals(this.hasUserReports, listAnOrganizationSProjects200ResponseInner.hasUserReports) &&
        Objects.equals(this.environments, listAnOrganizationSProjects200ResponseInner.environments) &&
        Objects.equals(this.latestRelease, listAnOrganizationSProjects200ResponseInner.latestRelease);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(latestDeploys, stats, transactionStats, sessionStats, id, slug, name, platform, dateCreated, isBookmarked, isMember, features, firstEvent, firstTransactionEvent, access, hasAccess, hasMinifiedStackTrace, hasMonitors, hasProfiles, hasReplays, hasSessions, team, teams, eventProcessing, platforms, hasUserReports, environments, latestRelease);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListAnOrganizationSProjects200ResponseInner {\n");
    sb.append("    latestDeploys: ").append(toIndentedString(latestDeploys)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    transactionStats: ").append(toIndentedString(transactionStats)).append("\n");
    sb.append("    sessionStats: ").append(toIndentedString(sessionStats)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    isBookmarked: ").append(toIndentedString(isBookmarked)).append("\n");
    sb.append("    isMember: ").append(toIndentedString(isMember)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    firstEvent: ").append(toIndentedString(firstEvent)).append("\n");
    sb.append("    firstTransactionEvent: ").append(toIndentedString(firstTransactionEvent)).append("\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    hasAccess: ").append(toIndentedString(hasAccess)).append("\n");
    sb.append("    hasMinifiedStackTrace: ").append(toIndentedString(hasMinifiedStackTrace)).append("\n");
    sb.append("    hasMonitors: ").append(toIndentedString(hasMonitors)).append("\n");
    sb.append("    hasProfiles: ").append(toIndentedString(hasProfiles)).append("\n");
    sb.append("    hasReplays: ").append(toIndentedString(hasReplays)).append("\n");
    sb.append("    hasSessions: ").append(toIndentedString(hasSessions)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("    eventProcessing: ").append(toIndentedString(eventProcessing)).append("\n");
    sb.append("    platforms: ").append(toIndentedString(platforms)).append("\n");
    sb.append("    hasUserReports: ").append(toIndentedString(hasUserReports)).append("\n");
    sb.append("    environments: ").append(toIndentedString(environments)).append("\n");
    sb.append("    latestRelease: ").append(toIndentedString(latestRelease)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("latestDeploys");
    openapiFields.add("stats");
    openapiFields.add("transactionStats");
    openapiFields.add("sessionStats");
    openapiFields.add("id");
    openapiFields.add("slug");
    openapiFields.add("name");
    openapiFields.add("platform");
    openapiFields.add("dateCreated");
    openapiFields.add("isBookmarked");
    openapiFields.add("isMember");
    openapiFields.add("features");
    openapiFields.add("firstEvent");
    openapiFields.add("firstTransactionEvent");
    openapiFields.add("access");
    openapiFields.add("hasAccess");
    openapiFields.add("hasMinifiedStackTrace");
    openapiFields.add("hasMonitors");
    openapiFields.add("hasProfiles");
    openapiFields.add("hasReplays");
    openapiFields.add("hasSessions");
    openapiFields.add("team");
    openapiFields.add("teams");
    openapiFields.add("eventProcessing");
    openapiFields.add("platforms");
    openapiFields.add("hasUserReports");
    openapiFields.add("environments");
    openapiFields.add("latestRelease");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("slug");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("platform");
    openapiRequiredFields.add("dateCreated");
    openapiRequiredFields.add("isBookmarked");
    openapiRequiredFields.add("isMember");
    openapiRequiredFields.add("features");
    openapiRequiredFields.add("firstEvent");
    openapiRequiredFields.add("firstTransactionEvent");
    openapiRequiredFields.add("access");
    openapiRequiredFields.add("hasAccess");
    openapiRequiredFields.add("hasMinifiedStackTrace");
    openapiRequiredFields.add("hasMonitors");
    openapiRequiredFields.add("hasProfiles");
    openapiRequiredFields.add("hasReplays");
    openapiRequiredFields.add("hasSessions");
    openapiRequiredFields.add("team");
    openapiRequiredFields.add("teams");
    openapiRequiredFields.add("eventProcessing");
    openapiRequiredFields.add("platforms");
    openapiRequiredFields.add("hasUserReports");
    openapiRequiredFields.add("environments");
    openapiRequiredFields.add("latestRelease");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ListAnOrganizationSProjects200ResponseInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ListAnOrganizationSProjects200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListAnOrganizationSProjects200ResponseInner is not found in the empty JSON string", ListAnOrganizationSProjects200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ListAnOrganizationSProjects200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListAnOrganizationSProjects200ResponseInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ListAnOrganizationSProjects200ResponseInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("platform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("features") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("features").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `features` to be an array in the JSON string but got `%s`", jsonObj.get("features").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("access") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("access").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `access` to be an array in the JSON string but got `%s`", jsonObj.get("access").toString()));
      }
      // validate the required field `team`
      ListAnOrganizationSProjects200ResponseInnerTeam.validateJsonObject(jsonObj.getAsJsonObject("team"));
      // ensure the json data is an array
      if (!jsonObj.get("teams").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `teams` to be an array in the JSON string but got `%s`", jsonObj.get("teams").toString()));
      }

      JsonArray jsonArrayteams = jsonObj.getAsJsonArray("teams");
      // validate the required field `teams` (array)
      for (int i = 0; i < jsonArrayteams.size(); i++) {
        ListAnOrganizationSProjects200ResponseInnerTeamsInner.validateJsonObject(jsonArrayteams.get(i).getAsJsonObject());
      };
      // validate the required field `eventProcessing`
      ListAnOrganizationSProjects200ResponseInnerEventProcessing.validateJsonObject(jsonObj.getAsJsonObject("eventProcessing"));
      // ensure the required json array is present
      if (jsonObj.get("platforms") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("platforms").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `platforms` to be an array in the JSON string but got `%s`", jsonObj.get("platforms").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("environments") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("environments").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `environments` to be an array in the JSON string but got `%s`", jsonObj.get("environments").toString()));
      }
      // validate the required field `latestRelease`
      ListAnOrganizationSProjects200ResponseInnerLatestRelease.validateJsonObject(jsonObj.getAsJsonObject("latestRelease"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListAnOrganizationSProjects200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListAnOrganizationSProjects200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListAnOrganizationSProjects200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListAnOrganizationSProjects200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ListAnOrganizationSProjects200ResponseInner>() {
           @Override
           public void write(JsonWriter out, ListAnOrganizationSProjects200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListAnOrganizationSProjects200ResponseInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ListAnOrganizationSProjects200ResponseInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ListAnOrganizationSProjects200ResponseInner
  * @throws IOException if the JSON string is invalid with respect to ListAnOrganizationSProjects200ResponseInner
  */
  public static ListAnOrganizationSProjects200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListAnOrganizationSProjects200ResponseInner.class);
  }

 /**
  * Convert an instance of ListAnOrganizationSProjects200ResponseInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

