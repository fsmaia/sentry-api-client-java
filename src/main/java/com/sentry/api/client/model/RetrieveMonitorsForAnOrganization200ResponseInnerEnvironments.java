/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.sentry.api.client.JSON;

/**
 * RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-15T10:01:41.950429Z[Etc/UTC]")
public class RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_LAST_CHECK_IN = "lastCheckIn";
  @SerializedName(SERIALIZED_NAME_LAST_CHECK_IN)
  private OffsetDateTime lastCheckIn;

  public static final String SERIALIZED_NAME_NEXT_CHECK_IN = "nextCheckIn";
  @SerializedName(SERIALIZED_NAME_NEXT_CHECK_IN)
  private OffsetDateTime nextCheckIn;

  public RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments() {
  }

  public RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments dateCreated(OffsetDateTime dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @javax.annotation.Nonnull
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments lastCheckIn(OffsetDateTime lastCheckIn) {
    
    this.lastCheckIn = lastCheckIn;
    return this;
  }

   /**
   * Get lastCheckIn
   * @return lastCheckIn
  **/
  @javax.annotation.Nonnull
  public OffsetDateTime getLastCheckIn() {
    return lastCheckIn;
  }


  public void setLastCheckIn(OffsetDateTime lastCheckIn) {
    this.lastCheckIn = lastCheckIn;
  }


  public RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments nextCheckIn(OffsetDateTime nextCheckIn) {
    
    this.nextCheckIn = nextCheckIn;
    return this;
  }

   /**
   * Get nextCheckIn
   * @return nextCheckIn
  **/
  @javax.annotation.Nonnull
  public OffsetDateTime getNextCheckIn() {
    return nextCheckIn;
  }


  public void setNextCheckIn(OffsetDateTime nextCheckIn) {
    this.nextCheckIn = nextCheckIn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments retrieveMonitorsForAnOrganization200ResponseInnerEnvironments = (RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments) o;
    return Objects.equals(this.name, retrieveMonitorsForAnOrganization200ResponseInnerEnvironments.name) &&
        Objects.equals(this.status, retrieveMonitorsForAnOrganization200ResponseInnerEnvironments.status) &&
        Objects.equals(this.dateCreated, retrieveMonitorsForAnOrganization200ResponseInnerEnvironments.dateCreated) &&
        Objects.equals(this.lastCheckIn, retrieveMonitorsForAnOrganization200ResponseInnerEnvironments.lastCheckIn) &&
        Objects.equals(this.nextCheckIn, retrieveMonitorsForAnOrganization200ResponseInnerEnvironments.nextCheckIn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, status, dateCreated, lastCheckIn, nextCheckIn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    lastCheckIn: ").append(toIndentedString(lastCheckIn)).append("\n");
    sb.append("    nextCheckIn: ").append(toIndentedString(nextCheckIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("status");
    openapiFields.add("dateCreated");
    openapiFields.add("lastCheckIn");
    openapiFields.add("nextCheckIn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("dateCreated");
    openapiRequiredFields.add("lastCheckIn");
    openapiRequiredFields.add("nextCheckIn");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments is not found in the empty JSON string", RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments.class));

       return (TypeAdapter<T>) new TypeAdapter<RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments>() {
           @Override
           public void write(JsonWriter out, RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments
  * @throws IOException if the JSON string is invalid with respect to RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments
  */
  public static RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments.class);
  }

 /**
  * Convert an instance of RetrieveMonitorsForAnOrganization200ResponseInnerEnvironments to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

