/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sentry.api.client.model.ListAnOrganizationSProjects200ResponseInnerTeamsInner;
import com.sentry.api.client.model.RetrieveAnOrganization200ResponseProjectsInnerTeam;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.sentry.api.client.JSON;

/**
 * RetrieveAnOrganization200ResponseProjectsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-15T10:01:41.950429Z[Etc/UTC]")
public class RetrieveAnOrganization200ResponseProjectsInner implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private String dateCreated;

  public static final String SERIALIZED_NAME_FIRST_EVENT = "firstEvent";
  @SerializedName(SERIALIZED_NAME_FIRST_EVENT)
  private String firstEvent;

  public static final String SERIALIZED_NAME_HAS_ACCESS = "hasAccess";
  @SerializedName(SERIALIZED_NAME_HAS_ACCESS)
  private Boolean hasAccess;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_BOOKMARKED = "isBookmarked";
  @SerializedName(SERIALIZED_NAME_IS_BOOKMARKED)
  private Boolean isBookmarked;

  public static final String SERIALIZED_NAME_IS_MEMBER = "isMember";
  @SerializedName(SERIALIZED_NAME_IS_MEMBER)
  private Boolean isMember;

  public static final String SERIALIZED_NAME_LATEST_DEPLOYS = "latestDeploys";
  @SerializedName(SERIALIZED_NAME_LATEST_DEPLOYS)
  private String latestDeploys;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private String platform;

  public static final String SERIALIZED_NAME_PLATFORMS = "platforms";
  @SerializedName(SERIALIZED_NAME_PLATFORMS)
  private List<String> platforms = new ArrayList<>();

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_TEAM = "team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private RetrieveAnOrganization200ResponseProjectsInnerTeam team;

  public static final String SERIALIZED_NAME_TEAMS = "teams";
  @SerializedName(SERIALIZED_NAME_TEAMS)
  private List<ListAnOrganizationSProjects200ResponseInnerTeamsInner> teams = new ArrayList<>();

  public RetrieveAnOrganization200ResponseProjectsInner() {
  }

  public RetrieveAnOrganization200ResponseProjectsInner dateCreated(String dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @javax.annotation.Nonnull
  public String getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }


  public RetrieveAnOrganization200ResponseProjectsInner firstEvent(String firstEvent) {
    
    this.firstEvent = firstEvent;
    return this;
  }

   /**
   * Get firstEvent
   * @return firstEvent
  **/
  @javax.annotation.Nullable
  public String getFirstEvent() {
    return firstEvent;
  }


  public void setFirstEvent(String firstEvent) {
    this.firstEvent = firstEvent;
  }


  public RetrieveAnOrganization200ResponseProjectsInner hasAccess(Boolean hasAccess) {
    
    this.hasAccess = hasAccess;
    return this;
  }

   /**
   * Get hasAccess
   * @return hasAccess
  **/
  @javax.annotation.Nonnull
  public Boolean getHasAccess() {
    return hasAccess;
  }


  public void setHasAccess(Boolean hasAccess) {
    this.hasAccess = hasAccess;
  }


  public RetrieveAnOrganization200ResponseProjectsInner id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public RetrieveAnOrganization200ResponseProjectsInner isBookmarked(Boolean isBookmarked) {
    
    this.isBookmarked = isBookmarked;
    return this;
  }

   /**
   * Get isBookmarked
   * @return isBookmarked
  **/
  @javax.annotation.Nonnull
  public Boolean getIsBookmarked() {
    return isBookmarked;
  }


  public void setIsBookmarked(Boolean isBookmarked) {
    this.isBookmarked = isBookmarked;
  }


  public RetrieveAnOrganization200ResponseProjectsInner isMember(Boolean isMember) {
    
    this.isMember = isMember;
    return this;
  }

   /**
   * Get isMember
   * @return isMember
  **/
  @javax.annotation.Nonnull
  public Boolean getIsMember() {
    return isMember;
  }


  public void setIsMember(Boolean isMember) {
    this.isMember = isMember;
  }


  public RetrieveAnOrganization200ResponseProjectsInner latestDeploys(String latestDeploys) {
    
    this.latestDeploys = latestDeploys;
    return this;
  }

   /**
   * Get latestDeploys
   * @return latestDeploys
  **/
  @javax.annotation.Nullable
  public String getLatestDeploys() {
    return latestDeploys;
  }


  public void setLatestDeploys(String latestDeploys) {
    this.latestDeploys = latestDeploys;
  }


  public RetrieveAnOrganization200ResponseProjectsInner name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public RetrieveAnOrganization200ResponseProjectsInner platform(String platform) {
    
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @javax.annotation.Nullable
  public String getPlatform() {
    return platform;
  }


  public void setPlatform(String platform) {
    this.platform = platform;
  }


  public RetrieveAnOrganization200ResponseProjectsInner platforms(List<String> platforms) {
    
    this.platforms = platforms;
    return this;
  }

  public RetrieveAnOrganization200ResponseProjectsInner addPlatformsItem(String platformsItem) {
    if (this.platforms == null) {
      this.platforms = new ArrayList<>();
    }
    this.platforms.add(platformsItem);
    return this;
  }

   /**
   * Get platforms
   * @return platforms
  **/
  @javax.annotation.Nonnull
  public List<String> getPlatforms() {
    return platforms;
  }


  public void setPlatforms(List<String> platforms) {
    this.platforms = platforms;
  }


  public RetrieveAnOrganization200ResponseProjectsInner slug(String slug) {
    
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @javax.annotation.Nonnull
  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    this.slug = slug;
  }


  public RetrieveAnOrganization200ResponseProjectsInner team(RetrieveAnOrganization200ResponseProjectsInnerTeam team) {
    
    this.team = team;
    return this;
  }

   /**
   * Get team
   * @return team
  **/
  @javax.annotation.Nullable
  public RetrieveAnOrganization200ResponseProjectsInnerTeam getTeam() {
    return team;
  }


  public void setTeam(RetrieveAnOrganization200ResponseProjectsInnerTeam team) {
    this.team = team;
  }


  public RetrieveAnOrganization200ResponseProjectsInner teams(List<ListAnOrganizationSProjects200ResponseInnerTeamsInner> teams) {
    
    this.teams = teams;
    return this;
  }

  public RetrieveAnOrganization200ResponseProjectsInner addTeamsItem(ListAnOrganizationSProjects200ResponseInnerTeamsInner teamsItem) {
    if (this.teams == null) {
      this.teams = new ArrayList<>();
    }
    this.teams.add(teamsItem);
    return this;
  }

   /**
   * Get teams
   * @return teams
  **/
  @javax.annotation.Nonnull
  public List<ListAnOrganizationSProjects200ResponseInnerTeamsInner> getTeams() {
    return teams;
  }


  public void setTeams(List<ListAnOrganizationSProjects200ResponseInnerTeamsInner> teams) {
    this.teams = teams;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveAnOrganization200ResponseProjectsInner retrieveAnOrganization200ResponseProjectsInner = (RetrieveAnOrganization200ResponseProjectsInner) o;
    return Objects.equals(this.dateCreated, retrieveAnOrganization200ResponseProjectsInner.dateCreated) &&
        Objects.equals(this.firstEvent, retrieveAnOrganization200ResponseProjectsInner.firstEvent) &&
        Objects.equals(this.hasAccess, retrieveAnOrganization200ResponseProjectsInner.hasAccess) &&
        Objects.equals(this.id, retrieveAnOrganization200ResponseProjectsInner.id) &&
        Objects.equals(this.isBookmarked, retrieveAnOrganization200ResponseProjectsInner.isBookmarked) &&
        Objects.equals(this.isMember, retrieveAnOrganization200ResponseProjectsInner.isMember) &&
        Objects.equals(this.latestDeploys, retrieveAnOrganization200ResponseProjectsInner.latestDeploys) &&
        Objects.equals(this.name, retrieveAnOrganization200ResponseProjectsInner.name) &&
        Objects.equals(this.platform, retrieveAnOrganization200ResponseProjectsInner.platform) &&
        Objects.equals(this.platforms, retrieveAnOrganization200ResponseProjectsInner.platforms) &&
        Objects.equals(this.slug, retrieveAnOrganization200ResponseProjectsInner.slug) &&
        Objects.equals(this.team, retrieveAnOrganization200ResponseProjectsInner.team) &&
        Objects.equals(this.teams, retrieveAnOrganization200ResponseProjectsInner.teams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateCreated, firstEvent, hasAccess, id, isBookmarked, isMember, latestDeploys, name, platform, platforms, slug, team, teams);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveAnOrganization200ResponseProjectsInner {\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    firstEvent: ").append(toIndentedString(firstEvent)).append("\n");
    sb.append("    hasAccess: ").append(toIndentedString(hasAccess)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isBookmarked: ").append(toIndentedString(isBookmarked)).append("\n");
    sb.append("    isMember: ").append(toIndentedString(isMember)).append("\n");
    sb.append("    latestDeploys: ").append(toIndentedString(latestDeploys)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    platforms: ").append(toIndentedString(platforms)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dateCreated");
    openapiFields.add("firstEvent");
    openapiFields.add("hasAccess");
    openapiFields.add("id");
    openapiFields.add("isBookmarked");
    openapiFields.add("isMember");
    openapiFields.add("latestDeploys");
    openapiFields.add("name");
    openapiFields.add("platform");
    openapiFields.add("platforms");
    openapiFields.add("slug");
    openapiFields.add("team");
    openapiFields.add("teams");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("dateCreated");
    openapiRequiredFields.add("firstEvent");
    openapiRequiredFields.add("hasAccess");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("isBookmarked");
    openapiRequiredFields.add("isMember");
    openapiRequiredFields.add("latestDeploys");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("platform");
    openapiRequiredFields.add("platforms");
    openapiRequiredFields.add("slug");
    openapiRequiredFields.add("team");
    openapiRequiredFields.add("teams");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RetrieveAnOrganization200ResponseProjectsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!RetrieveAnOrganization200ResponseProjectsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RetrieveAnOrganization200ResponseProjectsInner is not found in the empty JSON string", RetrieveAnOrganization200ResponseProjectsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!RetrieveAnOrganization200ResponseProjectsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RetrieveAnOrganization200ResponseProjectsInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RetrieveAnOrganization200ResponseProjectsInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("dateCreated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateCreated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateCreated").toString()));
      }
      if (!jsonObj.get("firstEvent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstEvent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstEvent").toString()));
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("latestDeploys").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latestDeploys` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latestDeploys").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("platform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("platforms") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("platforms").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `platforms` to be an array in the JSON string but got `%s`", jsonObj.get("platforms").toString()));
      }
      if (!jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      // validate the required field `team`
      RetrieveAnOrganization200ResponseProjectsInnerTeam.validateJsonObject(jsonObj.getAsJsonObject("team"));
      // ensure the json data is an array
      if (!jsonObj.get("teams").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `teams` to be an array in the JSON string but got `%s`", jsonObj.get("teams").toString()));
      }

      JsonArray jsonArrayteams = jsonObj.getAsJsonArray("teams");
      // validate the required field `teams` (array)
      for (int i = 0; i < jsonArrayteams.size(); i++) {
        ListAnOrganizationSProjects200ResponseInnerTeamsInner.validateJsonObject(jsonArrayteams.get(i).getAsJsonObject());
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RetrieveAnOrganization200ResponseProjectsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RetrieveAnOrganization200ResponseProjectsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RetrieveAnOrganization200ResponseProjectsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RetrieveAnOrganization200ResponseProjectsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<RetrieveAnOrganization200ResponseProjectsInner>() {
           @Override
           public void write(JsonWriter out, RetrieveAnOrganization200ResponseProjectsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RetrieveAnOrganization200ResponseProjectsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RetrieveAnOrganization200ResponseProjectsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RetrieveAnOrganization200ResponseProjectsInner
  * @throws IOException if the JSON string is invalid with respect to RetrieveAnOrganization200ResponseProjectsInner
  */
  public static RetrieveAnOrganization200ResponseProjectsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RetrieveAnOrganization200ResponseProjectsInner.class);
  }

 /**
  * Convert an instance of RetrieveAnOrganization200ResponseProjectsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

