/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sentry.api.client.model.ListAProjectSClientKeys200ResponseInnerBrowserSdk;
import com.sentry.api.client.model.ListAProjectSClientKeys200ResponseInnerDsn;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.sentry.api.client.JSON;

/**
 * ListAProjectSClientKeys200ResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-16T12:28:08.282703Z[Etc/UTC]")
public class ListAProjectSClientKeys200ResponseInner {
  public static final String SERIALIZED_NAME_BROWSER_SDK = "browserSdk";
  @SerializedName(SERIALIZED_NAME_BROWSER_SDK)
  private ListAProjectSClientKeys200ResponseInnerBrowserSdk browserSdk;

  public static final String SERIALIZED_NAME_BROWSER_SDK_VERSION = "browserSdkVersion";
  @SerializedName(SERIALIZED_NAME_BROWSER_SDK_VERSION)
  private String browserSdkVersion;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private String dateCreated;

  public static final String SERIALIZED_NAME_DSN = "dsn";
  @SerializedName(SERIALIZED_NAME_DSN)
  private ListAProjectSClientKeys200ResponseInnerDsn dsn;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private Integer projectId;

  public static final String SERIALIZED_NAME_PUBLIC = "public";
  @SerializedName(SERIALIZED_NAME_PUBLIC)
  private String _public;

  public static final String SERIALIZED_NAME_RATE_LIMIT = "rateLimit";
  @SerializedName(SERIALIZED_NAME_RATE_LIMIT)
  private String rateLimit;

  public static final String SERIALIZED_NAME_SECRET = "secret";
  @SerializedName(SERIALIZED_NAME_SECRET)
  private String secret;

  public ListAProjectSClientKeys200ResponseInner() {
  }

  public ListAProjectSClientKeys200ResponseInner browserSdk(ListAProjectSClientKeys200ResponseInnerBrowserSdk browserSdk) {
    
    this.browserSdk = browserSdk;
    return this;
  }

   /**
   * Get browserSdk
   * @return browserSdk
  **/
  @javax.annotation.Nonnull
  public ListAProjectSClientKeys200ResponseInnerBrowserSdk getBrowserSdk() {
    return browserSdk;
  }


  public void setBrowserSdk(ListAProjectSClientKeys200ResponseInnerBrowserSdk browserSdk) {
    this.browserSdk = browserSdk;
  }


  public ListAProjectSClientKeys200ResponseInner browserSdkVersion(String browserSdkVersion) {
    
    this.browserSdkVersion = browserSdkVersion;
    return this;
  }

   /**
   * Get browserSdkVersion
   * @return browserSdkVersion
  **/
  @javax.annotation.Nonnull
  public String getBrowserSdkVersion() {
    return browserSdkVersion;
  }


  public void setBrowserSdkVersion(String browserSdkVersion) {
    this.browserSdkVersion = browserSdkVersion;
  }


  public ListAProjectSClientKeys200ResponseInner dateCreated(String dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @javax.annotation.Nonnull
  public String getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ListAProjectSClientKeys200ResponseInner dsn(ListAProjectSClientKeys200ResponseInnerDsn dsn) {
    
    this.dsn = dsn;
    return this;
  }

   /**
   * Get dsn
   * @return dsn
  **/
  @javax.annotation.Nonnull
  public ListAProjectSClientKeys200ResponseInnerDsn getDsn() {
    return dsn;
  }


  public void setDsn(ListAProjectSClientKeys200ResponseInnerDsn dsn) {
    this.dsn = dsn;
  }


  public ListAProjectSClientKeys200ResponseInner id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ListAProjectSClientKeys200ResponseInner isActive(Boolean isActive) {
    
    this.isActive = isActive;
    return this;
  }

   /**
   * Get isActive
   * @return isActive
  **/
  @javax.annotation.Nonnull
  public Boolean getIsActive() {
    return isActive;
  }


  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public ListAProjectSClientKeys200ResponseInner label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @javax.annotation.Nonnull
  public String getLabel() {
    return label;
  }


  public void setLabel(String label) {
    this.label = label;
  }


  public ListAProjectSClientKeys200ResponseInner name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ListAProjectSClientKeys200ResponseInner projectId(Integer projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nonnull
  public Integer getProjectId() {
    return projectId;
  }


  public void setProjectId(Integer projectId) {
    this.projectId = projectId;
  }


  public ListAProjectSClientKeys200ResponseInner _public(String _public) {
    
    this._public = _public;
    return this;
  }

   /**
   * Get _public
   * @return _public
  **/
  @javax.annotation.Nonnull
  public String getPublic() {
    return _public;
  }


  public void setPublic(String _public) {
    this._public = _public;
  }


  public ListAProjectSClientKeys200ResponseInner rateLimit(String rateLimit) {
    
    this.rateLimit = rateLimit;
    return this;
  }

   /**
   * Get rateLimit
   * @return rateLimit
  **/
  @javax.annotation.Nullable
  public String getRateLimit() {
    return rateLimit;
  }


  public void setRateLimit(String rateLimit) {
    this.rateLimit = rateLimit;
  }


  public ListAProjectSClientKeys200ResponseInner secret(String secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * Get secret
   * @return secret
  **/
  @javax.annotation.Nonnull
  public String getSecret() {
    return secret;
  }


  public void setSecret(String secret) {
    this.secret = secret;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListAProjectSClientKeys200ResponseInner listAProjectSClientKeys200ResponseInner = (ListAProjectSClientKeys200ResponseInner) o;
    return Objects.equals(this.browserSdk, listAProjectSClientKeys200ResponseInner.browserSdk) &&
        Objects.equals(this.browserSdkVersion, listAProjectSClientKeys200ResponseInner.browserSdkVersion) &&
        Objects.equals(this.dateCreated, listAProjectSClientKeys200ResponseInner.dateCreated) &&
        Objects.equals(this.dsn, listAProjectSClientKeys200ResponseInner.dsn) &&
        Objects.equals(this.id, listAProjectSClientKeys200ResponseInner.id) &&
        Objects.equals(this.isActive, listAProjectSClientKeys200ResponseInner.isActive) &&
        Objects.equals(this.label, listAProjectSClientKeys200ResponseInner.label) &&
        Objects.equals(this.name, listAProjectSClientKeys200ResponseInner.name) &&
        Objects.equals(this.projectId, listAProjectSClientKeys200ResponseInner.projectId) &&
        Objects.equals(this._public, listAProjectSClientKeys200ResponseInner._public) &&
        Objects.equals(this.rateLimit, listAProjectSClientKeys200ResponseInner.rateLimit) &&
        Objects.equals(this.secret, listAProjectSClientKeys200ResponseInner.secret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(browserSdk, browserSdkVersion, dateCreated, dsn, id, isActive, label, name, projectId, _public, rateLimit, secret);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListAProjectSClientKeys200ResponseInner {\n");
    sb.append("    browserSdk: ").append(toIndentedString(browserSdk)).append("\n");
    sb.append("    browserSdkVersion: ").append(toIndentedString(browserSdkVersion)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dsn: ").append(toIndentedString(dsn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    _public: ").append(toIndentedString(_public)).append("\n");
    sb.append("    rateLimit: ").append(toIndentedString(rateLimit)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("browserSdk");
    openapiFields.add("browserSdkVersion");
    openapiFields.add("dateCreated");
    openapiFields.add("dsn");
    openapiFields.add("id");
    openapiFields.add("isActive");
    openapiFields.add("label");
    openapiFields.add("name");
    openapiFields.add("projectId");
    openapiFields.add("public");
    openapiFields.add("rateLimit");
    openapiFields.add("secret");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("browserSdk");
    openapiRequiredFields.add("browserSdkVersion");
    openapiRequiredFields.add("dateCreated");
    openapiRequiredFields.add("dsn");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("isActive");
    openapiRequiredFields.add("label");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("projectId");
    openapiRequiredFields.add("public");
    openapiRequiredFields.add("rateLimit");
    openapiRequiredFields.add("secret");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ListAProjectSClientKeys200ResponseInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ListAProjectSClientKeys200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListAProjectSClientKeys200ResponseInner is not found in the empty JSON string", ListAProjectSClientKeys200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ListAProjectSClientKeys200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListAProjectSClientKeys200ResponseInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ListAProjectSClientKeys200ResponseInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the required field `browserSdk`
      ListAProjectSClientKeys200ResponseInnerBrowserSdk.validateJsonObject(jsonObj.getAsJsonObject("browserSdk"));
      if (!jsonObj.get("browserSdkVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `browserSdkVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("browserSdkVersion").toString()));
      }
      if (!jsonObj.get("dateCreated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateCreated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateCreated").toString()));
      }
      // validate the required field `dsn`
      ListAProjectSClientKeys200ResponseInnerDsn.validateJsonObject(jsonObj.getAsJsonObject("dsn"));
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("label").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("label").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("public").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `public` to be a primitive type in the JSON string but got `%s`", jsonObj.get("public").toString()));
      }
      if (!jsonObj.get("rateLimit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rateLimit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rateLimit").toString()));
      }
      if (!jsonObj.get("secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secret").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListAProjectSClientKeys200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListAProjectSClientKeys200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListAProjectSClientKeys200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListAProjectSClientKeys200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ListAProjectSClientKeys200ResponseInner>() {
           @Override
           public void write(JsonWriter out, ListAProjectSClientKeys200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListAProjectSClientKeys200ResponseInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ListAProjectSClientKeys200ResponseInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ListAProjectSClientKeys200ResponseInner
  * @throws IOException if the JSON string is invalid with respect to ListAProjectSClientKeys200ResponseInner
  */
  public static ListAProjectSClientKeys200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListAProjectSClientKeys200ResponseInner.class);
  }

 /**
  * Convert an instance of ListAProjectSClientKeys200ResponseInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

