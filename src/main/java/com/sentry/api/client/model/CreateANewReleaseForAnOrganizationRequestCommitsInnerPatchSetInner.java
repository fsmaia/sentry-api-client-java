/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.sentry.api.client.JSON;


/**
 * CreateANewReleaseForAnOrganizationRequestCommitsInnerPatchSetInner
 */
@JsonPropertyOrder({
  CreateANewReleaseForAnOrganizationRequestCommitsInnerPatchSetInner.JSON_PROPERTY_PATH,
  CreateANewReleaseForAnOrganizationRequestCommitsInnerPatchSetInner.JSON_PROPERTY_TYPE
})
@JsonTypeName("Create_a_New_Release_for_an_Organization_request_commits_inner_patch_set_inner")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-16T12:58:30.193453Z[Etc/UTC]")
public class CreateANewReleaseForAnOrganizationRequestCommitsInnerPatchSetInner {
  public static final String JSON_PROPERTY_PATH = "path";
  private String path;

  /**
   * The type of change that happened in the commit.
   */
  public enum TypeEnum {
    A("A"),
    
    M("M"),
    
    D("D");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public CreateANewReleaseForAnOrganizationRequestCommitsInnerPatchSetInner() { 
  }

  public CreateANewReleaseForAnOrganizationRequestCommitsInnerPatchSetInner path(String path) {
    this.path = path;
    return this;
  }

   /**
   * The path to the file. Both forward and backward slashes are supported.
   * @return path
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPath() {
    return path;
  }


  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPath(String path) {
    this.path = path;
  }


  public CreateANewReleaseForAnOrganizationRequestCommitsInnerPatchSetInner type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of change that happened in the commit.
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  /**
   * Return true if this Create_a_New_Release_for_an_Organization_request_commits_inner_patch_set_inner object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateANewReleaseForAnOrganizationRequestCommitsInnerPatchSetInner createANewReleaseForAnOrganizationRequestCommitsInnerPatchSetInner = (CreateANewReleaseForAnOrganizationRequestCommitsInnerPatchSetInner) o;
    return Objects.equals(this.path, createANewReleaseForAnOrganizationRequestCommitsInnerPatchSetInner.path) &&
        Objects.equals(this.type, createANewReleaseForAnOrganizationRequestCommitsInnerPatchSetInner.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(path, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateANewReleaseForAnOrganizationRequestCommitsInnerPatchSetInner {\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

