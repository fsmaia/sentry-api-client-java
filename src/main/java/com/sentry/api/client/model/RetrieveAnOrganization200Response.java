/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sentry.api.client.model.RetrieveATeam200ResponseAvatar;
import com.sentry.api.client.model.RetrieveAnOrganization200ResponseAvailableRolesInner;
import com.sentry.api.client.model.RetrieveAnOrganization200ResponseProjectsInner;
import com.sentry.api.client.model.UpdateATeam200Response;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.sentry.api.client.JSON;

/**
 * RetrieveAnOrganization200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-15T10:01:41.950429Z[Etc/UTC]")
public class RetrieveAnOrganization200Response implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ACCESS = "access";
  @SerializedName(SERIALIZED_NAME_ACCESS)
  private List<String> access = new ArrayList<>();

  public static final String SERIALIZED_NAME_ALLOW_SHARED_ISSUES = "allowSharedIssues";
  @SerializedName(SERIALIZED_NAME_ALLOW_SHARED_ISSUES)
  private Boolean allowSharedIssues;

  public static final String SERIALIZED_NAME_AVAILABLE_ROLES = "availableRoles";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_ROLES)
  private List<RetrieveAnOrganization200ResponseAvailableRolesInner> availableRoles = new ArrayList<>();

  public static final String SERIALIZED_NAME_AVATAR = "avatar";
  @SerializedName(SERIALIZED_NAME_AVATAR)
  private RetrieveATeam200ResponseAvatar avatar;

  public static final String SERIALIZED_NAME_DATA_SCRUBBER = "dataScrubber";
  @SerializedName(SERIALIZED_NAME_DATA_SCRUBBER)
  private Boolean dataScrubber;

  public static final String SERIALIZED_NAME_DATA_SCRUBBER_DEFAULTS = "dataScrubberDefaults";
  @SerializedName(SERIALIZED_NAME_DATA_SCRUBBER_DEFAULTS)
  private Boolean dataScrubberDefaults;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private OffsetDateTime dateCreated;

  public static final String SERIALIZED_NAME_DEFAULT_ROLE = "defaultRole";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ROLE)
  private String defaultRole;

  public static final String SERIALIZED_NAME_ENHANCED_PRIVACY = "enhancedPrivacy";
  @SerializedName(SERIALIZED_NAME_ENHANCED_PRIVACY)
  private Boolean enhancedPrivacy;

  public static final String SERIALIZED_NAME_EXPERIMENTS = "experiments";
  @SerializedName(SERIALIZED_NAME_EXPERIMENTS)
  private Object experiments;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private List<String> features = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_DEFAULT = "isDefault";
  @SerializedName(SERIALIZED_NAME_IS_DEFAULT)
  private Boolean isDefault;

  public static final String SERIALIZED_NAME_IS_EARLY_ADOPTER = "isEarlyAdopter";
  @SerializedName(SERIALIZED_NAME_IS_EARLY_ADOPTER)
  private Boolean isEarlyAdopter;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ONBOARDING_TASKS = "onboardingTasks";
  @SerializedName(SERIALIZED_NAME_ONBOARDING_TASKS)
  private List<Object> onboardingTasks = new ArrayList<>();

  public static final String SERIALIZED_NAME_OPEN_MEMBERSHIP = "openMembership";
  @SerializedName(SERIALIZED_NAME_OPEN_MEMBERSHIP)
  private Boolean openMembership;

  public static final String SERIALIZED_NAME_PENDING_ACCESS_REQUESTS = "pendingAccessRequests";
  @SerializedName(SERIALIZED_NAME_PENDING_ACCESS_REQUESTS)
  private Long pendingAccessRequests;

  public static final String SERIALIZED_NAME_PROJECTS = "projects";
  @SerializedName(SERIALIZED_NAME_PROJECTS)
  private List<RetrieveAnOrganization200ResponseProjectsInner> projects = new ArrayList<>();

  public static final String SERIALIZED_NAME_QUOTA = "quota";
  @SerializedName(SERIALIZED_NAME_QUOTA)
  private Object quota;

  public static final String SERIALIZED_NAME_REQUIRE2_F_A = "require2FA";
  @SerializedName(SERIALIZED_NAME_REQUIRE2_F_A)
  private Boolean require2FA;

  public static final String SERIALIZED_NAME_SAFE_FIELDS = "safeFields";
  @SerializedName(SERIALIZED_NAME_SAFE_FIELDS)
  private List<String> safeFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_SCRAPE_JAVA_SCRIPT = "scrapeJavaScript";
  @SerializedName(SERIALIZED_NAME_SCRAPE_JAVA_SCRIPT)
  private Boolean scrapeJavaScript;

  public static final String SERIALIZED_NAME_SCRUB_I_P_ADDRESSES = "scrubIPAddresses";
  @SerializedName(SERIALIZED_NAME_SCRUB_I_P_ADDRESSES)
  private Boolean scrubIPAddresses;

  public static final String SERIALIZED_NAME_SENSITIVE_FIELDS = "sensitiveFields";
  @SerializedName(SERIALIZED_NAME_SENSITIVE_FIELDS)
  private List<String> sensitiveFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private RetrieveAnOrganization200ResponseAvailableRolesInner status;

  public static final String SERIALIZED_NAME_STORE_CRASH_REPORTS = "storeCrashReports";
  @SerializedName(SERIALIZED_NAME_STORE_CRASH_REPORTS)
  private Long storeCrashReports;

  public static final String SERIALIZED_NAME_TEAMS = "teams";
  @SerializedName(SERIALIZED_NAME_TEAMS)
  private List<UpdateATeam200Response> teams = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRUSTED_RELAYS = "trustedRelays";
  @SerializedName(SERIALIZED_NAME_TRUSTED_RELAYS)
  private List<String> trustedRelays = new ArrayList<>();

  public RetrieveAnOrganization200Response() {
  }

  public RetrieveAnOrganization200Response access(List<String> access) {
    
    this.access = access;
    return this;
  }

  public RetrieveAnOrganization200Response addAccessItem(String accessItem) {
    if (this.access == null) {
      this.access = new ArrayList<>();
    }
    this.access.add(accessItem);
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @javax.annotation.Nonnull
  public List<String> getAccess() {
    return access;
  }


  public void setAccess(List<String> access) {
    this.access = access;
  }


  public RetrieveAnOrganization200Response allowSharedIssues(Boolean allowSharedIssues) {
    
    this.allowSharedIssues = allowSharedIssues;
    return this;
  }

   /**
   * Get allowSharedIssues
   * @return allowSharedIssues
  **/
  @javax.annotation.Nonnull
  public Boolean getAllowSharedIssues() {
    return allowSharedIssues;
  }


  public void setAllowSharedIssues(Boolean allowSharedIssues) {
    this.allowSharedIssues = allowSharedIssues;
  }


  public RetrieveAnOrganization200Response availableRoles(List<RetrieveAnOrganization200ResponseAvailableRolesInner> availableRoles) {
    
    this.availableRoles = availableRoles;
    return this;
  }

  public RetrieveAnOrganization200Response addAvailableRolesItem(RetrieveAnOrganization200ResponseAvailableRolesInner availableRolesItem) {
    if (this.availableRoles == null) {
      this.availableRoles = new ArrayList<>();
    }
    this.availableRoles.add(availableRolesItem);
    return this;
  }

   /**
   * Get availableRoles
   * @return availableRoles
  **/
  @javax.annotation.Nonnull
  public List<RetrieveAnOrganization200ResponseAvailableRolesInner> getAvailableRoles() {
    return availableRoles;
  }


  public void setAvailableRoles(List<RetrieveAnOrganization200ResponseAvailableRolesInner> availableRoles) {
    this.availableRoles = availableRoles;
  }


  public RetrieveAnOrganization200Response avatar(RetrieveATeam200ResponseAvatar avatar) {
    
    this.avatar = avatar;
    return this;
  }

   /**
   * Get avatar
   * @return avatar
  **/
  @javax.annotation.Nonnull
  public RetrieveATeam200ResponseAvatar getAvatar() {
    return avatar;
  }


  public void setAvatar(RetrieveATeam200ResponseAvatar avatar) {
    this.avatar = avatar;
  }


  public RetrieveAnOrganization200Response dataScrubber(Boolean dataScrubber) {
    
    this.dataScrubber = dataScrubber;
    return this;
  }

   /**
   * Get dataScrubber
   * @return dataScrubber
  **/
  @javax.annotation.Nonnull
  public Boolean getDataScrubber() {
    return dataScrubber;
  }


  public void setDataScrubber(Boolean dataScrubber) {
    this.dataScrubber = dataScrubber;
  }


  public RetrieveAnOrganization200Response dataScrubberDefaults(Boolean dataScrubberDefaults) {
    
    this.dataScrubberDefaults = dataScrubberDefaults;
    return this;
  }

   /**
   * Get dataScrubberDefaults
   * @return dataScrubberDefaults
  **/
  @javax.annotation.Nonnull
  public Boolean getDataScrubberDefaults() {
    return dataScrubberDefaults;
  }


  public void setDataScrubberDefaults(Boolean dataScrubberDefaults) {
    this.dataScrubberDefaults = dataScrubberDefaults;
  }


  public RetrieveAnOrganization200Response dateCreated(OffsetDateTime dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @javax.annotation.Nonnull
  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(OffsetDateTime dateCreated) {
    this.dateCreated = dateCreated;
  }


  public RetrieveAnOrganization200Response defaultRole(String defaultRole) {
    
    this.defaultRole = defaultRole;
    return this;
  }

   /**
   * Get defaultRole
   * @return defaultRole
  **/
  @javax.annotation.Nonnull
  public String getDefaultRole() {
    return defaultRole;
  }


  public void setDefaultRole(String defaultRole) {
    this.defaultRole = defaultRole;
  }


  public RetrieveAnOrganization200Response enhancedPrivacy(Boolean enhancedPrivacy) {
    
    this.enhancedPrivacy = enhancedPrivacy;
    return this;
  }

   /**
   * Get enhancedPrivacy
   * @return enhancedPrivacy
  **/
  @javax.annotation.Nonnull
  public Boolean getEnhancedPrivacy() {
    return enhancedPrivacy;
  }


  public void setEnhancedPrivacy(Boolean enhancedPrivacy) {
    this.enhancedPrivacy = enhancedPrivacy;
  }


  public RetrieveAnOrganization200Response experiments(Object experiments) {
    
    this.experiments = experiments;
    return this;
  }

   /**
   * Get experiments
   * @return experiments
  **/
  @javax.annotation.Nonnull
  public Object getExperiments() {
    return experiments;
  }


  public void setExperiments(Object experiments) {
    this.experiments = experiments;
  }


  public RetrieveAnOrganization200Response features(List<String> features) {
    
    this.features = features;
    return this;
  }

  public RetrieveAnOrganization200Response addFeaturesItem(String featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @javax.annotation.Nonnull
  public List<String> getFeatures() {
    return features;
  }


  public void setFeatures(List<String> features) {
    this.features = features;
  }


  public RetrieveAnOrganization200Response id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public RetrieveAnOrganization200Response isDefault(Boolean isDefault) {
    
    this.isDefault = isDefault;
    return this;
  }

   /**
   * Get isDefault
   * @return isDefault
  **/
  @javax.annotation.Nonnull
  public Boolean getIsDefault() {
    return isDefault;
  }


  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }


  public RetrieveAnOrganization200Response isEarlyAdopter(Boolean isEarlyAdopter) {
    
    this.isEarlyAdopter = isEarlyAdopter;
    return this;
  }

   /**
   * Get isEarlyAdopter
   * @return isEarlyAdopter
  **/
  @javax.annotation.Nonnull
  public Boolean getIsEarlyAdopter() {
    return isEarlyAdopter;
  }


  public void setIsEarlyAdopter(Boolean isEarlyAdopter) {
    this.isEarlyAdopter = isEarlyAdopter;
  }


  public RetrieveAnOrganization200Response name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public RetrieveAnOrganization200Response onboardingTasks(List<Object> onboardingTasks) {
    
    this.onboardingTasks = onboardingTasks;
    return this;
  }

  public RetrieveAnOrganization200Response addOnboardingTasksItem(Object onboardingTasksItem) {
    if (this.onboardingTasks == null) {
      this.onboardingTasks = new ArrayList<>();
    }
    this.onboardingTasks.add(onboardingTasksItem);
    return this;
  }

   /**
   * Get onboardingTasks
   * @return onboardingTasks
  **/
  @javax.annotation.Nonnull
  public List<Object> getOnboardingTasks() {
    return onboardingTasks;
  }


  public void setOnboardingTasks(List<Object> onboardingTasks) {
    this.onboardingTasks = onboardingTasks;
  }


  public RetrieveAnOrganization200Response openMembership(Boolean openMembership) {
    
    this.openMembership = openMembership;
    return this;
  }

   /**
   * Get openMembership
   * @return openMembership
  **/
  @javax.annotation.Nonnull
  public Boolean getOpenMembership() {
    return openMembership;
  }


  public void setOpenMembership(Boolean openMembership) {
    this.openMembership = openMembership;
  }


  public RetrieveAnOrganization200Response pendingAccessRequests(Long pendingAccessRequests) {
    
    this.pendingAccessRequests = pendingAccessRequests;
    return this;
  }

   /**
   * Get pendingAccessRequests
   * @return pendingAccessRequests
  **/
  @javax.annotation.Nonnull
  public Long getPendingAccessRequests() {
    return pendingAccessRequests;
  }


  public void setPendingAccessRequests(Long pendingAccessRequests) {
    this.pendingAccessRequests = pendingAccessRequests;
  }


  public RetrieveAnOrganization200Response projects(List<RetrieveAnOrganization200ResponseProjectsInner> projects) {
    
    this.projects = projects;
    return this;
  }

  public RetrieveAnOrganization200Response addProjectsItem(RetrieveAnOrganization200ResponseProjectsInner projectsItem) {
    if (this.projects == null) {
      this.projects = new ArrayList<>();
    }
    this.projects.add(projectsItem);
    return this;
  }

   /**
   * Get projects
   * @return projects
  **/
  @javax.annotation.Nonnull
  public List<RetrieveAnOrganization200ResponseProjectsInner> getProjects() {
    return projects;
  }


  public void setProjects(List<RetrieveAnOrganization200ResponseProjectsInner> projects) {
    this.projects = projects;
  }


  public RetrieveAnOrganization200Response quota(Object quota) {
    
    this.quota = quota;
    return this;
  }

   /**
   * Get quota
   * @return quota
  **/
  @javax.annotation.Nonnull
  public Object getQuota() {
    return quota;
  }


  public void setQuota(Object quota) {
    this.quota = quota;
  }


  public RetrieveAnOrganization200Response require2FA(Boolean require2FA) {
    
    this.require2FA = require2FA;
    return this;
  }

   /**
   * Get require2FA
   * @return require2FA
  **/
  @javax.annotation.Nonnull
  public Boolean getRequire2FA() {
    return require2FA;
  }


  public void setRequire2FA(Boolean require2FA) {
    this.require2FA = require2FA;
  }


  public RetrieveAnOrganization200Response safeFields(List<String> safeFields) {
    
    this.safeFields = safeFields;
    return this;
  }

  public RetrieveAnOrganization200Response addSafeFieldsItem(String safeFieldsItem) {
    if (this.safeFields == null) {
      this.safeFields = new ArrayList<>();
    }
    this.safeFields.add(safeFieldsItem);
    return this;
  }

   /**
   * Get safeFields
   * @return safeFields
  **/
  @javax.annotation.Nonnull
  public List<String> getSafeFields() {
    return safeFields;
  }


  public void setSafeFields(List<String> safeFields) {
    this.safeFields = safeFields;
  }


  public RetrieveAnOrganization200Response scrapeJavaScript(Boolean scrapeJavaScript) {
    
    this.scrapeJavaScript = scrapeJavaScript;
    return this;
  }

   /**
   * Get scrapeJavaScript
   * @return scrapeJavaScript
  **/
  @javax.annotation.Nonnull
  public Boolean getScrapeJavaScript() {
    return scrapeJavaScript;
  }


  public void setScrapeJavaScript(Boolean scrapeJavaScript) {
    this.scrapeJavaScript = scrapeJavaScript;
  }


  public RetrieveAnOrganization200Response scrubIPAddresses(Boolean scrubIPAddresses) {
    
    this.scrubIPAddresses = scrubIPAddresses;
    return this;
  }

   /**
   * Get scrubIPAddresses
   * @return scrubIPAddresses
  **/
  @javax.annotation.Nonnull
  public Boolean getScrubIPAddresses() {
    return scrubIPAddresses;
  }


  public void setScrubIPAddresses(Boolean scrubIPAddresses) {
    this.scrubIPAddresses = scrubIPAddresses;
  }


  public RetrieveAnOrganization200Response sensitiveFields(List<String> sensitiveFields) {
    
    this.sensitiveFields = sensitiveFields;
    return this;
  }

  public RetrieveAnOrganization200Response addSensitiveFieldsItem(String sensitiveFieldsItem) {
    if (this.sensitiveFields == null) {
      this.sensitiveFields = new ArrayList<>();
    }
    this.sensitiveFields.add(sensitiveFieldsItem);
    return this;
  }

   /**
   * Get sensitiveFields
   * @return sensitiveFields
  **/
  @javax.annotation.Nonnull
  public List<String> getSensitiveFields() {
    return sensitiveFields;
  }


  public void setSensitiveFields(List<String> sensitiveFields) {
    this.sensitiveFields = sensitiveFields;
  }


  public RetrieveAnOrganization200Response slug(String slug) {
    
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @javax.annotation.Nonnull
  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    this.slug = slug;
  }


  public RetrieveAnOrganization200Response status(RetrieveAnOrganization200ResponseAvailableRolesInner status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  public RetrieveAnOrganization200ResponseAvailableRolesInner getStatus() {
    return status;
  }


  public void setStatus(RetrieveAnOrganization200ResponseAvailableRolesInner status) {
    this.status = status;
  }


  public RetrieveAnOrganization200Response storeCrashReports(Long storeCrashReports) {
    
    this.storeCrashReports = storeCrashReports;
    return this;
  }

   /**
   * Get storeCrashReports
   * @return storeCrashReports
  **/
  @javax.annotation.Nonnull
  public Long getStoreCrashReports() {
    return storeCrashReports;
  }


  public void setStoreCrashReports(Long storeCrashReports) {
    this.storeCrashReports = storeCrashReports;
  }


  public RetrieveAnOrganization200Response teams(List<UpdateATeam200Response> teams) {
    
    this.teams = teams;
    return this;
  }

  public RetrieveAnOrganization200Response addTeamsItem(UpdateATeam200Response teamsItem) {
    if (this.teams == null) {
      this.teams = new ArrayList<>();
    }
    this.teams.add(teamsItem);
    return this;
  }

   /**
   * Get teams
   * @return teams
  **/
  @javax.annotation.Nonnull
  public List<UpdateATeam200Response> getTeams() {
    return teams;
  }


  public void setTeams(List<UpdateATeam200Response> teams) {
    this.teams = teams;
  }


  public RetrieveAnOrganization200Response trustedRelays(List<String> trustedRelays) {
    
    this.trustedRelays = trustedRelays;
    return this;
  }

  public RetrieveAnOrganization200Response addTrustedRelaysItem(String trustedRelaysItem) {
    if (this.trustedRelays == null) {
      this.trustedRelays = new ArrayList<>();
    }
    this.trustedRelays.add(trustedRelaysItem);
    return this;
  }

   /**
   * Get trustedRelays
   * @return trustedRelays
  **/
  @javax.annotation.Nonnull
  public List<String> getTrustedRelays() {
    return trustedRelays;
  }


  public void setTrustedRelays(List<String> trustedRelays) {
    this.trustedRelays = trustedRelays;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveAnOrganization200Response retrieveAnOrganization200Response = (RetrieveAnOrganization200Response) o;
    return Objects.equals(this.access, retrieveAnOrganization200Response.access) &&
        Objects.equals(this.allowSharedIssues, retrieveAnOrganization200Response.allowSharedIssues) &&
        Objects.equals(this.availableRoles, retrieveAnOrganization200Response.availableRoles) &&
        Objects.equals(this.avatar, retrieveAnOrganization200Response.avatar) &&
        Objects.equals(this.dataScrubber, retrieveAnOrganization200Response.dataScrubber) &&
        Objects.equals(this.dataScrubberDefaults, retrieveAnOrganization200Response.dataScrubberDefaults) &&
        Objects.equals(this.dateCreated, retrieveAnOrganization200Response.dateCreated) &&
        Objects.equals(this.defaultRole, retrieveAnOrganization200Response.defaultRole) &&
        Objects.equals(this.enhancedPrivacy, retrieveAnOrganization200Response.enhancedPrivacy) &&
        Objects.equals(this.experiments, retrieveAnOrganization200Response.experiments) &&
        Objects.equals(this.features, retrieveAnOrganization200Response.features) &&
        Objects.equals(this.id, retrieveAnOrganization200Response.id) &&
        Objects.equals(this.isDefault, retrieveAnOrganization200Response.isDefault) &&
        Objects.equals(this.isEarlyAdopter, retrieveAnOrganization200Response.isEarlyAdopter) &&
        Objects.equals(this.name, retrieveAnOrganization200Response.name) &&
        Objects.equals(this.onboardingTasks, retrieveAnOrganization200Response.onboardingTasks) &&
        Objects.equals(this.openMembership, retrieveAnOrganization200Response.openMembership) &&
        Objects.equals(this.pendingAccessRequests, retrieveAnOrganization200Response.pendingAccessRequests) &&
        Objects.equals(this.projects, retrieveAnOrganization200Response.projects) &&
        Objects.equals(this.quota, retrieveAnOrganization200Response.quota) &&
        Objects.equals(this.require2FA, retrieveAnOrganization200Response.require2FA) &&
        Objects.equals(this.safeFields, retrieveAnOrganization200Response.safeFields) &&
        Objects.equals(this.scrapeJavaScript, retrieveAnOrganization200Response.scrapeJavaScript) &&
        Objects.equals(this.scrubIPAddresses, retrieveAnOrganization200Response.scrubIPAddresses) &&
        Objects.equals(this.sensitiveFields, retrieveAnOrganization200Response.sensitiveFields) &&
        Objects.equals(this.slug, retrieveAnOrganization200Response.slug) &&
        Objects.equals(this.status, retrieveAnOrganization200Response.status) &&
        Objects.equals(this.storeCrashReports, retrieveAnOrganization200Response.storeCrashReports) &&
        Objects.equals(this.teams, retrieveAnOrganization200Response.teams) &&
        Objects.equals(this.trustedRelays, retrieveAnOrganization200Response.trustedRelays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(access, allowSharedIssues, availableRoles, avatar, dataScrubber, dataScrubberDefaults, dateCreated, defaultRole, enhancedPrivacy, experiments, features, id, isDefault, isEarlyAdopter, name, onboardingTasks, openMembership, pendingAccessRequests, projects, quota, require2FA, safeFields, scrapeJavaScript, scrubIPAddresses, sensitiveFields, slug, status, storeCrashReports, teams, trustedRelays);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveAnOrganization200Response {\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    allowSharedIssues: ").append(toIndentedString(allowSharedIssues)).append("\n");
    sb.append("    availableRoles: ").append(toIndentedString(availableRoles)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    dataScrubber: ").append(toIndentedString(dataScrubber)).append("\n");
    sb.append("    dataScrubberDefaults: ").append(toIndentedString(dataScrubberDefaults)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    defaultRole: ").append(toIndentedString(defaultRole)).append("\n");
    sb.append("    enhancedPrivacy: ").append(toIndentedString(enhancedPrivacy)).append("\n");
    sb.append("    experiments: ").append(toIndentedString(experiments)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    isEarlyAdopter: ").append(toIndentedString(isEarlyAdopter)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    onboardingTasks: ").append(toIndentedString(onboardingTasks)).append("\n");
    sb.append("    openMembership: ").append(toIndentedString(openMembership)).append("\n");
    sb.append("    pendingAccessRequests: ").append(toIndentedString(pendingAccessRequests)).append("\n");
    sb.append("    projects: ").append(toIndentedString(projects)).append("\n");
    sb.append("    quota: ").append(toIndentedString(quota)).append("\n");
    sb.append("    require2FA: ").append(toIndentedString(require2FA)).append("\n");
    sb.append("    safeFields: ").append(toIndentedString(safeFields)).append("\n");
    sb.append("    scrapeJavaScript: ").append(toIndentedString(scrapeJavaScript)).append("\n");
    sb.append("    scrubIPAddresses: ").append(toIndentedString(scrubIPAddresses)).append("\n");
    sb.append("    sensitiveFields: ").append(toIndentedString(sensitiveFields)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    storeCrashReports: ").append(toIndentedString(storeCrashReports)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("    trustedRelays: ").append(toIndentedString(trustedRelays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access");
    openapiFields.add("allowSharedIssues");
    openapiFields.add("availableRoles");
    openapiFields.add("avatar");
    openapiFields.add("dataScrubber");
    openapiFields.add("dataScrubberDefaults");
    openapiFields.add("dateCreated");
    openapiFields.add("defaultRole");
    openapiFields.add("enhancedPrivacy");
    openapiFields.add("experiments");
    openapiFields.add("features");
    openapiFields.add("id");
    openapiFields.add("isDefault");
    openapiFields.add("isEarlyAdopter");
    openapiFields.add("name");
    openapiFields.add("onboardingTasks");
    openapiFields.add("openMembership");
    openapiFields.add("pendingAccessRequests");
    openapiFields.add("projects");
    openapiFields.add("quota");
    openapiFields.add("require2FA");
    openapiFields.add("safeFields");
    openapiFields.add("scrapeJavaScript");
    openapiFields.add("scrubIPAddresses");
    openapiFields.add("sensitiveFields");
    openapiFields.add("slug");
    openapiFields.add("status");
    openapiFields.add("storeCrashReports");
    openapiFields.add("teams");
    openapiFields.add("trustedRelays");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("access");
    openapiRequiredFields.add("allowSharedIssues");
    openapiRequiredFields.add("availableRoles");
    openapiRequiredFields.add("avatar");
    openapiRequiredFields.add("dataScrubber");
    openapiRequiredFields.add("dataScrubberDefaults");
    openapiRequiredFields.add("dateCreated");
    openapiRequiredFields.add("defaultRole");
    openapiRequiredFields.add("enhancedPrivacy");
    openapiRequiredFields.add("experiments");
    openapiRequiredFields.add("features");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("isDefault");
    openapiRequiredFields.add("isEarlyAdopter");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("onboardingTasks");
    openapiRequiredFields.add("openMembership");
    openapiRequiredFields.add("pendingAccessRequests");
    openapiRequiredFields.add("projects");
    openapiRequiredFields.add("quota");
    openapiRequiredFields.add("require2FA");
    openapiRequiredFields.add("safeFields");
    openapiRequiredFields.add("scrapeJavaScript");
    openapiRequiredFields.add("scrubIPAddresses");
    openapiRequiredFields.add("sensitiveFields");
    openapiRequiredFields.add("slug");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("storeCrashReports");
    openapiRequiredFields.add("teams");
    openapiRequiredFields.add("trustedRelays");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RetrieveAnOrganization200Response
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!RetrieveAnOrganization200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RetrieveAnOrganization200Response is not found in the empty JSON string", RetrieveAnOrganization200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!RetrieveAnOrganization200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RetrieveAnOrganization200Response` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RetrieveAnOrganization200Response.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the required json array is present
      if (jsonObj.get("access") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("access").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `access` to be an array in the JSON string but got `%s`", jsonObj.get("access").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("availableRoles").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `availableRoles` to be an array in the JSON string but got `%s`", jsonObj.get("availableRoles").toString()));
      }

      JsonArray jsonArrayavailableRoles = jsonObj.getAsJsonArray("availableRoles");
      // validate the required field `availableRoles` (array)
      for (int i = 0; i < jsonArrayavailableRoles.size(); i++) {
        RetrieveAnOrganization200ResponseAvailableRolesInner.validateJsonObject(jsonArrayavailableRoles.get(i).getAsJsonObject());
      };
      // validate the required field `avatar`
      RetrieveATeam200ResponseAvatar.validateJsonObject(jsonObj.getAsJsonObject("avatar"));
      if (!jsonObj.get("defaultRole").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultRole` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultRole").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("features") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("features").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `features` to be an array in the JSON string but got `%s`", jsonObj.get("features").toString()));
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("onboardingTasks") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("onboardingTasks").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `onboardingTasks` to be an array in the JSON string but got `%s`", jsonObj.get("onboardingTasks").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("projects").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `projects` to be an array in the JSON string but got `%s`", jsonObj.get("projects").toString()));
      }

      JsonArray jsonArrayprojects = jsonObj.getAsJsonArray("projects");
      // validate the required field `projects` (array)
      for (int i = 0; i < jsonArrayprojects.size(); i++) {
        RetrieveAnOrganization200ResponseProjectsInner.validateJsonObject(jsonArrayprojects.get(i).getAsJsonObject());
      };
      // ensure the required json array is present
      if (jsonObj.get("safeFields") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("safeFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `safeFields` to be an array in the JSON string but got `%s`", jsonObj.get("safeFields").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("sensitiveFields") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("sensitiveFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sensitiveFields` to be an array in the JSON string but got `%s`", jsonObj.get("sensitiveFields").toString()));
      }
      if (!jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      // validate the required field `status`
      RetrieveAnOrganization200ResponseAvailableRolesInner.validateJsonObject(jsonObj.getAsJsonObject("status"));
      // ensure the json data is an array
      if (!jsonObj.get("teams").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `teams` to be an array in the JSON string but got `%s`", jsonObj.get("teams").toString()));
      }

      JsonArray jsonArrayteams = jsonObj.getAsJsonArray("teams");
      // validate the required field `teams` (array)
      for (int i = 0; i < jsonArrayteams.size(); i++) {
        UpdateATeam200Response.validateJsonObject(jsonArrayteams.get(i).getAsJsonObject());
      };
      // ensure the required json array is present
      if (jsonObj.get("trustedRelays") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("trustedRelays").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `trustedRelays` to be an array in the JSON string but got `%s`", jsonObj.get("trustedRelays").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RetrieveAnOrganization200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RetrieveAnOrganization200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RetrieveAnOrganization200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RetrieveAnOrganization200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<RetrieveAnOrganization200Response>() {
           @Override
           public void write(JsonWriter out, RetrieveAnOrganization200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RetrieveAnOrganization200Response read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RetrieveAnOrganization200Response given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RetrieveAnOrganization200Response
  * @throws IOException if the JSON string is invalid with respect to RetrieveAnOrganization200Response
  */
  public static RetrieveAnOrganization200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RetrieveAnOrganization200Response.class);
  }

 /**
  * Convert an instance of RetrieveAnOrganization200Response to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

