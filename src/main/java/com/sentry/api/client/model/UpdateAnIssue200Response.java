/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sentry.api.client.model.ListAProjectSIssues200ResponseInnerMetadata;
import com.sentry.api.client.model.ListAProjectSIssues200ResponseInnerProject;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.sentry.api.client.JSON;


/**
 * UpdateAnIssue200Response
 */
@JsonPropertyOrder({
  UpdateAnIssue200Response.JSON_PROPERTY_ANNOTATIONS,
  UpdateAnIssue200Response.JSON_PROPERTY_ASSIGNED_TO,
  UpdateAnIssue200Response.JSON_PROPERTY_COUNT,
  UpdateAnIssue200Response.JSON_PROPERTY_CULPRIT,
  UpdateAnIssue200Response.JSON_PROPERTY_FIRST_SEEN,
  UpdateAnIssue200Response.JSON_PROPERTY_HAS_SEEN,
  UpdateAnIssue200Response.JSON_PROPERTY_ID,
  UpdateAnIssue200Response.JSON_PROPERTY_IS_BOOKMARKED,
  UpdateAnIssue200Response.JSON_PROPERTY_IS_PUBLIC,
  UpdateAnIssue200Response.JSON_PROPERTY_IS_SUBSCRIBED,
  UpdateAnIssue200Response.JSON_PROPERTY_LAST_SEEN,
  UpdateAnIssue200Response.JSON_PROPERTY_LEVEL,
  UpdateAnIssue200Response.JSON_PROPERTY_LOGGER,
  UpdateAnIssue200Response.JSON_PROPERTY_METADATA,
  UpdateAnIssue200Response.JSON_PROPERTY_NUM_COMMENTS,
  UpdateAnIssue200Response.JSON_PROPERTY_PERMALINK,
  UpdateAnIssue200Response.JSON_PROPERTY_PROJECT,
  UpdateAnIssue200Response.JSON_PROPERTY_SHARE_ID,
  UpdateAnIssue200Response.JSON_PROPERTY_SHORT_ID,
  UpdateAnIssue200Response.JSON_PROPERTY_STATUS,
  UpdateAnIssue200Response.JSON_PROPERTY_STATUS_DETAILS,
  UpdateAnIssue200Response.JSON_PROPERTY_SUBSCRIPTION_DETAILS,
  UpdateAnIssue200Response.JSON_PROPERTY_TITLE,
  UpdateAnIssue200Response.JSON_PROPERTY_TYPE,
  UpdateAnIssue200Response.JSON_PROPERTY_USER_COUNT
})
@JsonTypeName("Update_an_Issue_200_response")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-16T15:46:47.521074Z[Etc/UTC]")
public class UpdateAnIssue200Response {
  public static final String JSON_PROPERTY_ANNOTATIONS = "annotations";
  private List<String> annotations = new ArrayList<>();

  public static final String JSON_PROPERTY_ASSIGNED_TO = "assignedTo";
  private Object assignedTo;

  public static final String JSON_PROPERTY_COUNT = "count";
  private String count;

  public static final String JSON_PROPERTY_CULPRIT = "culprit";
  private String culprit;

  public static final String JSON_PROPERTY_FIRST_SEEN = "firstSeen";
  private String firstSeen;

  public static final String JSON_PROPERTY_HAS_SEEN = "hasSeen";
  private Boolean hasSeen;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_IS_BOOKMARKED = "isBookmarked";
  private Boolean isBookmarked;

  public static final String JSON_PROPERTY_IS_PUBLIC = "isPublic";
  private Boolean isPublic;

  public static final String JSON_PROPERTY_IS_SUBSCRIBED = "isSubscribed";
  private Boolean isSubscribed;

  public static final String JSON_PROPERTY_LAST_SEEN = "lastSeen";
  private String lastSeen;

  public static final String JSON_PROPERTY_LEVEL = "level";
  private String level;

  public static final String JSON_PROPERTY_LOGGER = "logger";
  private String logger;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ListAProjectSIssues200ResponseInnerMetadata metadata;

  public static final String JSON_PROPERTY_NUM_COMMENTS = "numComments";
  private Integer numComments;

  public static final String JSON_PROPERTY_PERMALINK = "permalink";
  private String permalink;

  public static final String JSON_PROPERTY_PROJECT = "project";
  private ListAProjectSIssues200ResponseInnerProject project;

  public static final String JSON_PROPERTY_SHARE_ID = "shareId";
  private String shareId;

  public static final String JSON_PROPERTY_SHORT_ID = "shortId";
  private String shortId;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    RESOLVED("resolved"),
    
    UNRESOLVED("unresolved"),
    
    IGNORED("ignored");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_STATUS_DETAILS = "statusDetails";
  private Object statusDetails;

  public static final String JSON_PROPERTY_SUBSCRIPTION_DETAILS = "subscriptionDetails";
  private Object subscriptionDetails;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_USER_COUNT = "userCount";
  private Integer userCount;

  public UpdateAnIssue200Response() { 
  }

  public UpdateAnIssue200Response annotations(List<String> annotations) {
    this.annotations = annotations;
    return this;
  }

  public UpdateAnIssue200Response addAnnotationsItem(String annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new ArrayList<>();
    }
    this.annotations.add(annotationsItem);
    return this;
  }

   /**
   * Get annotations
   * @return annotations
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ANNOTATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getAnnotations() {
    return annotations;
  }


  @JsonProperty(JSON_PROPERTY_ANNOTATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAnnotations(List<String> annotations) {
    this.annotations = annotations;
  }


  public UpdateAnIssue200Response assignedTo(Object assignedTo) {
    this.assignedTo = assignedTo;
    return this;
  }

   /**
   * Get assignedTo
   * @return assignedTo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSIGNED_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getAssignedTo() {
    return assignedTo;
  }


  @JsonProperty(JSON_PROPERTY_ASSIGNED_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAssignedTo(Object assignedTo) {
    this.assignedTo = assignedTo;
  }


  public UpdateAnIssue200Response count(String count) {
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCount(String count) {
    this.count = count;
  }


  public UpdateAnIssue200Response culprit(String culprit) {
    this.culprit = culprit;
    return this;
  }

   /**
   * Get culprit
   * @return culprit
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CULPRIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCulprit() {
    return culprit;
  }


  @JsonProperty(JSON_PROPERTY_CULPRIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCulprit(String culprit) {
    this.culprit = culprit;
  }


  public UpdateAnIssue200Response firstSeen(String firstSeen) {
    this.firstSeen = firstSeen;
    return this;
  }

   /**
   * Get firstSeen
   * @return firstSeen
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRST_SEEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstSeen() {
    return firstSeen;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_SEEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstSeen(String firstSeen) {
    this.firstSeen = firstSeen;
  }


  public UpdateAnIssue200Response hasSeen(Boolean hasSeen) {
    this.hasSeen = hasSeen;
    return this;
  }

   /**
   * Get hasSeen
   * @return hasSeen
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HAS_SEEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getHasSeen() {
    return hasSeen;
  }


  @JsonProperty(JSON_PROPERTY_HAS_SEEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHasSeen(Boolean hasSeen) {
    this.hasSeen = hasSeen;
  }


  public UpdateAnIssue200Response id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public UpdateAnIssue200Response isBookmarked(Boolean isBookmarked) {
    this.isBookmarked = isBookmarked;
    return this;
  }

   /**
   * Get isBookmarked
   * @return isBookmarked
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_BOOKMARKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsBookmarked() {
    return isBookmarked;
  }


  @JsonProperty(JSON_PROPERTY_IS_BOOKMARKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsBookmarked(Boolean isBookmarked) {
    this.isBookmarked = isBookmarked;
  }


  public UpdateAnIssue200Response isPublic(Boolean isPublic) {
    this.isPublic = isPublic;
    return this;
  }

   /**
   * Get isPublic
   * @return isPublic
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_PUBLIC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsPublic() {
    return isPublic;
  }


  @JsonProperty(JSON_PROPERTY_IS_PUBLIC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }


  public UpdateAnIssue200Response isSubscribed(Boolean isSubscribed) {
    this.isSubscribed = isSubscribed;
    return this;
  }

   /**
   * Get isSubscribed
   * @return isSubscribed
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_SUBSCRIBED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsSubscribed() {
    return isSubscribed;
  }


  @JsonProperty(JSON_PROPERTY_IS_SUBSCRIBED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsSubscribed(Boolean isSubscribed) {
    this.isSubscribed = isSubscribed;
  }


  public UpdateAnIssue200Response lastSeen(String lastSeen) {
    this.lastSeen = lastSeen;
    return this;
  }

   /**
   * Get lastSeen
   * @return lastSeen
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_SEEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastSeen() {
    return lastSeen;
  }


  @JsonProperty(JSON_PROPERTY_LAST_SEEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastSeen(String lastSeen) {
    this.lastSeen = lastSeen;
  }


  public UpdateAnIssue200Response level(String level) {
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLevel() {
    return level;
  }


  @JsonProperty(JSON_PROPERTY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLevel(String level) {
    this.level = level;
  }


  public UpdateAnIssue200Response logger(String logger) {
    this.logger = logger;
    return this;
  }

   /**
   * Get logger
   * @return logger
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGGER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLogger() {
    return logger;
  }


  @JsonProperty(JSON_PROPERTY_LOGGER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLogger(String logger) {
    this.logger = logger;
  }


  public UpdateAnIssue200Response metadata(ListAProjectSIssues200ResponseInnerMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ListAProjectSIssues200ResponseInnerMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetadata(ListAProjectSIssues200ResponseInnerMetadata metadata) {
    this.metadata = metadata;
  }


  public UpdateAnIssue200Response numComments(Integer numComments) {
    this.numComments = numComments;
    return this;
  }

   /**
   * Get numComments
   * @return numComments
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUM_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getNumComments() {
    return numComments;
  }


  @JsonProperty(JSON_PROPERTY_NUM_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNumComments(Integer numComments) {
    this.numComments = numComments;
  }


  public UpdateAnIssue200Response permalink(String permalink) {
    this.permalink = permalink;
    return this;
  }

   /**
   * Get permalink
   * @return permalink
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PERMALINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPermalink() {
    return permalink;
  }


  @JsonProperty(JSON_PROPERTY_PERMALINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPermalink(String permalink) {
    this.permalink = permalink;
  }


  public UpdateAnIssue200Response project(ListAProjectSIssues200ResponseInnerProject project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ListAProjectSIssues200ResponseInnerProject getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProject(ListAProjectSIssues200ResponseInnerProject project) {
    this.project = project;
  }


  public UpdateAnIssue200Response shareId(String shareId) {
    this.shareId = shareId;
    return this;
  }

   /**
   * Get shareId
   * @return shareId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getShareId() {
    return shareId;
  }


  @JsonProperty(JSON_PROPERTY_SHARE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShareId(String shareId) {
    this.shareId = shareId;
  }


  public UpdateAnIssue200Response shortId(String shortId) {
    this.shortId = shortId;
    return this;
  }

   /**
   * Get shortId
   * @return shortId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHORT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getShortId() {
    return shortId;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShortId(String shortId) {
    this.shortId = shortId;
  }


  public UpdateAnIssue200Response status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public UpdateAnIssue200Response statusDetails(Object statusDetails) {
    this.statusDetails = statusDetails;
    return this;
  }

   /**
   * Get statusDetails
   * @return statusDetails
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getStatusDetails() {
    return statusDetails;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatusDetails(Object statusDetails) {
    this.statusDetails = statusDetails;
  }


  public UpdateAnIssue200Response subscriptionDetails(Object subscriptionDetails) {
    this.subscriptionDetails = subscriptionDetails;
    return this;
  }

   /**
   * Get subscriptionDetails
   * @return subscriptionDetails
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getSubscriptionDetails() {
    return subscriptionDetails;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubscriptionDetails(Object subscriptionDetails) {
    this.subscriptionDetails = subscriptionDetails;
  }


  public UpdateAnIssue200Response title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public UpdateAnIssue200Response type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public UpdateAnIssue200Response userCount(Integer userCount) {
    this.userCount = userCount;
    return this;
  }

   /**
   * Get userCount
   * @return userCount
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUserCount() {
    return userCount;
  }


  @JsonProperty(JSON_PROPERTY_USER_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserCount(Integer userCount) {
    this.userCount = userCount;
  }


  /**
   * Return true if this Update_an_Issue_200_response object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAnIssue200Response updateAnIssue200Response = (UpdateAnIssue200Response) o;
    return Objects.equals(this.annotations, updateAnIssue200Response.annotations) &&
        Objects.equals(this.assignedTo, updateAnIssue200Response.assignedTo) &&
        Objects.equals(this.count, updateAnIssue200Response.count) &&
        Objects.equals(this.culprit, updateAnIssue200Response.culprit) &&
        Objects.equals(this.firstSeen, updateAnIssue200Response.firstSeen) &&
        Objects.equals(this.hasSeen, updateAnIssue200Response.hasSeen) &&
        Objects.equals(this.id, updateAnIssue200Response.id) &&
        Objects.equals(this.isBookmarked, updateAnIssue200Response.isBookmarked) &&
        Objects.equals(this.isPublic, updateAnIssue200Response.isPublic) &&
        Objects.equals(this.isSubscribed, updateAnIssue200Response.isSubscribed) &&
        Objects.equals(this.lastSeen, updateAnIssue200Response.lastSeen) &&
        Objects.equals(this.level, updateAnIssue200Response.level) &&
        Objects.equals(this.logger, updateAnIssue200Response.logger) &&
        Objects.equals(this.metadata, updateAnIssue200Response.metadata) &&
        Objects.equals(this.numComments, updateAnIssue200Response.numComments) &&
        Objects.equals(this.permalink, updateAnIssue200Response.permalink) &&
        Objects.equals(this.project, updateAnIssue200Response.project) &&
        Objects.equals(this.shareId, updateAnIssue200Response.shareId) &&
        Objects.equals(this.shortId, updateAnIssue200Response.shortId) &&
        Objects.equals(this.status, updateAnIssue200Response.status) &&
        Objects.equals(this.statusDetails, updateAnIssue200Response.statusDetails) &&
        Objects.equals(this.subscriptionDetails, updateAnIssue200Response.subscriptionDetails) &&
        Objects.equals(this.title, updateAnIssue200Response.title) &&
        Objects.equals(this.type, updateAnIssue200Response.type) &&
        Objects.equals(this.userCount, updateAnIssue200Response.userCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotations, assignedTo, count, culprit, firstSeen, hasSeen, id, isBookmarked, isPublic, isSubscribed, lastSeen, level, logger, metadata, numComments, permalink, project, shareId, shortId, status, statusDetails, subscriptionDetails, title, type, userCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAnIssue200Response {\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    assignedTo: ").append(toIndentedString(assignedTo)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    culprit: ").append(toIndentedString(culprit)).append("\n");
    sb.append("    firstSeen: ").append(toIndentedString(firstSeen)).append("\n");
    sb.append("    hasSeen: ").append(toIndentedString(hasSeen)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isBookmarked: ").append(toIndentedString(isBookmarked)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    isSubscribed: ").append(toIndentedString(isSubscribed)).append("\n");
    sb.append("    lastSeen: ").append(toIndentedString(lastSeen)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    logger: ").append(toIndentedString(logger)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    numComments: ").append(toIndentedString(numComments)).append("\n");
    sb.append("    permalink: ").append(toIndentedString(permalink)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    shareId: ").append(toIndentedString(shareId)).append("\n");
    sb.append("    shortId: ").append(toIndentedString(shortId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDetails: ").append(toIndentedString(statusDetails)).append("\n");
    sb.append("    subscriptionDetails: ").append(toIndentedString(subscriptionDetails)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    userCount: ").append(toIndentedString(userCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

