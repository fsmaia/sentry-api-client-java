/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sentry.api.client.model.ResolveAnEventID200ResponseEventEntriesInnerAnyOf1DataEnv;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.sentry.api.client.JSON;


/**
 * ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data
 */
@JsonPropertyOrder({
  ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.JSON_PROPERTY_FRAGMENT,
  ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.JSON_PROPERTY_COOKIES,
  ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.JSON_PROPERTY_INFERRED_CONTENT_TYPE,
  ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.JSON_PROPERTY_ENV,
  ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.JSON_PROPERTY_HEADERS,
  ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.JSON_PROPERTY_URL,
  ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.JSON_PROPERTY_QUERY,
  ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.JSON_PROPERTY_DATA,
  ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.JSON_PROPERTY_METHOD
})
@JsonTypeName("Resolve_an_Event_ID_200_response_event_entries_inner_anyOf_1_data")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-16T14:43:30.075015Z[Etc/UTC]")
public class ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data {
  public static final String JSON_PROPERTY_FRAGMENT = "fragment";
  private String fragment;

  public static final String JSON_PROPERTY_COOKIES = "cookies";
  private List<List<String>> cookies;

  public static final String JSON_PROPERTY_INFERRED_CONTENT_TYPE = "inferredContentType";
  private String inferredContentType;

  public static final String JSON_PROPERTY_ENV = "env";
  private ResolveAnEventID200ResponseEventEntriesInnerAnyOf1DataEnv env;

  public static final String JSON_PROPERTY_HEADERS = "headers";
  private List<List<String>> headers = new ArrayList<>();

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_QUERY = "query";
  private List<List<String>> query = new ArrayList<>();

  public static final String JSON_PROPERTY_DATA = "data";
  private Object data;

  public static final String JSON_PROPERTY_METHOD = "method";
  private String method;

  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data() { 
  }

  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data fragment(String fragment) {
    this.fragment = fragment;
    return this;
  }

   /**
   * Get fragment
   * @return fragment
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FRAGMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFragment() {
    return fragment;
  }


  @JsonProperty(JSON_PROPERTY_FRAGMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFragment(String fragment) {
    this.fragment = fragment;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data cookies(List<List<String>> cookies) {
    this.cookies = cookies;
    return this;
  }

  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data addCookiesItem(List<String> cookiesItem) {
    if (this.cookies == null) {
      this.cookies = new ArrayList<>();
    }
    this.cookies.add(cookiesItem);
    return this;
  }

   /**
   * Get cookies
   * @return cookies
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_COOKIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<List<String>> getCookies() {
    return cookies;
  }


  @JsonProperty(JSON_PROPERTY_COOKIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCookies(List<List<String>> cookies) {
    this.cookies = cookies;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data inferredContentType(String inferredContentType) {
    this.inferredContentType = inferredContentType;
    return this;
  }

   /**
   * Get inferredContentType
   * @return inferredContentType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INFERRED_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getInferredContentType() {
    return inferredContentType;
  }


  @JsonProperty(JSON_PROPERTY_INFERRED_CONTENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInferredContentType(String inferredContentType) {
    this.inferredContentType = inferredContentType;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data env(ResolveAnEventID200ResponseEventEntriesInnerAnyOf1DataEnv env) {
    this.env = env;
    return this;
  }

   /**
   * Get env
   * @return env
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENV)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1DataEnv getEnv() {
    return env;
  }


  @JsonProperty(JSON_PROPERTY_ENV)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnv(ResolveAnEventID200ResponseEventEntriesInnerAnyOf1DataEnv env) {
    this.env = env;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data headers(List<List<String>> headers) {
    this.headers = headers;
    return this;
  }

  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data addHeadersItem(List<String> headersItem) {
    if (this.headers == null) {
      this.headers = new ArrayList<>();
    }
    this.headers.add(headersItem);
    return this;
  }

   /**
   * Get headers
   * @return headers
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HEADERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<List<String>> getHeaders() {
    return headers;
  }


  @JsonProperty(JSON_PROPERTY_HEADERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHeaders(List<List<String>> headers) {
    this.headers = headers;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(String url) {
    this.url = url;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data query(List<List<String>> query) {
    this.query = query;
    return this;
  }

  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data addQueryItem(List<String> queryItem) {
    if (this.query == null) {
      this.query = new ArrayList<>();
    }
    this.query.add(queryItem);
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_QUERY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<List<String>> getQuery() {
    return query;
  }


  @JsonProperty(JSON_PROPERTY_QUERY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setQuery(List<List<String>> query) {
    this.query = query;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data data(Object data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setData(Object data) {
    this.data = data;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data method(String method) {
    this.method = method;
    return this;
  }

   /**
   * Get method
   * @return method
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMethod(String method) {
    this.method = method;
  }


  /**
   * Return true if this Resolve_an_Event_ID_200_response_event_entries_inner_anyOf_1_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data resolveAnEventID200ResponseEventEntriesInnerAnyOf1Data = (ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data) o;
    return Objects.equals(this.fragment, resolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.fragment) &&
        Objects.equals(this.cookies, resolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.cookies) &&
        Objects.equals(this.inferredContentType, resolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.inferredContentType) &&
        Objects.equals(this.env, resolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.env) &&
        Objects.equals(this.headers, resolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.headers) &&
        Objects.equals(this.url, resolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.url) &&
        Objects.equals(this.query, resolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.query) &&
        Objects.equals(this.data, resolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.data) &&
        Objects.equals(this.method, resolveAnEventID200ResponseEventEntriesInnerAnyOf1Data.method);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fragment, cookies, inferredContentType, env, headers, url, query, data, method);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResolveAnEventID200ResponseEventEntriesInnerAnyOf1Data {\n");
    sb.append("    fragment: ").append(toIndentedString(fragment)).append("\n");
    sb.append("    cookies: ").append(toIndentedString(cookies)).append("\n");
    sb.append("    inferredContentType: ").append(toIndentedString(inferredContentType)).append("\n");
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

