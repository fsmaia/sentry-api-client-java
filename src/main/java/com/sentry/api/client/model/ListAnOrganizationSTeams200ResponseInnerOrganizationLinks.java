/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.sentry.api.client.JSON;


/**
 * ListAnOrganizationSTeams200ResponseInnerOrganizationLinks
 */
@JsonPropertyOrder({
  ListAnOrganizationSTeams200ResponseInnerOrganizationLinks.JSON_PROPERTY_ORGANIZATION_URL,
  ListAnOrganizationSTeams200ResponseInnerOrganizationLinks.JSON_PROPERTY_REGION_URL
})
@JsonTypeName("List_an_Organization_s_Teams_200_response_inner_organization_links")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-16T14:23:11.909078Z[Etc/UTC]")
public class ListAnOrganizationSTeams200ResponseInnerOrganizationLinks {
  public static final String JSON_PROPERTY_ORGANIZATION_URL = "organizationUrl";
  private String organizationUrl;

  public static final String JSON_PROPERTY_REGION_URL = "regionUrl";
  private String regionUrl;

  public ListAnOrganizationSTeams200ResponseInnerOrganizationLinks() { 
  }

  public ListAnOrganizationSTeams200ResponseInnerOrganizationLinks organizationUrl(String organizationUrl) {
    this.organizationUrl = organizationUrl;
    return this;
  }

   /**
   * Get organizationUrl
   * @return organizationUrl
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ORGANIZATION_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOrganizationUrl() {
    return organizationUrl;
  }


  @JsonProperty(JSON_PROPERTY_ORGANIZATION_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrganizationUrl(String organizationUrl) {
    this.organizationUrl = organizationUrl;
  }


  public ListAnOrganizationSTeams200ResponseInnerOrganizationLinks regionUrl(String regionUrl) {
    this.regionUrl = regionUrl;
    return this;
  }

   /**
   * Get regionUrl
   * @return regionUrl
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REGION_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRegionUrl() {
    return regionUrl;
  }


  @JsonProperty(JSON_PROPERTY_REGION_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegionUrl(String regionUrl) {
    this.regionUrl = regionUrl;
  }


  /**
   * Return true if this List_an_Organization_s_Teams_200_response_inner_organization_links object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListAnOrganizationSTeams200ResponseInnerOrganizationLinks listAnOrganizationSTeams200ResponseInnerOrganizationLinks = (ListAnOrganizationSTeams200ResponseInnerOrganizationLinks) o;
    return Objects.equals(this.organizationUrl, listAnOrganizationSTeams200ResponseInnerOrganizationLinks.organizationUrl) &&
        Objects.equals(this.regionUrl, listAnOrganizationSTeams200ResponseInnerOrganizationLinks.regionUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(organizationUrl, regionUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListAnOrganizationSTeams200ResponseInnerOrganizationLinks {\n");
    sb.append("    organizationUrl: ").append(toIndentedString(organizationUrl)).append("\n");
    sb.append("    regionUrl: ").append(toIndentedString(regionUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

