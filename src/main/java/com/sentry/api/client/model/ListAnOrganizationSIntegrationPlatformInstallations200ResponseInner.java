/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sentry.api.client.model.ListAnOrganizationSIntegrationPlatformInstallations200ResponseInnerApp;
import com.sentry.api.client.model.ListAnOrganizationSIntegrationPlatformInstallations200ResponseInnerOrganization;
import java.io.IOException;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.sentry.api.client.JSON;

/**
 * ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-15T10:13:02.301928Z[Etc/UTC]")
public class ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_APP = "app";
  @SerializedName(SERIALIZED_NAME_APP)
  private ListAnOrganizationSIntegrationPlatformInstallations200ResponseInnerApp app;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private ListAnOrganizationSIntegrationPlatformInstallations200ResponseInnerOrganization organization;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner() {
  }

  public ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner app(ListAnOrganizationSIntegrationPlatformInstallations200ResponseInnerApp app) {
    
    this.app = app;
    return this;
  }

   /**
   * Get app
   * @return app
  **/
  @jakarta.annotation.Nonnull
  public ListAnOrganizationSIntegrationPlatformInstallations200ResponseInnerApp getApp() {
    return app;
  }


  public void setApp(ListAnOrganizationSIntegrationPlatformInstallations200ResponseInnerApp app) {
    this.app = app;
  }


  public ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner organization(ListAnOrganizationSIntegrationPlatformInstallations200ResponseInnerOrganization organization) {
    
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @jakarta.annotation.Nonnull
  public ListAnOrganizationSIntegrationPlatformInstallations200ResponseInnerOrganization getOrganization() {
    return organization;
  }


  public void setOrganization(ListAnOrganizationSIntegrationPlatformInstallations200ResponseInnerOrganization organization) {
    this.organization = organization;
  }


  public ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner uuid(String uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @jakarta.annotation.Nonnull
  public String getUuid() {
    return uuid;
  }


  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  public ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nonnull
  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner listAnOrganizationSIntegrationPlatformInstallations200ResponseInner = (ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner) o;
    return Objects.equals(this.app, listAnOrganizationSIntegrationPlatformInstallations200ResponseInner.app) &&
        Objects.equals(this.organization, listAnOrganizationSIntegrationPlatformInstallations200ResponseInner.organization) &&
        Objects.equals(this.uuid, listAnOrganizationSIntegrationPlatformInstallations200ResponseInner.uuid) &&
        Objects.equals(this.status, listAnOrganizationSIntegrationPlatformInstallations200ResponseInner.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(app, organization, uuid, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner {\n");
    sb.append("    app: ").append(toIndentedString(app)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app");
    openapiFields.add("organization");
    openapiFields.add("uuid");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("app");
    openapiRequiredFields.add("organization");
    openapiRequiredFields.add("uuid");
    openapiRequiredFields.add("status");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner is not found in the empty JSON string", ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the required field `app`
      ListAnOrganizationSIntegrationPlatformInstallations200ResponseInnerApp.validateJsonObject(jsonObj.getAsJsonObject("app"));
      // validate the required field `organization`
      ListAnOrganizationSIntegrationPlatformInstallations200ResponseInnerOrganization.validateJsonObject(jsonObj.getAsJsonObject("organization"));
      if (!jsonObj.get("uuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uuid").toString()));
      }
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner>() {
           @Override
           public void write(JsonWriter out, ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner
  * @throws IOException if the JSON string is invalid with respect to ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner
  */
  public static ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner.class);
  }

 /**
  * Convert an instance of ListAnOrganizationSIntegrationPlatformInstallations200ResponseInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

