/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sentry.api.client.model.ListAProjectSIssues200ResponseInnerMetadata;
import com.sentry.api.client.model.ListAProjectSIssues200ResponseInnerProject;
import com.sentry.api.client.model.RetrieveAnIssue200ResponseActivityInner;
import com.sentry.api.client.model.RetrieveAnIssue200ResponseFirstRelease;
import com.sentry.api.client.model.RetrieveAnIssue200ResponseStats;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.sentry.api.client.JSON;


/**
 * RetrieveAnIssue200Response
 */
@JsonPropertyOrder({
  RetrieveAnIssue200Response.JSON_PROPERTY_ACTIVITY,
  RetrieveAnIssue200Response.JSON_PROPERTY_ANNOTATIONS,
  RetrieveAnIssue200Response.JSON_PROPERTY_ASSIGNED_TO,
  RetrieveAnIssue200Response.JSON_PROPERTY_COUNT,
  RetrieveAnIssue200Response.JSON_PROPERTY_CULPRIT,
  RetrieveAnIssue200Response.JSON_PROPERTY_FIRST_RELEASE,
  RetrieveAnIssue200Response.JSON_PROPERTY_FIRST_SEEN,
  RetrieveAnIssue200Response.JSON_PROPERTY_HAS_SEEN,
  RetrieveAnIssue200Response.JSON_PROPERTY_ID,
  RetrieveAnIssue200Response.JSON_PROPERTY_IS_BOOKMARKED,
  RetrieveAnIssue200Response.JSON_PROPERTY_IS_PUBLIC,
  RetrieveAnIssue200Response.JSON_PROPERTY_IS_SUBSCRIBED,
  RetrieveAnIssue200Response.JSON_PROPERTY_LAST_RELEASE,
  RetrieveAnIssue200Response.JSON_PROPERTY_LAST_SEEN,
  RetrieveAnIssue200Response.JSON_PROPERTY_LEVEL,
  RetrieveAnIssue200Response.JSON_PROPERTY_LOGGER,
  RetrieveAnIssue200Response.JSON_PROPERTY_METADATA,
  RetrieveAnIssue200Response.JSON_PROPERTY_NUM_COMMENTS,
  RetrieveAnIssue200Response.JSON_PROPERTY_PARTICIPANTS,
  RetrieveAnIssue200Response.JSON_PROPERTY_PERMALINK,
  RetrieveAnIssue200Response.JSON_PROPERTY_PLUGIN_ACTIONS,
  RetrieveAnIssue200Response.JSON_PROPERTY_PLUGIN_CONTEXTS,
  RetrieveAnIssue200Response.JSON_PROPERTY_PLUGIN_ISSUES,
  RetrieveAnIssue200Response.JSON_PROPERTY_PROJECT,
  RetrieveAnIssue200Response.JSON_PROPERTY_SEEN_BY,
  RetrieveAnIssue200Response.JSON_PROPERTY_SHARE_ID,
  RetrieveAnIssue200Response.JSON_PROPERTY_SHORT_ID,
  RetrieveAnIssue200Response.JSON_PROPERTY_STATS,
  RetrieveAnIssue200Response.JSON_PROPERTY_STATUS,
  RetrieveAnIssue200Response.JSON_PROPERTY_STATUS_DETAILS,
  RetrieveAnIssue200Response.JSON_PROPERTY_SUBSCRIPTION_DETAILS,
  RetrieveAnIssue200Response.JSON_PROPERTY_TAGS,
  RetrieveAnIssue200Response.JSON_PROPERTY_TITLE,
  RetrieveAnIssue200Response.JSON_PROPERTY_TYPE,
  RetrieveAnIssue200Response.JSON_PROPERTY_USER_COUNT,
  RetrieveAnIssue200Response.JSON_PROPERTY_USER_REPORT_COUNT
})
@JsonTypeName("Retrieve_an_Issue_200_response")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-16T15:22:58.941842Z[Etc/UTC]")
public class RetrieveAnIssue200Response {
  public static final String JSON_PROPERTY_ACTIVITY = "activity";
  private List<RetrieveAnIssue200ResponseActivityInner> activity = new ArrayList<>();

  public static final String JSON_PROPERTY_ANNOTATIONS = "annotations";
  private List<String> annotations = new ArrayList<>();

  public static final String JSON_PROPERTY_ASSIGNED_TO = "assignedTo";
  private Object assignedTo;

  public static final String JSON_PROPERTY_COUNT = "count";
  private String count;

  public static final String JSON_PROPERTY_CULPRIT = "culprit";
  private String culprit;

  public static final String JSON_PROPERTY_FIRST_RELEASE = "firstRelease";
  private RetrieveAnIssue200ResponseFirstRelease firstRelease;

  public static final String JSON_PROPERTY_FIRST_SEEN = "firstSeen";
  private String firstSeen;

  public static final String JSON_PROPERTY_HAS_SEEN = "hasSeen";
  private Boolean hasSeen;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_IS_BOOKMARKED = "isBookmarked";
  private Boolean isBookmarked;

  public static final String JSON_PROPERTY_IS_PUBLIC = "isPublic";
  private Boolean isPublic;

  public static final String JSON_PROPERTY_IS_SUBSCRIBED = "isSubscribed";
  private Boolean isSubscribed;

  public static final String JSON_PROPERTY_LAST_RELEASE = "lastRelease";
  private Object lastRelease;

  public static final String JSON_PROPERTY_LAST_SEEN = "lastSeen";
  private String lastSeen;

  public static final String JSON_PROPERTY_LEVEL = "level";
  private String level;

  public static final String JSON_PROPERTY_LOGGER = "logger";
  private String logger;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private ListAProjectSIssues200ResponseInnerMetadata metadata;

  public static final String JSON_PROPERTY_NUM_COMMENTS = "numComments";
  private Integer numComments;

  public static final String JSON_PROPERTY_PARTICIPANTS = "participants";
  private List<Object> participants = new ArrayList<>();

  public static final String JSON_PROPERTY_PERMALINK = "permalink";
  private String permalink;

  public static final String JSON_PROPERTY_PLUGIN_ACTIONS = "pluginActions";
  private List<List<String>> pluginActions = new ArrayList<>();

  public static final String JSON_PROPERTY_PLUGIN_CONTEXTS = "pluginContexts";
  private List<String> pluginContexts = new ArrayList<>();

  public static final String JSON_PROPERTY_PLUGIN_ISSUES = "pluginIssues";
  private List<Object> pluginIssues = new ArrayList<>();

  public static final String JSON_PROPERTY_PROJECT = "project";
  private ListAProjectSIssues200ResponseInnerProject project;

  public static final String JSON_PROPERTY_SEEN_BY = "seenBy";
  private List<Object> seenBy = new ArrayList<>();

  public static final String JSON_PROPERTY_SHARE_ID = "shareId";
  private String shareId;

  public static final String JSON_PROPERTY_SHORT_ID = "shortId";
  private String shortId;

  public static final String JSON_PROPERTY_STATS = "stats";
  private RetrieveAnIssue200ResponseStats stats;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    RESOLVED("resolved"),
    
    UNRESOLVED("unresolved"),
    
    IGNORED("ignored");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_STATUS_DETAILS = "statusDetails";
  private Object statusDetails;

  public static final String JSON_PROPERTY_SUBSCRIPTION_DETAILS = "subscriptionDetails";
  private Object subscriptionDetails;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<Object> tags = new ArrayList<>();

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_USER_COUNT = "userCount";
  private Integer userCount;

  public static final String JSON_PROPERTY_USER_REPORT_COUNT = "userReportCount";
  private Integer userReportCount;

  public RetrieveAnIssue200Response() { 
  }

  public RetrieveAnIssue200Response activity(List<RetrieveAnIssue200ResponseActivityInner> activity) {
    this.activity = activity;
    return this;
  }

  public RetrieveAnIssue200Response addActivityItem(RetrieveAnIssue200ResponseActivityInner activityItem) {
    if (this.activity == null) {
      this.activity = new ArrayList<>();
    }
    this.activity.add(activityItem);
    return this;
  }

   /**
   * Get activity
   * @return activity
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<RetrieveAnIssue200ResponseActivityInner> getActivity() {
    return activity;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActivity(List<RetrieveAnIssue200ResponseActivityInner> activity) {
    this.activity = activity;
  }


  public RetrieveAnIssue200Response annotations(List<String> annotations) {
    this.annotations = annotations;
    return this;
  }

  public RetrieveAnIssue200Response addAnnotationsItem(String annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new ArrayList<>();
    }
    this.annotations.add(annotationsItem);
    return this;
  }

   /**
   * Get annotations
   * @return annotations
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ANNOTATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getAnnotations() {
    return annotations;
  }


  @JsonProperty(JSON_PROPERTY_ANNOTATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAnnotations(List<String> annotations) {
    this.annotations = annotations;
  }


  public RetrieveAnIssue200Response assignedTo(Object assignedTo) {
    this.assignedTo = assignedTo;
    return this;
  }

   /**
   * Get assignedTo
   * @return assignedTo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASSIGNED_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getAssignedTo() {
    return assignedTo;
  }


  @JsonProperty(JSON_PROPERTY_ASSIGNED_TO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAssignedTo(Object assignedTo) {
    this.assignedTo = assignedTo;
  }


  public RetrieveAnIssue200Response count(String count) {
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCount(String count) {
    this.count = count;
  }


  public RetrieveAnIssue200Response culprit(String culprit) {
    this.culprit = culprit;
    return this;
  }

   /**
   * Get culprit
   * @return culprit
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CULPRIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCulprit() {
    return culprit;
  }


  @JsonProperty(JSON_PROPERTY_CULPRIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCulprit(String culprit) {
    this.culprit = culprit;
  }


  public RetrieveAnIssue200Response firstRelease(RetrieveAnIssue200ResponseFirstRelease firstRelease) {
    this.firstRelease = firstRelease;
    return this;
  }

   /**
   * Get firstRelease
   * @return firstRelease
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_RELEASE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RetrieveAnIssue200ResponseFirstRelease getFirstRelease() {
    return firstRelease;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_RELEASE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstRelease(RetrieveAnIssue200ResponseFirstRelease firstRelease) {
    this.firstRelease = firstRelease;
  }


  public RetrieveAnIssue200Response firstSeen(String firstSeen) {
    this.firstSeen = firstSeen;
    return this;
  }

   /**
   * Get firstSeen
   * @return firstSeen
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIRST_SEEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirstSeen() {
    return firstSeen;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_SEEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirstSeen(String firstSeen) {
    this.firstSeen = firstSeen;
  }


  public RetrieveAnIssue200Response hasSeen(Boolean hasSeen) {
    this.hasSeen = hasSeen;
    return this;
  }

   /**
   * Get hasSeen
   * @return hasSeen
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HAS_SEEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getHasSeen() {
    return hasSeen;
  }


  @JsonProperty(JSON_PROPERTY_HAS_SEEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHasSeen(Boolean hasSeen) {
    this.hasSeen = hasSeen;
  }


  public RetrieveAnIssue200Response id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public RetrieveAnIssue200Response isBookmarked(Boolean isBookmarked) {
    this.isBookmarked = isBookmarked;
    return this;
  }

   /**
   * Get isBookmarked
   * @return isBookmarked
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_BOOKMARKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsBookmarked() {
    return isBookmarked;
  }


  @JsonProperty(JSON_PROPERTY_IS_BOOKMARKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsBookmarked(Boolean isBookmarked) {
    this.isBookmarked = isBookmarked;
  }


  public RetrieveAnIssue200Response isPublic(Boolean isPublic) {
    this.isPublic = isPublic;
    return this;
  }

   /**
   * Get isPublic
   * @return isPublic
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_PUBLIC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsPublic() {
    return isPublic;
  }


  @JsonProperty(JSON_PROPERTY_IS_PUBLIC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }


  public RetrieveAnIssue200Response isSubscribed(Boolean isSubscribed) {
    this.isSubscribed = isSubscribed;
    return this;
  }

   /**
   * Get isSubscribed
   * @return isSubscribed
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_SUBSCRIBED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsSubscribed() {
    return isSubscribed;
  }


  @JsonProperty(JSON_PROPERTY_IS_SUBSCRIBED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsSubscribed(Boolean isSubscribed) {
    this.isSubscribed = isSubscribed;
  }


  public RetrieveAnIssue200Response lastRelease(Object lastRelease) {
    this.lastRelease = lastRelease;
    return this;
  }

   /**
   * Get lastRelease
   * @return lastRelease
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_RELEASE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getLastRelease() {
    return lastRelease;
  }


  @JsonProperty(JSON_PROPERTY_LAST_RELEASE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastRelease(Object lastRelease) {
    this.lastRelease = lastRelease;
  }


  public RetrieveAnIssue200Response lastSeen(String lastSeen) {
    this.lastSeen = lastSeen;
    return this;
  }

   /**
   * Get lastSeen
   * @return lastSeen
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_SEEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLastSeen() {
    return lastSeen;
  }


  @JsonProperty(JSON_PROPERTY_LAST_SEEN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastSeen(String lastSeen) {
    this.lastSeen = lastSeen;
  }


  public RetrieveAnIssue200Response level(String level) {
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLevel() {
    return level;
  }


  @JsonProperty(JSON_PROPERTY_LEVEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLevel(String level) {
    this.level = level;
  }


  public RetrieveAnIssue200Response logger(String logger) {
    this.logger = logger;
    return this;
  }

   /**
   * Get logger
   * @return logger
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGGER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLogger() {
    return logger;
  }


  @JsonProperty(JSON_PROPERTY_LOGGER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLogger(String logger) {
    this.logger = logger;
  }


  public RetrieveAnIssue200Response metadata(ListAProjectSIssues200ResponseInnerMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ListAProjectSIssues200ResponseInnerMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetadata(ListAProjectSIssues200ResponseInnerMetadata metadata) {
    this.metadata = metadata;
  }


  public RetrieveAnIssue200Response numComments(Integer numComments) {
    this.numComments = numComments;
    return this;
  }

   /**
   * Get numComments
   * @return numComments
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUM_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getNumComments() {
    return numComments;
  }


  @JsonProperty(JSON_PROPERTY_NUM_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNumComments(Integer numComments) {
    this.numComments = numComments;
  }


  public RetrieveAnIssue200Response participants(List<Object> participants) {
    this.participants = participants;
    return this;
  }

  public RetrieveAnIssue200Response addParticipantsItem(Object participantsItem) {
    if (this.participants == null) {
      this.participants = new ArrayList<>();
    }
    this.participants.add(participantsItem);
    return this;
  }

   /**
   * Get participants
   * @return participants
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARTICIPANTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Object> getParticipants() {
    return participants;
  }


  @JsonProperty(JSON_PROPERTY_PARTICIPANTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParticipants(List<Object> participants) {
    this.participants = participants;
  }


  public RetrieveAnIssue200Response permalink(String permalink) {
    this.permalink = permalink;
    return this;
  }

   /**
   * Get permalink
   * @return permalink
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PERMALINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPermalink() {
    return permalink;
  }


  @JsonProperty(JSON_PROPERTY_PERMALINK)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPermalink(String permalink) {
    this.permalink = permalink;
  }


  public RetrieveAnIssue200Response pluginActions(List<List<String>> pluginActions) {
    this.pluginActions = pluginActions;
    return this;
  }

  public RetrieveAnIssue200Response addPluginActionsItem(List<String> pluginActionsItem) {
    if (this.pluginActions == null) {
      this.pluginActions = new ArrayList<>();
    }
    this.pluginActions.add(pluginActionsItem);
    return this;
  }

   /**
   * Get pluginActions
   * @return pluginActions
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PLUGIN_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<List<String>> getPluginActions() {
    return pluginActions;
  }


  @JsonProperty(JSON_PROPERTY_PLUGIN_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPluginActions(List<List<String>> pluginActions) {
    this.pluginActions = pluginActions;
  }


  public RetrieveAnIssue200Response pluginContexts(List<String> pluginContexts) {
    this.pluginContexts = pluginContexts;
    return this;
  }

  public RetrieveAnIssue200Response addPluginContextsItem(String pluginContextsItem) {
    if (this.pluginContexts == null) {
      this.pluginContexts = new ArrayList<>();
    }
    this.pluginContexts.add(pluginContextsItem);
    return this;
  }

   /**
   * Get pluginContexts
   * @return pluginContexts
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PLUGIN_CONTEXTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getPluginContexts() {
    return pluginContexts;
  }


  @JsonProperty(JSON_PROPERTY_PLUGIN_CONTEXTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPluginContexts(List<String> pluginContexts) {
    this.pluginContexts = pluginContexts;
  }


  public RetrieveAnIssue200Response pluginIssues(List<Object> pluginIssues) {
    this.pluginIssues = pluginIssues;
    return this;
  }

  public RetrieveAnIssue200Response addPluginIssuesItem(Object pluginIssuesItem) {
    if (this.pluginIssues == null) {
      this.pluginIssues = new ArrayList<>();
    }
    this.pluginIssues.add(pluginIssuesItem);
    return this;
  }

   /**
   * Get pluginIssues
   * @return pluginIssues
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PLUGIN_ISSUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Object> getPluginIssues() {
    return pluginIssues;
  }


  @JsonProperty(JSON_PROPERTY_PLUGIN_ISSUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPluginIssues(List<Object> pluginIssues) {
    this.pluginIssues = pluginIssues;
  }


  public RetrieveAnIssue200Response project(ListAProjectSIssues200ResponseInnerProject project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ListAProjectSIssues200ResponseInnerProject getProject() {
    return project;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProject(ListAProjectSIssues200ResponseInnerProject project) {
    this.project = project;
  }


  public RetrieveAnIssue200Response seenBy(List<Object> seenBy) {
    this.seenBy = seenBy;
    return this;
  }

  public RetrieveAnIssue200Response addSeenByItem(Object seenByItem) {
    if (this.seenBy == null) {
      this.seenBy = new ArrayList<>();
    }
    this.seenBy.add(seenByItem);
    return this;
  }

   /**
   * Get seenBy
   * @return seenBy
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SEEN_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Object> getSeenBy() {
    return seenBy;
  }


  @JsonProperty(JSON_PROPERTY_SEEN_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSeenBy(List<Object> seenBy) {
    this.seenBy = seenBy;
  }


  public RetrieveAnIssue200Response shareId(String shareId) {
    this.shareId = shareId;
    return this;
  }

   /**
   * Get shareId
   * @return shareId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHARE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getShareId() {
    return shareId;
  }


  @JsonProperty(JSON_PROPERTY_SHARE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShareId(String shareId) {
    this.shareId = shareId;
  }


  public RetrieveAnIssue200Response shortId(String shortId) {
    this.shortId = shortId;
    return this;
  }

   /**
   * Get shortId
   * @return shortId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHORT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getShortId() {
    return shortId;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShortId(String shortId) {
    this.shortId = shortId;
  }


  public RetrieveAnIssue200Response stats(RetrieveAnIssue200ResponseStats stats) {
    this.stats = stats;
    return this;
  }

   /**
   * Get stats
   * @return stats
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RetrieveAnIssue200ResponseStats getStats() {
    return stats;
  }


  @JsonProperty(JSON_PROPERTY_STATS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStats(RetrieveAnIssue200ResponseStats stats) {
    this.stats = stats;
  }


  public RetrieveAnIssue200Response status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public RetrieveAnIssue200Response statusDetails(Object statusDetails) {
    this.statusDetails = statusDetails;
    return this;
  }

   /**
   * Get statusDetails
   * @return statusDetails
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getStatusDetails() {
    return statusDetails;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatusDetails(Object statusDetails) {
    this.statusDetails = statusDetails;
  }


  public RetrieveAnIssue200Response subscriptionDetails(Object subscriptionDetails) {
    this.subscriptionDetails = subscriptionDetails;
    return this;
  }

   /**
   * Get subscriptionDetails
   * @return subscriptionDetails
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getSubscriptionDetails() {
    return subscriptionDetails;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubscriptionDetails(Object subscriptionDetails) {
    this.subscriptionDetails = subscriptionDetails;
  }


  public RetrieveAnIssue200Response tags(List<Object> tags) {
    this.tags = tags;
    return this;
  }

  public RetrieveAnIssue200Response addTagsItem(Object tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Object> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTags(List<Object> tags) {
    this.tags = tags;
  }


  public RetrieveAnIssue200Response title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public RetrieveAnIssue200Response type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public RetrieveAnIssue200Response userCount(Integer userCount) {
    this.userCount = userCount;
    return this;
  }

   /**
   * Get userCount
   * @return userCount
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUserCount() {
    return userCount;
  }


  @JsonProperty(JSON_PROPERTY_USER_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserCount(Integer userCount) {
    this.userCount = userCount;
  }


  public RetrieveAnIssue200Response userReportCount(Integer userReportCount) {
    this.userReportCount = userReportCount;
    return this;
  }

   /**
   * Get userReportCount
   * @return userReportCount
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_REPORT_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getUserReportCount() {
    return userReportCount;
  }


  @JsonProperty(JSON_PROPERTY_USER_REPORT_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserReportCount(Integer userReportCount) {
    this.userReportCount = userReportCount;
  }


  /**
   * Return true if this Retrieve_an_Issue_200_response object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveAnIssue200Response retrieveAnIssue200Response = (RetrieveAnIssue200Response) o;
    return Objects.equals(this.activity, retrieveAnIssue200Response.activity) &&
        Objects.equals(this.annotations, retrieveAnIssue200Response.annotations) &&
        Objects.equals(this.assignedTo, retrieveAnIssue200Response.assignedTo) &&
        Objects.equals(this.count, retrieveAnIssue200Response.count) &&
        Objects.equals(this.culprit, retrieveAnIssue200Response.culprit) &&
        Objects.equals(this.firstRelease, retrieveAnIssue200Response.firstRelease) &&
        Objects.equals(this.firstSeen, retrieveAnIssue200Response.firstSeen) &&
        Objects.equals(this.hasSeen, retrieveAnIssue200Response.hasSeen) &&
        Objects.equals(this.id, retrieveAnIssue200Response.id) &&
        Objects.equals(this.isBookmarked, retrieveAnIssue200Response.isBookmarked) &&
        Objects.equals(this.isPublic, retrieveAnIssue200Response.isPublic) &&
        Objects.equals(this.isSubscribed, retrieveAnIssue200Response.isSubscribed) &&
        Objects.equals(this.lastRelease, retrieveAnIssue200Response.lastRelease) &&
        Objects.equals(this.lastSeen, retrieveAnIssue200Response.lastSeen) &&
        Objects.equals(this.level, retrieveAnIssue200Response.level) &&
        Objects.equals(this.logger, retrieveAnIssue200Response.logger) &&
        Objects.equals(this.metadata, retrieveAnIssue200Response.metadata) &&
        Objects.equals(this.numComments, retrieveAnIssue200Response.numComments) &&
        Objects.equals(this.participants, retrieveAnIssue200Response.participants) &&
        Objects.equals(this.permalink, retrieveAnIssue200Response.permalink) &&
        Objects.equals(this.pluginActions, retrieveAnIssue200Response.pluginActions) &&
        Objects.equals(this.pluginContexts, retrieveAnIssue200Response.pluginContexts) &&
        Objects.equals(this.pluginIssues, retrieveAnIssue200Response.pluginIssues) &&
        Objects.equals(this.project, retrieveAnIssue200Response.project) &&
        Objects.equals(this.seenBy, retrieveAnIssue200Response.seenBy) &&
        Objects.equals(this.shareId, retrieveAnIssue200Response.shareId) &&
        Objects.equals(this.shortId, retrieveAnIssue200Response.shortId) &&
        Objects.equals(this.stats, retrieveAnIssue200Response.stats) &&
        Objects.equals(this.status, retrieveAnIssue200Response.status) &&
        Objects.equals(this.statusDetails, retrieveAnIssue200Response.statusDetails) &&
        Objects.equals(this.subscriptionDetails, retrieveAnIssue200Response.subscriptionDetails) &&
        Objects.equals(this.tags, retrieveAnIssue200Response.tags) &&
        Objects.equals(this.title, retrieveAnIssue200Response.title) &&
        Objects.equals(this.type, retrieveAnIssue200Response.type) &&
        Objects.equals(this.userCount, retrieveAnIssue200Response.userCount) &&
        Objects.equals(this.userReportCount, retrieveAnIssue200Response.userReportCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activity, annotations, assignedTo, count, culprit, firstRelease, firstSeen, hasSeen, id, isBookmarked, isPublic, isSubscribed, lastRelease, lastSeen, level, logger, metadata, numComments, participants, permalink, pluginActions, pluginContexts, pluginIssues, project, seenBy, shareId, shortId, stats, status, statusDetails, subscriptionDetails, tags, title, type, userCount, userReportCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveAnIssue200Response {\n");
    sb.append("    activity: ").append(toIndentedString(activity)).append("\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    assignedTo: ").append(toIndentedString(assignedTo)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    culprit: ").append(toIndentedString(culprit)).append("\n");
    sb.append("    firstRelease: ").append(toIndentedString(firstRelease)).append("\n");
    sb.append("    firstSeen: ").append(toIndentedString(firstSeen)).append("\n");
    sb.append("    hasSeen: ").append(toIndentedString(hasSeen)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isBookmarked: ").append(toIndentedString(isBookmarked)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    isSubscribed: ").append(toIndentedString(isSubscribed)).append("\n");
    sb.append("    lastRelease: ").append(toIndentedString(lastRelease)).append("\n");
    sb.append("    lastSeen: ").append(toIndentedString(lastSeen)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    logger: ").append(toIndentedString(logger)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    numComments: ").append(toIndentedString(numComments)).append("\n");
    sb.append("    participants: ").append(toIndentedString(participants)).append("\n");
    sb.append("    permalink: ").append(toIndentedString(permalink)).append("\n");
    sb.append("    pluginActions: ").append(toIndentedString(pluginActions)).append("\n");
    sb.append("    pluginContexts: ").append(toIndentedString(pluginContexts)).append("\n");
    sb.append("    pluginIssues: ").append(toIndentedString(pluginIssues)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    seenBy: ").append(toIndentedString(seenBy)).append("\n");
    sb.append("    shareId: ").append(toIndentedString(shareId)).append("\n");
    sb.append("    shortId: ").append(toIndentedString(shortId)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDetails: ").append(toIndentedString(statusDetails)).append("\n");
    sb.append("    subscriptionDetails: ").append(toIndentedString(subscriptionDetails)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    userCount: ").append(toIndentedString(userCount)).append("\n");
    sb.append("    userReportCount: ").append(toIndentedString(userReportCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

