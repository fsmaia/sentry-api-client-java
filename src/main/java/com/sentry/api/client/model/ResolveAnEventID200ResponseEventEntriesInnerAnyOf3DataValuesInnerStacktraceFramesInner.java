/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.sentry.api.client.model.ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInnerContextInnerInner;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.sentry.api.client.JSON;

/**
 * ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-15T10:13:02.301928Z[Etc/UTC]")
public class ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_FUNCTION = "function";
  @SerializedName(SERIALIZED_NAME_FUNCTION)
  private String function;

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private String errors;

  public static final String SERIALIZED_NAME_COL_NO = "colNo";
  @SerializedName(SERIALIZED_NAME_COL_NO)
  private Integer colNo;

  public static final String SERIALIZED_NAME_VARS = "vars";
  @SerializedName(SERIALIZED_NAME_VARS)
  private Object vars;

  public static final String SERIALIZED_NAME_PACKAGE = "package";
  @SerializedName(SERIALIZED_NAME_PACKAGE)
  private String _package;

  public static final String SERIALIZED_NAME_ABS_PATH = "absPath";
  @SerializedName(SERIALIZED_NAME_ABS_PATH)
  private String absPath;

  public static final String SERIALIZED_NAME_IN_APP = "inApp";
  @SerializedName(SERIALIZED_NAME_IN_APP)
  private Boolean inApp;

  public static final String SERIALIZED_NAME_LINE_NO = "lineNo";
  @SerializedName(SERIALIZED_NAME_LINE_NO)
  private Integer lineNo;

  public static final String SERIALIZED_NAME_MODULE = "module";
  @SerializedName(SERIALIZED_NAME_MODULE)
  private String module;

  public static final String SERIALIZED_NAME_FILENAME = "filename";
  @SerializedName(SERIALIZED_NAME_FILENAME)
  private String filename;

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private String platform;

  public static final String SERIALIZED_NAME_INSTRUCTION_ADDR = "instructionAddr";
  @SerializedName(SERIALIZED_NAME_INSTRUCTION_ADDR)
  private String instructionAddr;

  public static final String SERIALIZED_NAME_CONTEXT = "context";
  @SerializedName(SERIALIZED_NAME_CONTEXT)
  private List<List<ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInnerContextInnerInner>> context = new ArrayList<>();

  public static final String SERIALIZED_NAME_SYMBOL_ADDR = "symbolAddr";
  @SerializedName(SERIALIZED_NAME_SYMBOL_ADDR)
  private String symbolAddr;

  public static final String SERIALIZED_NAME_TRUST = "trust";
  @SerializedName(SERIALIZED_NAME_TRUST)
  private String trust;

  public static final String SERIALIZED_NAME_SYMBOL = "symbol";
  @SerializedName(SERIALIZED_NAME_SYMBOL)
  private String symbol;

  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner() {
  }

  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner function(String function) {
    
    this.function = function;
    return this;
  }

   /**
   * Get function
   * @return function
  **/
  @jakarta.annotation.Nonnull
  public String getFunction() {
    return function;
  }


  public void setFunction(String function) {
    this.function = function;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner errors(String errors) {
    
    this.errors = errors;
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @jakarta.annotation.Nullable
  public String getErrors() {
    return errors;
  }


  public void setErrors(String errors) {
    this.errors = errors;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner colNo(Integer colNo) {
    
    this.colNo = colNo;
    return this;
  }

   /**
   * Get colNo
   * @return colNo
  **/
  @jakarta.annotation.Nullable
  public Integer getColNo() {
    return colNo;
  }


  public void setColNo(Integer colNo) {
    this.colNo = colNo;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner vars(Object vars) {
    
    this.vars = vars;
    return this;
  }

   /**
   * Get vars
   * @return vars
  **/
  @jakarta.annotation.Nullable
  public Object getVars() {
    return vars;
  }


  public void setVars(Object vars) {
    this.vars = vars;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner _package(String _package) {
    
    this._package = _package;
    return this;
  }

   /**
   * Get _package
   * @return _package
  **/
  @jakarta.annotation.Nullable
  public String getPackage() {
    return _package;
  }


  public void setPackage(String _package) {
    this._package = _package;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner absPath(String absPath) {
    
    this.absPath = absPath;
    return this;
  }

   /**
   * Get absPath
   * @return absPath
  **/
  @jakarta.annotation.Nullable
  public String getAbsPath() {
    return absPath;
  }


  public void setAbsPath(String absPath) {
    this.absPath = absPath;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner inApp(Boolean inApp) {
    
    this.inApp = inApp;
    return this;
  }

   /**
   * Get inApp
   * @return inApp
  **/
  @jakarta.annotation.Nonnull
  public Boolean getInApp() {
    return inApp;
  }


  public void setInApp(Boolean inApp) {
    this.inApp = inApp;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner lineNo(Integer lineNo) {
    
    this.lineNo = lineNo;
    return this;
  }

   /**
   * Get lineNo
   * @return lineNo
  **/
  @jakarta.annotation.Nonnull
  public Integer getLineNo() {
    return lineNo;
  }


  public void setLineNo(Integer lineNo) {
    this.lineNo = lineNo;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner module(String module) {
    
    this.module = module;
    return this;
  }

   /**
   * Get module
   * @return module
  **/
  @jakarta.annotation.Nonnull
  public String getModule() {
    return module;
  }


  public void setModule(String module) {
    this.module = module;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner filename(String filename) {
    
    this.filename = filename;
    return this;
  }

   /**
   * Get filename
   * @return filename
  **/
  @jakarta.annotation.Nonnull
  public String getFilename() {
    return filename;
  }


  public void setFilename(String filename) {
    this.filename = filename;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner platform(String platform) {
    
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @jakarta.annotation.Nullable
  public String getPlatform() {
    return platform;
  }


  public void setPlatform(String platform) {
    this.platform = platform;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner instructionAddr(String instructionAddr) {
    
    this.instructionAddr = instructionAddr;
    return this;
  }

   /**
   * Get instructionAddr
   * @return instructionAddr
  **/
  @jakarta.annotation.Nullable
  public String getInstructionAddr() {
    return instructionAddr;
  }


  public void setInstructionAddr(String instructionAddr) {
    this.instructionAddr = instructionAddr;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner context(List<List<ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInnerContextInnerInner>> context) {
    
    this.context = context;
    return this;
  }

  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner addContextItem(List<ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInnerContextInnerInner> contextItem) {
    if (this.context == null) {
      this.context = new ArrayList<>();
    }
    this.context.add(contextItem);
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @jakarta.annotation.Nonnull
  public List<List<ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInnerContextInnerInner>> getContext() {
    return context;
  }


  public void setContext(List<List<ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInnerContextInnerInner>> context) {
    this.context = context;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner symbolAddr(String symbolAddr) {
    
    this.symbolAddr = symbolAddr;
    return this;
  }

   /**
   * Get symbolAddr
   * @return symbolAddr
  **/
  @jakarta.annotation.Nullable
  public String getSymbolAddr() {
    return symbolAddr;
  }


  public void setSymbolAddr(String symbolAddr) {
    this.symbolAddr = symbolAddr;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner trust(String trust) {
    
    this.trust = trust;
    return this;
  }

   /**
   * Get trust
   * @return trust
  **/
  @jakarta.annotation.Nullable
  public String getTrust() {
    return trust;
  }


  public void setTrust(String trust) {
    this.trust = trust;
  }


  public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @jakarta.annotation.Nullable
  public String getSymbol() {
    return symbol;
  }


  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner = (ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner) o;
    return Objects.equals(this.function, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.function) &&
        Objects.equals(this.errors, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.errors) &&
        Objects.equals(this.colNo, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.colNo) &&
        Objects.equals(this.vars, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.vars) &&
        Objects.equals(this._package, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner._package) &&
        Objects.equals(this.absPath, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.absPath) &&
        Objects.equals(this.inApp, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.inApp) &&
        Objects.equals(this.lineNo, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.lineNo) &&
        Objects.equals(this.module, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.module) &&
        Objects.equals(this.filename, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.filename) &&
        Objects.equals(this.platform, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.platform) &&
        Objects.equals(this.instructionAddr, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.instructionAddr) &&
        Objects.equals(this.context, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.context) &&
        Objects.equals(this.symbolAddr, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.symbolAddr) &&
        Objects.equals(this.trust, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.trust) &&
        Objects.equals(this.symbol, resolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.symbol);
  }

  @Override
  public int hashCode() {
    return Objects.hash(function, errors, colNo, vars, _package, absPath, inApp, lineNo, module, filename, platform, instructionAddr, context, symbolAddr, trust, symbol);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner {\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    colNo: ").append(toIndentedString(colNo)).append("\n");
    sb.append("    vars: ").append(toIndentedString(vars)).append("\n");
    sb.append("    _package: ").append(toIndentedString(_package)).append("\n");
    sb.append("    absPath: ").append(toIndentedString(absPath)).append("\n");
    sb.append("    inApp: ").append(toIndentedString(inApp)).append("\n");
    sb.append("    lineNo: ").append(toIndentedString(lineNo)).append("\n");
    sb.append("    module: ").append(toIndentedString(module)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    instructionAddr: ").append(toIndentedString(instructionAddr)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    symbolAddr: ").append(toIndentedString(symbolAddr)).append("\n");
    sb.append("    trust: ").append(toIndentedString(trust)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("function");
    openapiFields.add("errors");
    openapiFields.add("colNo");
    openapiFields.add("vars");
    openapiFields.add("package");
    openapiFields.add("absPath");
    openapiFields.add("inApp");
    openapiFields.add("lineNo");
    openapiFields.add("module");
    openapiFields.add("filename");
    openapiFields.add("platform");
    openapiFields.add("instructionAddr");
    openapiFields.add("context");
    openapiFields.add("symbolAddr");
    openapiFields.add("trust");
    openapiFields.add("symbol");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("function");
    openapiRequiredFields.add("errors");
    openapiRequiredFields.add("colNo");
    openapiRequiredFields.add("vars");
    openapiRequiredFields.add("package");
    openapiRequiredFields.add("absPath");
    openapiRequiredFields.add("inApp");
    openapiRequiredFields.add("lineNo");
    openapiRequiredFields.add("module");
    openapiRequiredFields.add("filename");
    openapiRequiredFields.add("platform");
    openapiRequiredFields.add("instructionAddr");
    openapiRequiredFields.add("context");
    openapiRequiredFields.add("symbolAddr");
    openapiRequiredFields.add("trust");
    openapiRequiredFields.add("symbol");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner is not found in the empty JSON string", ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("function").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `function` to be a primitive type in the JSON string but got `%s`", jsonObj.get("function").toString()));
      }
      if (!jsonObj.get("errors").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `errors` to be a primitive type in the JSON string but got `%s`", jsonObj.get("errors").toString()));
      }
      if (!jsonObj.get("package").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `package` to be a primitive type in the JSON string but got `%s`", jsonObj.get("package").toString()));
      }
      if (!jsonObj.get("absPath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `absPath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("absPath").toString()));
      }
      if (!jsonObj.get("module").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `module` to be a primitive type in the JSON string but got `%s`", jsonObj.get("module").toString()));
      }
      if (!jsonObj.get("filename").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filename` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filename").toString()));
      }
      if (!jsonObj.get("platform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform").toString()));
      }
      if (!jsonObj.get("instructionAddr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instructionAddr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instructionAddr").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("context") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("context").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `context` to be an array in the JSON string but got `%s`", jsonObj.get("context").toString()));
      }
      if (!jsonObj.get("symbolAddr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `symbolAddr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("symbolAddr").toString()));
      }
      if (!jsonObj.get("trust").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trust` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trust").toString()));
      }
      if (!jsonObj.get("symbol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `symbol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("symbol").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner>() {
           @Override
           public void write(JsonWriter out, ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner
  * @throws IOException if the JSON string is invalid with respect to ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner
  */
  public static ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner.class);
  }

 /**
  * Convert an instance of ResolveAnEventID200ResponseEventEntriesInnerAnyOf3DataValuesInnerStacktraceFramesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

