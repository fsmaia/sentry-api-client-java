/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.sentry.api.client.JSON;


/**
 * ResolveAnEventID200ResponseEventContextsTrace
 */
@JsonPropertyOrder({
  ResolveAnEventID200ResponseEventContextsTrace.JSON_PROPERTY_SPAN_ID,
  ResolveAnEventID200ResponseEventContextsTrace.JSON_PROPERTY_TYPE,
  ResolveAnEventID200ResponseEventContextsTrace.JSON_PROPERTY_TRACE_ID,
  ResolveAnEventID200ResponseEventContextsTrace.JSON_PROPERTY_OP
})
@JsonTypeName("Resolve_an_Event_ID_200_response_event_contexts_trace")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-16T14:23:11.909078Z[Etc/UTC]")
public class ResolveAnEventID200ResponseEventContextsTrace {
  public static final String JSON_PROPERTY_SPAN_ID = "span_id";
  private String spanId;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_TRACE_ID = "trace_id";
  private String traceId;

  public static final String JSON_PROPERTY_OP = "op";
  private String op;

  public ResolveAnEventID200ResponseEventContextsTrace() { 
  }

  public ResolveAnEventID200ResponseEventContextsTrace spanId(String spanId) {
    this.spanId = spanId;
    return this;
  }

   /**
   * Get spanId
   * @return spanId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSpanId() {
    return spanId;
  }


  @JsonProperty(JSON_PROPERTY_SPAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpanId(String spanId) {
    this.spanId = spanId;
  }


  public ResolveAnEventID200ResponseEventContextsTrace type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public ResolveAnEventID200ResponseEventContextsTrace traceId(String traceId) {
    this.traceId = traceId;
    return this;
  }

   /**
   * Get traceId
   * @return traceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRACE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTraceId() {
    return traceId;
  }


  @JsonProperty(JSON_PROPERTY_TRACE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTraceId(String traceId) {
    this.traceId = traceId;
  }


  public ResolveAnEventID200ResponseEventContextsTrace op(String op) {
    this.op = op;
    return this;
  }

   /**
   * Get op
   * @return op
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOp() {
    return op;
  }


  @JsonProperty(JSON_PROPERTY_OP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOp(String op) {
    this.op = op;
  }


  /**
   * Return true if this Resolve_an_Event_ID_200_response_event_contexts_trace object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResolveAnEventID200ResponseEventContextsTrace resolveAnEventID200ResponseEventContextsTrace = (ResolveAnEventID200ResponseEventContextsTrace) o;
    return Objects.equals(this.spanId, resolveAnEventID200ResponseEventContextsTrace.spanId) &&
        Objects.equals(this.type, resolveAnEventID200ResponseEventContextsTrace.type) &&
        Objects.equals(this.traceId, resolveAnEventID200ResponseEventContextsTrace.traceId) &&
        Objects.equals(this.op, resolveAnEventID200ResponseEventContextsTrace.op);
  }

  @Override
  public int hashCode() {
    return Objects.hash(spanId, type, traceId, op);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResolveAnEventID200ResponseEventContextsTrace {\n");
    sb.append("    spanId: ").append(toIndentedString(spanId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    traceId: ").append(toIndentedString(traceId)).append("\n");
    sb.append("    op: ").append(toIndentedString(op)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

