/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.sentry.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.sentry.api.client.model.RetrieveReleaseHealthSessionStatistics200ResponseGroupsInnerBy;
import com.sentry.api.client.model.RetrieveReleaseHealthSessionStatistics200ResponseGroupsInnerTotals;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.sentry.api.client.JSON;


/**
 * A grouped result, as requested by the &#x60;groupBy&#x60; request parameter.
 */
@JsonPropertyOrder({
  RetrieveReleaseHealthSessionStatistics200ResponseGroupsInner.JSON_PROPERTY_BY,
  RetrieveReleaseHealthSessionStatistics200ResponseGroupsInner.JSON_PROPERTY_TOTALS,
  RetrieveReleaseHealthSessionStatistics200ResponseGroupsInner.JSON_PROPERTY_SERIES
})
@JsonTypeName("Retrieve_Release_Health_Session_Statistics_200_response_groups_inner")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-16T15:18:46.808333Z[Etc/UTC]")
public class RetrieveReleaseHealthSessionStatistics200ResponseGroupsInner {
  public static final String JSON_PROPERTY_BY = "by";
  private RetrieveReleaseHealthSessionStatistics200ResponseGroupsInnerBy by;

  public static final String JSON_PROPERTY_TOTALS = "totals";
  private RetrieveReleaseHealthSessionStatistics200ResponseGroupsInnerTotals totals;

  public static final String JSON_PROPERTY_SERIES = "series";
  private Map<String, List<Integer>> series = new HashMap<>();

  public RetrieveReleaseHealthSessionStatistics200ResponseGroupsInner() { 
  }

  public RetrieveReleaseHealthSessionStatistics200ResponseGroupsInner by(RetrieveReleaseHealthSessionStatistics200ResponseGroupsInnerBy by) {
    this.by = by;
    return this;
  }

   /**
   * Get by
   * @return by
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RetrieveReleaseHealthSessionStatistics200ResponseGroupsInnerBy getBy() {
    return by;
  }


  @JsonProperty(JSON_PROPERTY_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBy(RetrieveReleaseHealthSessionStatistics200ResponseGroupsInnerBy by) {
    this.by = by;
  }


  public RetrieveReleaseHealthSessionStatistics200ResponseGroupsInner totals(RetrieveReleaseHealthSessionStatistics200ResponseGroupsInnerTotals totals) {
    this.totals = totals;
    return this;
  }

   /**
   * Get totals
   * @return totals
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTALS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public RetrieveReleaseHealthSessionStatistics200ResponseGroupsInnerTotals getTotals() {
    return totals;
  }


  @JsonProperty(JSON_PROPERTY_TOTALS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotals(RetrieveReleaseHealthSessionStatistics200ResponseGroupsInnerTotals totals) {
    this.totals = totals;
  }


  public RetrieveReleaseHealthSessionStatistics200ResponseGroupsInner series(Map<String, List<Integer>> series) {
    this.series = series;
    return this;
  }

  public RetrieveReleaseHealthSessionStatistics200ResponseGroupsInner putSeriesItem(String key, List<Integer> seriesItem) {
    if (this.series == null) {
      this.series = new HashMap<>();
    }
    this.series.put(key, seriesItem);
    return this;
  }

   /**
   * These are key/value pairs, the key being the requested &#x60;field&#x60;, and the value is an array of aggregated values. The array corresponds to the times given in the &#x60;intervals&#x60; array.
   * @return series
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SERIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, List<Integer>> getSeries() {
    return series;
  }


  @JsonProperty(JSON_PROPERTY_SERIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSeries(Map<String, List<Integer>> series) {
    this.series = series;
  }


  /**
   * Return true if this Retrieve_Release_Health_Session_Statistics_200_response_groups_inner object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveReleaseHealthSessionStatistics200ResponseGroupsInner retrieveReleaseHealthSessionStatistics200ResponseGroupsInner = (RetrieveReleaseHealthSessionStatistics200ResponseGroupsInner) o;
    return Objects.equals(this.by, retrieveReleaseHealthSessionStatistics200ResponseGroupsInner.by) &&
        Objects.equals(this.totals, retrieveReleaseHealthSessionStatistics200ResponseGroupsInner.totals) &&
        Objects.equals(this.series, retrieveReleaseHealthSessionStatistics200ResponseGroupsInner.series);
  }

  @Override
  public int hashCode() {
    return Objects.hash(by, totals, series);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveReleaseHealthSessionStatistics200ResponseGroupsInner {\n");
    sb.append("    by: ").append(toIndentedString(by)).append("\n");
    sb.append("    totals: ").append(toIndentedString(totals)).append("\n");
    sb.append("    series: ").append(toIndentedString(series)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

