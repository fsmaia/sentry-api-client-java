/*
 * API Reference
 * Sentry Public API
 *
 * The version of the OpenAPI document: v0
 * Contact: partners@sentry.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ListAnOrganizationSProjects200ResponseInnerTeamsInner;
import org.openapitools.client.model.RetrieveAProject200ResponseLatestRelease;
import org.openapitools.client.model.RetrieveAProject200ResponseOptions;
import org.openapitools.client.model.RetrieveAProject200ResponsePluginsInner;
import org.openapitools.client.model.RetrieveATeam200ResponseAvatar;
import org.openapitools.client.model.RetrieveATeam200ResponseOrganization;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.sentry.api.client.JSON;

/**
 * RetrieveAProject200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-15T09:39:48.475487Z[Etc/UTC]")
public class RetrieveAProject200Response implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ALLOWED_DOMAINS = "allowedDomains";
  @SerializedName(SERIALIZED_NAME_ALLOWED_DOMAINS)
  private List<String> allowedDomains = new ArrayList<>();

  public static final String SERIALIZED_NAME_AVATAR = "avatar";
  @SerializedName(SERIALIZED_NAME_AVATAR)
  private RetrieveATeam200ResponseAvatar avatar;

  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private String color;

  public static final String SERIALIZED_NAME_DATA_SCRUBBER = "dataScrubber";
  @SerializedName(SERIALIZED_NAME_DATA_SCRUBBER)
  private Boolean dataScrubber;

  public static final String SERIALIZED_NAME_DATA_SCRUBBER_DEFAULTS = "dataScrubberDefaults";
  @SerializedName(SERIALIZED_NAME_DATA_SCRUBBER_DEFAULTS)
  private Boolean dataScrubberDefaults;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  private String dateCreated;

  public static final String SERIALIZED_NAME_DEFAULT_ENVIRONMENT = "defaultEnvironment";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ENVIRONMENT)
  private String defaultEnvironment;

  public static final String SERIALIZED_NAME_DIGESTS_MAX_DELAY = "digestsMaxDelay";
  @SerializedName(SERIALIZED_NAME_DIGESTS_MAX_DELAY)
  private Integer digestsMaxDelay;

  public static final String SERIALIZED_NAME_DIGESTS_MIN_DELAY = "digestsMinDelay";
  @SerializedName(SERIALIZED_NAME_DIGESTS_MIN_DELAY)
  private Integer digestsMinDelay;

  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private List<String> features = new ArrayList<>();

  public static final String SERIALIZED_NAME_FIRST_EVENT = "firstEvent";
  @SerializedName(SERIALIZED_NAME_FIRST_EVENT)
  private String firstEvent;

  public static final String SERIALIZED_NAME_HAS_ACCESS = "hasAccess";
  @SerializedName(SERIALIZED_NAME_HAS_ACCESS)
  private Boolean hasAccess;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_BOOKMARKED = "isBookmarked";
  @SerializedName(SERIALIZED_NAME_IS_BOOKMARKED)
  private Boolean isBookmarked;

  public static final String SERIALIZED_NAME_IS_INTERNAL = "isInternal";
  @SerializedName(SERIALIZED_NAME_IS_INTERNAL)
  private Boolean isInternal;

  public static final String SERIALIZED_NAME_IS_MEMBER = "isMember";
  @SerializedName(SERIALIZED_NAME_IS_MEMBER)
  private Boolean isMember;

  public static final String SERIALIZED_NAME_IS_PUBLIC = "isPublic";
  @SerializedName(SERIALIZED_NAME_IS_PUBLIC)
  private Boolean isPublic;

  public static final String SERIALIZED_NAME_LATEST_RELEASE = "latestRelease";
  @SerializedName(SERIALIZED_NAME_LATEST_RELEASE)
  private RetrieveAProject200ResponseLatestRelease latestRelease;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private RetrieveAProject200ResponseOptions options;

  public static final String SERIALIZED_NAME_ORGANIZATION = "organization";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION)
  private RetrieveATeam200ResponseOrganization organization;

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private String platform;

  public static final String SERIALIZED_NAME_PLATFORMS = "platforms";
  @SerializedName(SERIALIZED_NAME_PLATFORMS)
  private List<String> platforms = new ArrayList<>();

  public static final String SERIALIZED_NAME_PLUGINS = "plugins";
  @SerializedName(SERIALIZED_NAME_PLUGINS)
  private List<RetrieveAProject200ResponsePluginsInner> plugins;

  public static final String SERIALIZED_NAME_PROCESSING_ISSUES = "processingIssues";
  @SerializedName(SERIALIZED_NAME_PROCESSING_ISSUES)
  private Integer processingIssues;

  public static final String SERIALIZED_NAME_RELAY_PII_CONFIG = "relayPiiConfig";
  @SerializedName(SERIALIZED_NAME_RELAY_PII_CONFIG)
  private String relayPiiConfig;

  public static final String SERIALIZED_NAME_RESOLVE_AGE = "resolveAge";
  @SerializedName(SERIALIZED_NAME_RESOLVE_AGE)
  private Integer resolveAge;

  public static final String SERIALIZED_NAME_SAFE_FIELDS = "safeFields";
  @SerializedName(SERIALIZED_NAME_SAFE_FIELDS)
  private List<String> safeFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_SCRAPE_JAVA_SCRIPT = "scrapeJavaScript";
  @SerializedName(SERIALIZED_NAME_SCRAPE_JAVA_SCRIPT)
  private Boolean scrapeJavaScript;

  public static final String SERIALIZED_NAME_SCRUB_I_P_ADDRESSES = "scrubIPAddresses";
  @SerializedName(SERIALIZED_NAME_SCRUB_I_P_ADDRESSES)
  private Boolean scrubIPAddresses;

  public static final String SERIALIZED_NAME_SECURITY_TOKEN = "securityToken";
  @SerializedName(SERIALIZED_NAME_SECURITY_TOKEN)
  private String securityToken;

  public static final String SERIALIZED_NAME_SECURITY_TOKEN_HEADER = "securityTokenHeader";
  @SerializedName(SERIALIZED_NAME_SECURITY_TOKEN_HEADER)
  private String securityTokenHeader;

  public static final String SERIALIZED_NAME_SENSITIVE_FIELDS = "sensitiveFields";
  @SerializedName(SERIALIZED_NAME_SENSITIVE_FIELDS)
  private List<String> sensitiveFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STORE_CRASH_REPORTS = "storeCrashReports";
  @SerializedName(SERIALIZED_NAME_STORE_CRASH_REPORTS)
  private Boolean storeCrashReports;

  public static final String SERIALIZED_NAME_SUBJECT_PREFIX = "subjectPrefix";
  @SerializedName(SERIALIZED_NAME_SUBJECT_PREFIX)
  private String subjectPrefix;

  public static final String SERIALIZED_NAME_SUBJECT_TEMPLATE = "subjectTemplate";
  @SerializedName(SERIALIZED_NAME_SUBJECT_TEMPLATE)
  private String subjectTemplate;

  public static final String SERIALIZED_NAME_TEAM = "team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private ListAnOrganizationSProjects200ResponseInnerTeamsInner team;

  public static final String SERIALIZED_NAME_TEAMS = "teams";
  @SerializedName(SERIALIZED_NAME_TEAMS)
  private List<ListAnOrganizationSProjects200ResponseInnerTeamsInner> teams = new ArrayList<>();

  public static final String SERIALIZED_NAME_VERIFY_S_S_L = "verifySSL";
  @SerializedName(SERIALIZED_NAME_VERIFY_S_S_L)
  private Boolean verifySSL;

  public RetrieveAProject200Response() {
  }

  public RetrieveAProject200Response allowedDomains(List<String> allowedDomains) {
    
    this.allowedDomains = allowedDomains;
    return this;
  }

  public RetrieveAProject200Response addAllowedDomainsItem(String allowedDomainsItem) {
    if (this.allowedDomains == null) {
      this.allowedDomains = new ArrayList<>();
    }
    this.allowedDomains.add(allowedDomainsItem);
    return this;
  }

   /**
   * Get allowedDomains
   * @return allowedDomains
  **/
  @javax.annotation.Nonnull
  public List<String> getAllowedDomains() {
    return allowedDomains;
  }


  public void setAllowedDomains(List<String> allowedDomains) {
    this.allowedDomains = allowedDomains;
  }


  public RetrieveAProject200Response avatar(RetrieveATeam200ResponseAvatar avatar) {
    
    this.avatar = avatar;
    return this;
  }

   /**
   * Get avatar
   * @return avatar
  **/
  @javax.annotation.Nonnull
  public RetrieveATeam200ResponseAvatar getAvatar() {
    return avatar;
  }


  public void setAvatar(RetrieveATeam200ResponseAvatar avatar) {
    this.avatar = avatar;
  }


  public RetrieveAProject200Response color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * Get color
   * @return color
  **/
  @javax.annotation.Nonnull
  public String getColor() {
    return color;
  }


  public void setColor(String color) {
    this.color = color;
  }


  public RetrieveAProject200Response dataScrubber(Boolean dataScrubber) {
    
    this.dataScrubber = dataScrubber;
    return this;
  }

   /**
   * Get dataScrubber
   * @return dataScrubber
  **/
  @javax.annotation.Nonnull
  public Boolean getDataScrubber() {
    return dataScrubber;
  }


  public void setDataScrubber(Boolean dataScrubber) {
    this.dataScrubber = dataScrubber;
  }


  public RetrieveAProject200Response dataScrubberDefaults(Boolean dataScrubberDefaults) {
    
    this.dataScrubberDefaults = dataScrubberDefaults;
    return this;
  }

   /**
   * Get dataScrubberDefaults
   * @return dataScrubberDefaults
  **/
  @javax.annotation.Nonnull
  public Boolean getDataScrubberDefaults() {
    return dataScrubberDefaults;
  }


  public void setDataScrubberDefaults(Boolean dataScrubberDefaults) {
    this.dataScrubberDefaults = dataScrubberDefaults;
  }


  public RetrieveAProject200Response dateCreated(String dateCreated) {
    
    this.dateCreated = dateCreated;
    return this;
  }

   /**
   * Get dateCreated
   * @return dateCreated
  **/
  @javax.annotation.Nonnull
  public String getDateCreated() {
    return dateCreated;
  }


  public void setDateCreated(String dateCreated) {
    this.dateCreated = dateCreated;
  }


  public RetrieveAProject200Response defaultEnvironment(String defaultEnvironment) {
    
    this.defaultEnvironment = defaultEnvironment;
    return this;
  }

   /**
   * Get defaultEnvironment
   * @return defaultEnvironment
  **/
  @javax.annotation.Nullable
  public String getDefaultEnvironment() {
    return defaultEnvironment;
  }


  public void setDefaultEnvironment(String defaultEnvironment) {
    this.defaultEnvironment = defaultEnvironment;
  }


  public RetrieveAProject200Response digestsMaxDelay(Integer digestsMaxDelay) {
    
    this.digestsMaxDelay = digestsMaxDelay;
    return this;
  }

   /**
   * Get digestsMaxDelay
   * @return digestsMaxDelay
  **/
  @javax.annotation.Nonnull
  public Integer getDigestsMaxDelay() {
    return digestsMaxDelay;
  }


  public void setDigestsMaxDelay(Integer digestsMaxDelay) {
    this.digestsMaxDelay = digestsMaxDelay;
  }


  public RetrieveAProject200Response digestsMinDelay(Integer digestsMinDelay) {
    
    this.digestsMinDelay = digestsMinDelay;
    return this;
  }

   /**
   * Get digestsMinDelay
   * @return digestsMinDelay
  **/
  @javax.annotation.Nonnull
  public Integer getDigestsMinDelay() {
    return digestsMinDelay;
  }


  public void setDigestsMinDelay(Integer digestsMinDelay) {
    this.digestsMinDelay = digestsMinDelay;
  }


  public RetrieveAProject200Response features(List<String> features) {
    
    this.features = features;
    return this;
  }

  public RetrieveAProject200Response addFeaturesItem(String featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @javax.annotation.Nonnull
  public List<String> getFeatures() {
    return features;
  }


  public void setFeatures(List<String> features) {
    this.features = features;
  }


  public RetrieveAProject200Response firstEvent(String firstEvent) {
    
    this.firstEvent = firstEvent;
    return this;
  }

   /**
   * Get firstEvent
   * @return firstEvent
  **/
  @javax.annotation.Nullable
  public String getFirstEvent() {
    return firstEvent;
  }


  public void setFirstEvent(String firstEvent) {
    this.firstEvent = firstEvent;
  }


  public RetrieveAProject200Response hasAccess(Boolean hasAccess) {
    
    this.hasAccess = hasAccess;
    return this;
  }

   /**
   * Get hasAccess
   * @return hasAccess
  **/
  @javax.annotation.Nonnull
  public Boolean getHasAccess() {
    return hasAccess;
  }


  public void setHasAccess(Boolean hasAccess) {
    this.hasAccess = hasAccess;
  }


  public RetrieveAProject200Response id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public RetrieveAProject200Response isBookmarked(Boolean isBookmarked) {
    
    this.isBookmarked = isBookmarked;
    return this;
  }

   /**
   * Get isBookmarked
   * @return isBookmarked
  **/
  @javax.annotation.Nonnull
  public Boolean getIsBookmarked() {
    return isBookmarked;
  }


  public void setIsBookmarked(Boolean isBookmarked) {
    this.isBookmarked = isBookmarked;
  }


  public RetrieveAProject200Response isInternal(Boolean isInternal) {
    
    this.isInternal = isInternal;
    return this;
  }

   /**
   * Get isInternal
   * @return isInternal
  **/
  @javax.annotation.Nonnull
  public Boolean getIsInternal() {
    return isInternal;
  }


  public void setIsInternal(Boolean isInternal) {
    this.isInternal = isInternal;
  }


  public RetrieveAProject200Response isMember(Boolean isMember) {
    
    this.isMember = isMember;
    return this;
  }

   /**
   * Get isMember
   * @return isMember
  **/
  @javax.annotation.Nonnull
  public Boolean getIsMember() {
    return isMember;
  }


  public void setIsMember(Boolean isMember) {
    this.isMember = isMember;
  }


  public RetrieveAProject200Response isPublic(Boolean isPublic) {
    
    this.isPublic = isPublic;
    return this;
  }

   /**
   * Get isPublic
   * @return isPublic
  **/
  @javax.annotation.Nonnull
  public Boolean getIsPublic() {
    return isPublic;
  }


  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }


  public RetrieveAProject200Response latestRelease(RetrieveAProject200ResponseLatestRelease latestRelease) {
    
    this.latestRelease = latestRelease;
    return this;
  }

   /**
   * Get latestRelease
   * @return latestRelease
  **/
  @javax.annotation.Nullable
  public RetrieveAProject200ResponseLatestRelease getLatestRelease() {
    return latestRelease;
  }


  public void setLatestRelease(RetrieveAProject200ResponseLatestRelease latestRelease) {
    this.latestRelease = latestRelease;
  }


  public RetrieveAProject200Response name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public RetrieveAProject200Response options(RetrieveAProject200ResponseOptions options) {
    
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nonnull
  public RetrieveAProject200ResponseOptions getOptions() {
    return options;
  }


  public void setOptions(RetrieveAProject200ResponseOptions options) {
    this.options = options;
  }


  public RetrieveAProject200Response organization(RetrieveATeam200ResponseOrganization organization) {
    
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @javax.annotation.Nonnull
  public RetrieveATeam200ResponseOrganization getOrganization() {
    return organization;
  }


  public void setOrganization(RetrieveATeam200ResponseOrganization organization) {
    this.organization = organization;
  }


  public RetrieveAProject200Response platform(String platform) {
    
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @javax.annotation.Nullable
  public String getPlatform() {
    return platform;
  }


  public void setPlatform(String platform) {
    this.platform = platform;
  }


  public RetrieveAProject200Response platforms(List<String> platforms) {
    
    this.platforms = platforms;
    return this;
  }

  public RetrieveAProject200Response addPlatformsItem(String platformsItem) {
    if (this.platforms == null) {
      this.platforms = new ArrayList<>();
    }
    this.platforms.add(platformsItem);
    return this;
  }

   /**
   * Get platforms
   * @return platforms
  **/
  @javax.annotation.Nonnull
  public List<String> getPlatforms() {
    return platforms;
  }


  public void setPlatforms(List<String> platforms) {
    this.platforms = platforms;
  }


  public RetrieveAProject200Response plugins(List<RetrieveAProject200ResponsePluginsInner> plugins) {
    
    this.plugins = plugins;
    return this;
  }

  public RetrieveAProject200Response addPluginsItem(RetrieveAProject200ResponsePluginsInner pluginsItem) {
    if (this.plugins == null) {
      this.plugins = new ArrayList<>();
    }
    this.plugins.add(pluginsItem);
    return this;
  }

   /**
   * Get plugins
   * @return plugins
  **/
  @javax.annotation.Nullable
  public List<RetrieveAProject200ResponsePluginsInner> getPlugins() {
    return plugins;
  }


  public void setPlugins(List<RetrieveAProject200ResponsePluginsInner> plugins) {
    this.plugins = plugins;
  }


  public RetrieveAProject200Response processingIssues(Integer processingIssues) {
    
    this.processingIssues = processingIssues;
    return this;
  }

   /**
   * Get processingIssues
   * @return processingIssues
  **/
  @javax.annotation.Nonnull
  public Integer getProcessingIssues() {
    return processingIssues;
  }


  public void setProcessingIssues(Integer processingIssues) {
    this.processingIssues = processingIssues;
  }


  public RetrieveAProject200Response relayPiiConfig(String relayPiiConfig) {
    
    this.relayPiiConfig = relayPiiConfig;
    return this;
  }

   /**
   * Get relayPiiConfig
   * @return relayPiiConfig
  **/
  @javax.annotation.Nullable
  public String getRelayPiiConfig() {
    return relayPiiConfig;
  }


  public void setRelayPiiConfig(String relayPiiConfig) {
    this.relayPiiConfig = relayPiiConfig;
  }


  public RetrieveAProject200Response resolveAge(Integer resolveAge) {
    
    this.resolveAge = resolveAge;
    return this;
  }

   /**
   * Get resolveAge
   * @return resolveAge
  **/
  @javax.annotation.Nonnull
  public Integer getResolveAge() {
    return resolveAge;
  }


  public void setResolveAge(Integer resolveAge) {
    this.resolveAge = resolveAge;
  }


  public RetrieveAProject200Response safeFields(List<String> safeFields) {
    
    this.safeFields = safeFields;
    return this;
  }

  public RetrieveAProject200Response addSafeFieldsItem(String safeFieldsItem) {
    if (this.safeFields == null) {
      this.safeFields = new ArrayList<>();
    }
    this.safeFields.add(safeFieldsItem);
    return this;
  }

   /**
   * Get safeFields
   * @return safeFields
  **/
  @javax.annotation.Nonnull
  public List<String> getSafeFields() {
    return safeFields;
  }


  public void setSafeFields(List<String> safeFields) {
    this.safeFields = safeFields;
  }


  public RetrieveAProject200Response scrapeJavaScript(Boolean scrapeJavaScript) {
    
    this.scrapeJavaScript = scrapeJavaScript;
    return this;
  }

   /**
   * Get scrapeJavaScript
   * @return scrapeJavaScript
  **/
  @javax.annotation.Nonnull
  public Boolean getScrapeJavaScript() {
    return scrapeJavaScript;
  }


  public void setScrapeJavaScript(Boolean scrapeJavaScript) {
    this.scrapeJavaScript = scrapeJavaScript;
  }


  public RetrieveAProject200Response scrubIPAddresses(Boolean scrubIPAddresses) {
    
    this.scrubIPAddresses = scrubIPAddresses;
    return this;
  }

   /**
   * Get scrubIPAddresses
   * @return scrubIPAddresses
  **/
  @javax.annotation.Nonnull
  public Boolean getScrubIPAddresses() {
    return scrubIPAddresses;
  }


  public void setScrubIPAddresses(Boolean scrubIPAddresses) {
    this.scrubIPAddresses = scrubIPAddresses;
  }


  public RetrieveAProject200Response securityToken(String securityToken) {
    
    this.securityToken = securityToken;
    return this;
  }

   /**
   * Get securityToken
   * @return securityToken
  **/
  @javax.annotation.Nonnull
  public String getSecurityToken() {
    return securityToken;
  }


  public void setSecurityToken(String securityToken) {
    this.securityToken = securityToken;
  }


  public RetrieveAProject200Response securityTokenHeader(String securityTokenHeader) {
    
    this.securityTokenHeader = securityTokenHeader;
    return this;
  }

   /**
   * Get securityTokenHeader
   * @return securityTokenHeader
  **/
  @javax.annotation.Nullable
  public String getSecurityTokenHeader() {
    return securityTokenHeader;
  }


  public void setSecurityTokenHeader(String securityTokenHeader) {
    this.securityTokenHeader = securityTokenHeader;
  }


  public RetrieveAProject200Response sensitiveFields(List<String> sensitiveFields) {
    
    this.sensitiveFields = sensitiveFields;
    return this;
  }

  public RetrieveAProject200Response addSensitiveFieldsItem(String sensitiveFieldsItem) {
    if (this.sensitiveFields == null) {
      this.sensitiveFields = new ArrayList<>();
    }
    this.sensitiveFields.add(sensitiveFieldsItem);
    return this;
  }

   /**
   * Get sensitiveFields
   * @return sensitiveFields
  **/
  @javax.annotation.Nonnull
  public List<String> getSensitiveFields() {
    return sensitiveFields;
  }


  public void setSensitiveFields(List<String> sensitiveFields) {
    this.sensitiveFields = sensitiveFields;
  }


  public RetrieveAProject200Response slug(String slug) {
    
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @javax.annotation.Nonnull
  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    this.slug = slug;
  }


  public RetrieveAProject200Response status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public RetrieveAProject200Response storeCrashReports(Boolean storeCrashReports) {
    
    this.storeCrashReports = storeCrashReports;
    return this;
  }

   /**
   * Get storeCrashReports
   * @return storeCrashReports
  **/
  @javax.annotation.Nullable
  public Boolean getStoreCrashReports() {
    return storeCrashReports;
  }


  public void setStoreCrashReports(Boolean storeCrashReports) {
    this.storeCrashReports = storeCrashReports;
  }


  public RetrieveAProject200Response subjectPrefix(String subjectPrefix) {
    
    this.subjectPrefix = subjectPrefix;
    return this;
  }

   /**
   * Get subjectPrefix
   * @return subjectPrefix
  **/
  @javax.annotation.Nonnull
  public String getSubjectPrefix() {
    return subjectPrefix;
  }


  public void setSubjectPrefix(String subjectPrefix) {
    this.subjectPrefix = subjectPrefix;
  }


  public RetrieveAProject200Response subjectTemplate(String subjectTemplate) {
    
    this.subjectTemplate = subjectTemplate;
    return this;
  }

   /**
   * Get subjectTemplate
   * @return subjectTemplate
  **/
  @javax.annotation.Nonnull
  public String getSubjectTemplate() {
    return subjectTemplate;
  }


  public void setSubjectTemplate(String subjectTemplate) {
    this.subjectTemplate = subjectTemplate;
  }


  public RetrieveAProject200Response team(ListAnOrganizationSProjects200ResponseInnerTeamsInner team) {
    
    this.team = team;
    return this;
  }

   /**
   * Get team
   * @return team
  **/
  @javax.annotation.Nonnull
  public ListAnOrganizationSProjects200ResponseInnerTeamsInner getTeam() {
    return team;
  }


  public void setTeam(ListAnOrganizationSProjects200ResponseInnerTeamsInner team) {
    this.team = team;
  }


  public RetrieveAProject200Response teams(List<ListAnOrganizationSProjects200ResponseInnerTeamsInner> teams) {
    
    this.teams = teams;
    return this;
  }

  public RetrieveAProject200Response addTeamsItem(ListAnOrganizationSProjects200ResponseInnerTeamsInner teamsItem) {
    if (this.teams == null) {
      this.teams = new ArrayList<>();
    }
    this.teams.add(teamsItem);
    return this;
  }

   /**
   * Get teams
   * @return teams
  **/
  @javax.annotation.Nonnull
  public List<ListAnOrganizationSProjects200ResponseInnerTeamsInner> getTeams() {
    return teams;
  }


  public void setTeams(List<ListAnOrganizationSProjects200ResponseInnerTeamsInner> teams) {
    this.teams = teams;
  }


  public RetrieveAProject200Response verifySSL(Boolean verifySSL) {
    
    this.verifySSL = verifySSL;
    return this;
  }

   /**
   * Get verifySSL
   * @return verifySSL
  **/
  @javax.annotation.Nonnull
  public Boolean getVerifySSL() {
    return verifySSL;
  }


  public void setVerifySSL(Boolean verifySSL) {
    this.verifySSL = verifySSL;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveAProject200Response retrieveAProject200Response = (RetrieveAProject200Response) o;
    return Objects.equals(this.allowedDomains, retrieveAProject200Response.allowedDomains) &&
        Objects.equals(this.avatar, retrieveAProject200Response.avatar) &&
        Objects.equals(this.color, retrieveAProject200Response.color) &&
        Objects.equals(this.dataScrubber, retrieveAProject200Response.dataScrubber) &&
        Objects.equals(this.dataScrubberDefaults, retrieveAProject200Response.dataScrubberDefaults) &&
        Objects.equals(this.dateCreated, retrieveAProject200Response.dateCreated) &&
        Objects.equals(this.defaultEnvironment, retrieveAProject200Response.defaultEnvironment) &&
        Objects.equals(this.digestsMaxDelay, retrieveAProject200Response.digestsMaxDelay) &&
        Objects.equals(this.digestsMinDelay, retrieveAProject200Response.digestsMinDelay) &&
        Objects.equals(this.features, retrieveAProject200Response.features) &&
        Objects.equals(this.firstEvent, retrieveAProject200Response.firstEvent) &&
        Objects.equals(this.hasAccess, retrieveAProject200Response.hasAccess) &&
        Objects.equals(this.id, retrieveAProject200Response.id) &&
        Objects.equals(this.isBookmarked, retrieveAProject200Response.isBookmarked) &&
        Objects.equals(this.isInternal, retrieveAProject200Response.isInternal) &&
        Objects.equals(this.isMember, retrieveAProject200Response.isMember) &&
        Objects.equals(this.isPublic, retrieveAProject200Response.isPublic) &&
        Objects.equals(this.latestRelease, retrieveAProject200Response.latestRelease) &&
        Objects.equals(this.name, retrieveAProject200Response.name) &&
        Objects.equals(this.options, retrieveAProject200Response.options) &&
        Objects.equals(this.organization, retrieveAProject200Response.organization) &&
        Objects.equals(this.platform, retrieveAProject200Response.platform) &&
        Objects.equals(this.platforms, retrieveAProject200Response.platforms) &&
        Objects.equals(this.plugins, retrieveAProject200Response.plugins) &&
        Objects.equals(this.processingIssues, retrieveAProject200Response.processingIssues) &&
        Objects.equals(this.relayPiiConfig, retrieveAProject200Response.relayPiiConfig) &&
        Objects.equals(this.resolveAge, retrieveAProject200Response.resolveAge) &&
        Objects.equals(this.safeFields, retrieveAProject200Response.safeFields) &&
        Objects.equals(this.scrapeJavaScript, retrieveAProject200Response.scrapeJavaScript) &&
        Objects.equals(this.scrubIPAddresses, retrieveAProject200Response.scrubIPAddresses) &&
        Objects.equals(this.securityToken, retrieveAProject200Response.securityToken) &&
        Objects.equals(this.securityTokenHeader, retrieveAProject200Response.securityTokenHeader) &&
        Objects.equals(this.sensitiveFields, retrieveAProject200Response.sensitiveFields) &&
        Objects.equals(this.slug, retrieveAProject200Response.slug) &&
        Objects.equals(this.status, retrieveAProject200Response.status) &&
        Objects.equals(this.storeCrashReports, retrieveAProject200Response.storeCrashReports) &&
        Objects.equals(this.subjectPrefix, retrieveAProject200Response.subjectPrefix) &&
        Objects.equals(this.subjectTemplate, retrieveAProject200Response.subjectTemplate) &&
        Objects.equals(this.team, retrieveAProject200Response.team) &&
        Objects.equals(this.teams, retrieveAProject200Response.teams) &&
        Objects.equals(this.verifySSL, retrieveAProject200Response.verifySSL);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedDomains, avatar, color, dataScrubber, dataScrubberDefaults, dateCreated, defaultEnvironment, digestsMaxDelay, digestsMinDelay, features, firstEvent, hasAccess, id, isBookmarked, isInternal, isMember, isPublic, latestRelease, name, options, organization, platform, platforms, plugins, processingIssues, relayPiiConfig, resolveAge, safeFields, scrapeJavaScript, scrubIPAddresses, securityToken, securityTokenHeader, sensitiveFields, slug, status, storeCrashReports, subjectPrefix, subjectTemplate, team, teams, verifySSL);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveAProject200Response {\n");
    sb.append("    allowedDomains: ").append(toIndentedString(allowedDomains)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    dataScrubber: ").append(toIndentedString(dataScrubber)).append("\n");
    sb.append("    dataScrubberDefaults: ").append(toIndentedString(dataScrubberDefaults)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    defaultEnvironment: ").append(toIndentedString(defaultEnvironment)).append("\n");
    sb.append("    digestsMaxDelay: ").append(toIndentedString(digestsMaxDelay)).append("\n");
    sb.append("    digestsMinDelay: ").append(toIndentedString(digestsMinDelay)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    firstEvent: ").append(toIndentedString(firstEvent)).append("\n");
    sb.append("    hasAccess: ").append(toIndentedString(hasAccess)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isBookmarked: ").append(toIndentedString(isBookmarked)).append("\n");
    sb.append("    isInternal: ").append(toIndentedString(isInternal)).append("\n");
    sb.append("    isMember: ").append(toIndentedString(isMember)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    latestRelease: ").append(toIndentedString(latestRelease)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    platforms: ").append(toIndentedString(platforms)).append("\n");
    sb.append("    plugins: ").append(toIndentedString(plugins)).append("\n");
    sb.append("    processingIssues: ").append(toIndentedString(processingIssues)).append("\n");
    sb.append("    relayPiiConfig: ").append(toIndentedString(relayPiiConfig)).append("\n");
    sb.append("    resolveAge: ").append(toIndentedString(resolveAge)).append("\n");
    sb.append("    safeFields: ").append(toIndentedString(safeFields)).append("\n");
    sb.append("    scrapeJavaScript: ").append(toIndentedString(scrapeJavaScript)).append("\n");
    sb.append("    scrubIPAddresses: ").append(toIndentedString(scrubIPAddresses)).append("\n");
    sb.append("    securityToken: ").append(toIndentedString(securityToken)).append("\n");
    sb.append("    securityTokenHeader: ").append(toIndentedString(securityTokenHeader)).append("\n");
    sb.append("    sensitiveFields: ").append(toIndentedString(sensitiveFields)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    storeCrashReports: ").append(toIndentedString(storeCrashReports)).append("\n");
    sb.append("    subjectPrefix: ").append(toIndentedString(subjectPrefix)).append("\n");
    sb.append("    subjectTemplate: ").append(toIndentedString(subjectTemplate)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("    verifySSL: ").append(toIndentedString(verifySSL)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowedDomains");
    openapiFields.add("avatar");
    openapiFields.add("color");
    openapiFields.add("dataScrubber");
    openapiFields.add("dataScrubberDefaults");
    openapiFields.add("dateCreated");
    openapiFields.add("defaultEnvironment");
    openapiFields.add("digestsMaxDelay");
    openapiFields.add("digestsMinDelay");
    openapiFields.add("features");
    openapiFields.add("firstEvent");
    openapiFields.add("hasAccess");
    openapiFields.add("id");
    openapiFields.add("isBookmarked");
    openapiFields.add("isInternal");
    openapiFields.add("isMember");
    openapiFields.add("isPublic");
    openapiFields.add("latestRelease");
    openapiFields.add("name");
    openapiFields.add("options");
    openapiFields.add("organization");
    openapiFields.add("platform");
    openapiFields.add("platforms");
    openapiFields.add("plugins");
    openapiFields.add("processingIssues");
    openapiFields.add("relayPiiConfig");
    openapiFields.add("resolveAge");
    openapiFields.add("safeFields");
    openapiFields.add("scrapeJavaScript");
    openapiFields.add("scrubIPAddresses");
    openapiFields.add("securityToken");
    openapiFields.add("securityTokenHeader");
    openapiFields.add("sensitiveFields");
    openapiFields.add("slug");
    openapiFields.add("status");
    openapiFields.add("storeCrashReports");
    openapiFields.add("subjectPrefix");
    openapiFields.add("subjectTemplate");
    openapiFields.add("team");
    openapiFields.add("teams");
    openapiFields.add("verifySSL");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("allowedDomains");
    openapiRequiredFields.add("avatar");
    openapiRequiredFields.add("color");
    openapiRequiredFields.add("dataScrubber");
    openapiRequiredFields.add("dataScrubberDefaults");
    openapiRequiredFields.add("dateCreated");
    openapiRequiredFields.add("defaultEnvironment");
    openapiRequiredFields.add("digestsMaxDelay");
    openapiRequiredFields.add("digestsMinDelay");
    openapiRequiredFields.add("features");
    openapiRequiredFields.add("firstEvent");
    openapiRequiredFields.add("hasAccess");
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("isBookmarked");
    openapiRequiredFields.add("isInternal");
    openapiRequiredFields.add("isMember");
    openapiRequiredFields.add("isPublic");
    openapiRequiredFields.add("latestRelease");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("options");
    openapiRequiredFields.add("organization");
    openapiRequiredFields.add("platform");
    openapiRequiredFields.add("platforms");
    openapiRequiredFields.add("processingIssues");
    openapiRequiredFields.add("relayPiiConfig");
    openapiRequiredFields.add("resolveAge");
    openapiRequiredFields.add("safeFields");
    openapiRequiredFields.add("scrapeJavaScript");
    openapiRequiredFields.add("scrubIPAddresses");
    openapiRequiredFields.add("securityToken");
    openapiRequiredFields.add("securityTokenHeader");
    openapiRequiredFields.add("sensitiveFields");
    openapiRequiredFields.add("slug");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("storeCrashReports");
    openapiRequiredFields.add("subjectPrefix");
    openapiRequiredFields.add("subjectTemplate");
    openapiRequiredFields.add("team");
    openapiRequiredFields.add("teams");
    openapiRequiredFields.add("verifySSL");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RetrieveAProject200Response
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!RetrieveAProject200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RetrieveAProject200Response is not found in the empty JSON string", RetrieveAProject200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!RetrieveAProject200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RetrieveAProject200Response` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RetrieveAProject200Response.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the required json array is present
      if (jsonObj.get("allowedDomains") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("allowedDomains").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowedDomains` to be an array in the JSON string but got `%s`", jsonObj.get("allowedDomains").toString()));
      }
      // validate the required field `avatar`
      RetrieveATeam200ResponseAvatar.validateJsonObject(jsonObj.getAsJsonObject("avatar"));
      if (!jsonObj.get("color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("color").toString()));
      }
      if (!jsonObj.get("dateCreated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateCreated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateCreated").toString()));
      }
      if (!jsonObj.get("defaultEnvironment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultEnvironment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultEnvironment").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("features") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("features").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `features` to be an array in the JSON string but got `%s`", jsonObj.get("features").toString()));
      }
      if (!jsonObj.get("firstEvent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstEvent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstEvent").toString()));
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the required field `latestRelease`
      RetrieveAProject200ResponseLatestRelease.validateJsonObject(jsonObj.getAsJsonObject("latestRelease"));
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the required field `options`
      RetrieveAProject200ResponseOptions.validateJsonObject(jsonObj.getAsJsonObject("options"));
      // validate the required field `organization`
      RetrieveATeam200ResponseOrganization.validateJsonObject(jsonObj.getAsJsonObject("organization"));
      if (!jsonObj.get("platform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("platforms") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("platforms").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `platforms` to be an array in the JSON string but got `%s`", jsonObj.get("platforms").toString()));
      }
      if (jsonObj.get("plugins") != null && !jsonObj.get("plugins").isJsonNull()) {
        JsonArray jsonArrayplugins = jsonObj.getAsJsonArray("plugins");
        if (jsonArrayplugins != null) {
          // ensure the json data is an array
          if (!jsonObj.get("plugins").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `plugins` to be an array in the JSON string but got `%s`", jsonObj.get("plugins").toString()));
          }

          // validate the optional field `plugins` (array)
          for (int i = 0; i < jsonArrayplugins.size(); i++) {
            RetrieveAProject200ResponsePluginsInner.validateJsonObject(jsonArrayplugins.get(i).getAsJsonObject());
          };
        }
      }
      if (!jsonObj.get("relayPiiConfig").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relayPiiConfig` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relayPiiConfig").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("safeFields") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("safeFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `safeFields` to be an array in the JSON string but got `%s`", jsonObj.get("safeFields").toString()));
      }
      if (!jsonObj.get("securityToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `securityToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("securityToken").toString()));
      }
      if (!jsonObj.get("securityTokenHeader").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `securityTokenHeader` to be a primitive type in the JSON string but got `%s`", jsonObj.get("securityTokenHeader").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("sensitiveFields") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("sensitiveFields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `sensitiveFields` to be an array in the JSON string but got `%s`", jsonObj.get("sensitiveFields").toString()));
      }
      if (!jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (!jsonObj.get("subjectPrefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subjectPrefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subjectPrefix").toString()));
      }
      if (!jsonObj.get("subjectTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subjectTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subjectTemplate").toString()));
      }
      // validate the required field `team`
      ListAnOrganizationSProjects200ResponseInnerTeamsInner.validateJsonObject(jsonObj.getAsJsonObject("team"));
      // ensure the json data is an array
      if (!jsonObj.get("teams").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `teams` to be an array in the JSON string but got `%s`", jsonObj.get("teams").toString()));
      }

      JsonArray jsonArrayteams = jsonObj.getAsJsonArray("teams");
      // validate the required field `teams` (array)
      for (int i = 0; i < jsonArrayteams.size(); i++) {
        ListAnOrganizationSProjects200ResponseInnerTeamsInner.validateJsonObject(jsonArrayteams.get(i).getAsJsonObject());
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RetrieveAProject200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RetrieveAProject200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RetrieveAProject200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RetrieveAProject200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<RetrieveAProject200Response>() {
           @Override
           public void write(JsonWriter out, RetrieveAProject200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RetrieveAProject200Response read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RetrieveAProject200Response given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RetrieveAProject200Response
  * @throws IOException if the JSON string is invalid with respect to RetrieveAProject200Response
  */
  public static RetrieveAProject200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RetrieveAProject200Response.class);
  }

 /**
  * Convert an instance of RetrieveAProject200Response to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

